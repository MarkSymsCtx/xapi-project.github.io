[ { "name": "session",
"fields": [ 
  { "name": "originator",
    "description": "a key string provided by a API user to distinguish itself from other users sharing the same login name",
    "type": "string",
    "tag": "" }, 
  { "name": "parent",
    "description": "references the parent session that created this session",
    "type": "session ref",
    "tag": "" }, 
  { "name": "tasks",
    "description": "list of tasks created using the current session",
    "type": "task ref set",
    "tag": "" }, 
  { "name": "rbac_permissions",
    "description": "list with all RBAC permissions for this session",
    "type": "string set",
    "tag": "" }, 
  { "name": "auth_user_name",
    "description": "the subject name of the user that was externally authenticated. If a session instance has is_local_superuser set, then the value of this field is undefined.",
    "type": "string",
    "tag": "" }, 
  { "name": "auth_user_sid",
    "description": "the subject identifier of the user that was externally authenticated. If a session instance has is_local_superuser set, then the value of this field is undefined.",
    "type": "string",
    "tag": "" }, 
  { "name": "validation_time",
    "description": "time when session was last validated",
    "type": "datetime",
    "tag": "" }, 
  { "name": "subject",
    "description": "references the subject instance that created the session. If a session instance has is_local_superuser set, then the value of this field is undefined.",
    "type": "subject ref",
    "tag": "" }, 
  { "name": "is_local_superuser",
    "description": "true iff this session was created using local superuser credentials",
    "type": "bool",
    "tag": "" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "pool",
    "description": "True if this session relates to a intra-pool login, false otherwise",
    "type": "bool",
    "tag": "" }, 
  { "name": "last_active",
    "description": "Timestamp for last time session was active",
    "type": "datetime",
    "tag": "" }, 
  { "name": "this_user",
    "description": "Currently connected user",
    "type": "user ref",
    "tag": "" }, 
  { "name": "this_host",
    "description": "Currently connected host",
    "type": "host ref",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given session.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the session instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new session instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified session instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given session.",
    "tag": "" }, 
  { "name": "get_this_host",
    "description": "Get the this_host field of the given session.",
    "tag": "" }, 
  { "name": "get_this_user",
    "description": "Get the this_user field of the given session.",
    "tag": "" }, 
  { "name": "get_last_active",
    "description": "Get the last_active field of the given session.",
    "tag": "" }, 
  { "name": "get_pool",
    "description": "Get the pool field of the given session.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given session.",
    "tag": "" }, 
  { "name": "get_is_local_superuser",
    "description": "Get the is_local_superuser field of the given session.",
    "tag": "" }, 
  { "name": "get_subject",
    "description": "Get the subject field of the given session.",
    "tag": "" }, 
  { "name": "get_validation_time",
    "description": "Get the validation_time field of the given session.",
    "tag": "" }, 
  { "name": "get_auth_user_sid",
    "description": "Get the auth_user_sid field of the given session.",
    "tag": "" }, 
  { "name": "get_auth_user_name",
    "description": "Get the auth_user_name field of the given session.",
    "tag": "" }, 
  { "name": "get_rbac_permissions",
    "description": "Get the rbac_permissions field of the given session.",
    "tag": "" }, 
  { "name": "get_tasks",
    "description": "Get the tasks field of the given session.",
    "tag": "" }, 
  { "name": "get_parent",
    "description": "Get the parent field of the given session.",
    "tag": "" }, 
  { "name": "get_originator",
    "description": "Get the originator field of the given session.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given session.",
    "tag": "" }, 
  { "name": "set_this_host",
    "description": "Set the this_host field of the given session.",
    "tag": "" }, 
  { "name": "set_this_user",
    "description": "Set the this_user field of the given session.",
    "tag": "" }, 
  { "name": "set_last_active",
    "description": "Set the last_active field of the given session.",
    "tag": "" }, 
  { "name": "set_pool",
    "description": "Set the pool field of the given session.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given session.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given session.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given session.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_is_local_superuser",
    "description": "Set the is_local_superuser field of the given session.",
    "tag": "" }, 
  { "name": "set_subject",
    "description": "Set the subject field of the given session.",
    "tag": "" }, 
  { "name": "set_validation_time",
    "description": "Set the validation_time field of the given session.",
    "tag": "" }, 
  { "name": "set_auth_user_sid",
    "description": "Set the auth_user_sid field of the given session.",
    "tag": "" }, 
  { "name": "set_auth_user_name",
    "description": "Set the auth_user_name field of the given session.",
    "tag": "" }, 
  { "name": "set_rbac_permissions",
    "description": "Set the rbac_permissions field of the given session.",
    "tag": "" }, 
  { "name": "add_rbac_permissions",
    "description": "Add the given value to the rbac_permissions field of the given session.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_rbac_permissions",
    "description": "Remove the given value from the rbac_permissions field of the given session.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_parent",
    "description": "Set the parent field of the given session.",
    "tag": "" }, 
  { "name": "set_originator",
    "description": "Set the originator field of the given session.",
    "tag": "" }, 
  { "name": "login_with_password",
    "description": "Attempt to authenticate the user, returning a session reference if successful",
    "tag": "" }, 
  { "name": "logout",
    "description": "Log out of a session",
    "tag": "" }, 
  { "name": "change_password",
    "description": "Change the account password; if your session is authenticated with root priviledges then the old_pwd is validated and the new_pwd is set regardless",
    "tag": "" }, 
  { "name": "slave_local_login_with_password",
    "description": "Authenticate locally against a slave in emergency mode. Note the resulting sessions are only good for use on this host.",
    "tag": "" }, 
  { "name": "local_logout",
    "description": "Log out of local session.",
    "tag": "" }, 
  { "name": "get_all_subject_identifiers",
    "description": "Return a list of all the user subject-identifiers of all existing sessions",
    "tag": "" }, 
  { "name": "logout_subject_identifier",
    "description": "Log out all sessions associated to a user subject-identifier, except the session associated with the context calling this function",
    "tag": "" } ] }, { "name": "auth",
"fields": [  ],
"messages": [ 
  { "name": "get_subject_identifier",
    "description": "This call queries the external directory service to obtain the subject_identifier as a string from the human-readable subject_name",
    "tag": "" }, 
  { "name": "get_subject_information_from_identifier",
    "description": "This call queries the external directory service to obtain the user information (e.g. username, organization etc) from the specified subject_identifier",
    "tag": "" }, 
  { "name": "get_group_membership",
    "description": "This calls queries the external directory service to obtain the transitively-closed set of groups that the the subject_identifier is member of.",
    "tag": "" } ] }, { "name": "subject",
"fields": [ 
  { "name": "roles",
    "description": "the roles associated with this subject",
    "type": "role ref set",
    "tag": "" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "subject_identifier",
    "description": "the subject identifier, unique in the external directory service",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given subject.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the subject instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new subject instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified subject instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given subject.",
    "tag": "" }, 
  { "name": "get_subject_identifier",
    "description": "Get the subject_identifier field of the given subject.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given subject.",
    "tag": "" }, 
  { "name": "get_roles",
    "description": "Get the roles field of the given subject.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given subject.",
    "tag": "" }, 
  { "name": "set_subject_identifier",
    "description": "Set the subject_identifier field of the given subject.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given subject.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given subject.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given subject.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_roles",
    "description": "Set the roles field of the given subject.",
    "tag": "" }, 
  { "name": "add_roles",
    "description": "Add the given value to the roles field of the given subject.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_roles",
    "description": "Remove the given value from the roles field of the given subject.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "add_to_roles",
    "description": "This call adds a new role to a subject",
    "tag": "" }, 
  { "name": "remove_from_roles",
    "description": "This call removes a role from a subject",
    "tag": "" }, 
  { "name": "get_permissions_name_label",
    "description": "This call returns a list of permission names given a subject",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the subjects known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of subject references to subject records for all subjects known to the system.",
    "tag": "" } ] }, { "name": "role",
"fields": [ 
  { "name": "subroles",
    "description": "a list of pointers to other roles or permissions",
    "type": "role ref set",
    "tag": "" }, 
  { "name": "description",
    "description": "what this role is for",
    "type": "string",
    "tag": "" }, 
  { "name": "label",
    "description": "a short user-friendly name for the role",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given role.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the role instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new role instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified role instance.",
    "tag": "" }, 
  { "name": "get_by_name_label",
    "description": "Get all the role instances with the given label.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given role.",
    "tag": "" }, 
  { "name": "get_name_label",
    "description": "Get the name/label field of the given role.",
    "tag": "" }, 
  { "name": "get_name_description",
    "description": "Get the name/description field of the given role.",
    "tag": "" }, 
  { "name": "get_subroles",
    "description": "Get the subroles field of the given role.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given role.",
    "tag": "" }, 
  { "name": "set_name_label",
    "description": "Set the name/label field of the given role.",
    "tag": "" }, 
  { "name": "set_name_description",
    "description": "Set the name/description field of the given role.",
    "tag": "" }, 
  { "name": "set_subroles",
    "description": "Set the subroles field of the given role.",
    "tag": "" }, 
  { "name": "add_subroles",
    "description": "Add the given value to the subroles field of the given role.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_subroles",
    "description": "Remove the given value from the subroles field of the given role.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "get_permissions",
    "description": "This call returns a list of permissions given a role",
    "tag": "" }, 
  { "name": "get_permissions_name_label",
    "description": "This call returns a list of permission names given a role",
    "tag": "" }, 
  { "name": "get_by_permission",
    "description": "This call returns a list of roles given a permission",
    "tag": "" }, 
  { "name": "get_by_permission_name_label",
    "description": "This call returns a list of roles given a permission name",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the roles known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of role references to role records for all roles known to the system.",
    "tag": "" } ] }, { "name": "task",
"fields": [ 
  { "name": "backtrace",
    "description": "Function call trace for debugging.",
    "type": "string",
    "tag": "" }, 
  { "name": "subtasks",
    "description": "List pointing to all the substasks.",
    "type": "task ref set",
    "tag": "" }, 
  { "name": "subtask_of",
    "description": "Ref pointing to the task this is a substask of.",
    "type": "task ref",
    "tag": "" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "error_info",
    "description": "if the task has failed, this field contains the set of associated error strings. Undefined otherwise.",
    "type": "string set",
    "tag": "" }, 
  { "name": "result",
    "description": "if the task has completed successfully, this field contains the result value (either Void or an object reference). Undefined otherwise.",
    "type": "string",
    "tag": "" }, 
  { "name": "type",
    "description": "if the task has completed successfully, this field contains the type of the encoded result (i.e. name of the class whose reference is in the result field). Undefined otherwise.",
    "type": "string",
    "tag": "" }, 
  { "name": "progress",
    "description": "This field contains the estimated fraction of the task which is complete. This field should not be used to determine whether the task is complete - for this the status field of the task should be used.",
    "type": "float",
    "tag": "" }, 
  { "name": "resident_on",
    "description": "the host on which the task is running",
    "type": "host ref",
    "tag": "" }, 
  { "name": "status",
    "description": "current status of the task",
    "type": "enum task_status_type",
    "tag": "" }, 
  { "name": "finished",
    "description": "Time task finished (i.e. succeeded or failed). If task-status is pending, then the value of this field has no meaning",
    "type": "datetime",
    "tag": "" }, 
  { "name": "created",
    "description": "Time task was created",
    "type": "datetime",
    "tag": "" }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum task_allowed_operations) map",
    "tag": "" }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum task_allowed_operations set",
    "tag": "" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "tag": "" }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given task.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the task instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new task instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified task instance.",
    "tag": "" }, 
  { "name": "get_by_name_label",
    "description": "Get all the task instances with the given label.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given task.",
    "tag": "" }, 
  { "name": "get_name_label",
    "description": "Get the name/label field of the given task.",
    "tag": "" }, 
  { "name": "get_name_description",
    "description": "Get the name/description field of the given task.",
    "tag": "" }, 
  { "name": "get_allowed_operations",
    "description": "Get the allowed_operations field of the given task.",
    "tag": "" }, 
  { "name": "get_current_operations",
    "description": "Get the current_operations field of the given task.",
    "tag": "" }, 
  { "name": "get_created",
    "description": "Get the created field of the given task.",
    "tag": "" }, 
  { "name": "get_finished",
    "description": "Get the finished field of the given task.",
    "tag": "" }, 
  { "name": "get_status",
    "description": "Get the status field of the given task.",
    "tag": "" }, 
  { "name": "get_session",
    "description": "Get the session field of the given task.",
    "tag": "" }, 
  { "name": "get_resident_on",
    "description": "Get the resident_on field of the given task.",
    "tag": "" }, 
  { "name": "get_progress",
    "description": "Get the progress field of the given task.",
    "tag": "" }, 
  { "name": "get_externalpid",
    "description": "Get the externalpid field of the given task.",
    "tag": "" }, 
  { "name": "get_stunnelpid",
    "description": "Get the stunnelpid field of the given task.",
    "tag": "" }, 
  { "name": "get_forwarded",
    "description": "Get the forwarded field of the given task.",
    "tag": "" }, 
  { "name": "get_forwarded_to",
    "description": "Get the forwarded_to field of the given task.",
    "tag": "" }, 
  { "name": "get_type",
    "description": "Get the type field of the given task.",
    "tag": "" }, 
  { "name": "get_result",
    "description": "Get the result field of the given task.",
    "tag": "" }, 
  { "name": "get_error_info",
    "description": "Get the error_info field of the given task.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given task.",
    "tag": "" }, 
  { "name": "get_subtask_of",
    "description": "Get the subtask_of field of the given task.",
    "tag": "" }, 
  { "name": "get_subtasks",
    "description": "Get the subtasks field of the given task.",
    "tag": "" }, 
  { "name": "get_backtrace",
    "description": "Get the backtrace field of the given task.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given task.",
    "tag": "" }, 
  { "name": "set_name_label",
    "description": "Set the name/label field of the given task.",
    "tag": "" }, 
  { "name": "set_name_description",
    "description": "Set the name/description field of the given task.",
    "tag": "" }, 
  { "name": "set_allowed_operations",
    "description": "Set the allowed_operations field of the given task.",
    "tag": "" }, 
  { "name": "add_allowed_operations",
    "description": "Add the given value to the allowed_operations field of the given task.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_allowed_operations",
    "description": "Remove the given value from the allowed_operations field of the given task.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_current_operations",
    "description": "Set the current_operations field of the given task.",
    "tag": "" }, 
  { "name": "add_to_current_operations",
    "description": "Add the given key-value pair to the current_operations field of the given task.",
    "tag": "" }, 
  { "name": "remove_from_current_operations",
    "description": "Remove the given key and its corresponding value from the current_operations field of the given task.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_created",
    "description": "Set the created field of the given task.",
    "tag": "" }, 
  { "name": "set_finished",
    "description": "Set the finished field of the given task.",
    "tag": "" }, 
  { "name": "set_status",
    "description": "Set the status field of the given task.",
    "tag": "" }, 
  { "name": "set_session",
    "description": "Set the session field of the given task.",
    "tag": "" }, 
  { "name": "set_resident_on",
    "description": "Set the resident_on field of the given task.",
    "tag": "" }, 
  { "name": "set_progress",
    "description": "Set the progress field of the given task.",
    "tag": "" }, 
  { "name": "set_externalpid",
    "description": "Set the externalpid field of the given task.",
    "tag": "" }, 
  { "name": "set_stunnelpid",
    "description": "Set the stunnelpid field of the given task.",
    "tag": "" }, 
  { "name": "set_forwarded",
    "description": "Set the forwarded field of the given task.",
    "tag": "" }, 
  { "name": "set_forwarded_to",
    "description": "Set the forwarded_to field of the given task.",
    "tag": "" }, 
  { "name": "set_type",
    "description": "Set the type field of the given task.",
    "tag": "" }, 
  { "name": "set_result",
    "description": "Set the result field of the given task.",
    "tag": "" }, 
  { "name": "set_error_info",
    "description": "Set the error_info field of the given task.",
    "tag": "" }, 
  { "name": "add_error_info",
    "description": "Add the given value to the error_info field of the given task.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_error_info",
    "description": "Remove the given value from the error_info field of the given task.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given task.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given task.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given task.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_subtask_of",
    "description": "Set the subtask_of field of the given task.",
    "tag": "" }, 
  { "name": "set_backtrace",
    "description": "Set the backtrace field of the given task.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new task object which must be manually destroyed.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the task object",
    "tag": "" }, 
  { "name": "cancel",
    "description": "Request that a task be cancelled. Note that a task may fail to be cancelled and may complete or fail normally and note that, even when a task does cancel, it might take an arbitrary amount of time.",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the tasks known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of task references to task records for all tasks known to the system.",
    "tag": "" } ] }, { "name": "event",
"fields": [ 
  { "name": "obj_uuid",
    "description": "The uuid of the object that changed",
    "type": "string",
    "tag": "" }, 
  { "name": "ref",
    "description": "A reference to the object that changed",
    "type": "string",
    "tag": "" }, 
  { "name": "operation",
    "description": "The operation that was performed",
    "type": "enum event_operation",
    "tag": "" }, 
  { "name": "class",
    "description": "The name of the class of the object that changed",
    "type": "string",
    "tag": "" }, 
  { "name": "timestamp",
    "description": "The time at which the event occurred",
    "type": "datetime",
    "tag": "" }, 
  { "name": "id",
    "description": "An ID, monotonically increasing, and local to the current session",
    "type": "int",
    "tag": "" } ],
"messages": [ 
  { "name": "register",
    "description": "Registers this session with the event system.  Specifying * as the desired class will register for all classes.",
    "tag": "" }, 
  { "name": "unregister",
    "description": "Unregisters this session with the event system",
    "tag": "" }, 
  { "name": "next",
    "description": "Blocking call which returns a (possibly empty) batch of events. This method is only recommended for legacy use. New development should use event.from which supercedes this method. ",
    "tag": "" }, 
  { "name": "from",
    "description": "Blocking call which returns a new token and a (possibly empty) batch of events. The returned token can be used in subsequent calls to this function.",
    "tag": "" }, 
  { "name": "get_current_id",
    "description": "Return the ID of the next event to be generated by the system",
    "tag": "" }, 
  { "name": "inject",
    "description": "Injects an artificial event on the given object and return the corresponding ID",
    "tag": "" } ] }, { "name": "pool",
"fields": [ 
  { "name": "metadata_VDIs",
    "description": "The set of currently known metadata VDIs for this pool",
    "type": "VDI ref set",
    "tag": "" }, 
  { "name": "restrictions",
    "description": "Pool-wide restrictions currently in effect",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "vswitch_controller",
    "description": "address of the vswitch controller",
    "type": "string",
    "tag": "" }, 
  { "name": "redo_log_vdi",
    "description": "indicates the VDI to use for the redo-log other than when HA is enabled",
    "type": "VDI ref",
    "tag": "" }, 
  { "name": "redo_log_enabled",
    "description": "true a redo-log is to be used other than when HA is enabled, false otherwise",
    "type": "bool",
    "tag": "" }, 
  { "name": "wlb_verify_cert",
    "description": "true if communication with the WLB server should enforce SSL certificate verification.",
    "type": "bool",
    "tag": "" }, 
  { "name": "wlb_enabled",
    "description": "true if workload balancing is enabled on the pool, false otherwise",
    "type": "bool",
    "tag": "" }, 
  { "name": "wlb_username",
    "description": "Username for accessing the workload balancing host",
    "type": "string",
    "tag": "" }, 
  { "name": "wlb_url",
    "description": "Url for the configured workload balancing host",
    "type": "string",
    "tag": "" }, 
  { "name": "gui_config",
    "description": "gui-specific configuration for pool",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "tags",
    "description": "user-specified tags for categorization purposes",
    "type": "string set",
    "tag": "" }, 
  { "name": "blobs",
    "description": "Binary blobs associated with this pool",
    "type": "(string -> blob ref) map",
    "tag": "" }, 
  { "name": "ha_overcommitted",
    "description": "True if the Pool is considered to be overcommitted i.e. if there exist insufficient physical resources to tolerate the configured number of host failures",
    "type": "bool",
    "tag": "" }, 
  { "name": "ha_allow_overcommit",
    "description": "If set to false then operations which would cause the Pool to become overcommitted will be blocked.",
    "type": "bool",
    "tag": "" }, 
  { "name": "ha_plan_exists_for",
    "description": "Number of future host failures we have managed to find a plan for. Once this reaches zero any future host failures will cause the failure of protected VMs.",
    "type": "int",
    "tag": "" }, 
  { "name": "ha_host_failures_to_tolerate",
    "description": "Number of host failures to tolerate before the Pool is declared to be overcommitted",
    "type": "int",
    "tag": "" }, 
  { "name": "ha_statefiles",
    "description": "HA statefile VDIs in use",
    "type": "string set",
    "tag": "" }, 
  { "name": "ha_configuration",
    "description": "The current HA configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "ha_enabled",
    "description": "true if HA is enabled on the pool, false otherwise",
    "type": "bool",
    "tag": "" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "crash_dump_SR",
    "description": "The SR in which VDIs for crash dumps are created",
    "type": "SR ref",
    "tag": "" }, 
  { "name": "suspend_image_SR",
    "description": "The SR in which VDIs for suspend images are created",
    "type": "SR ref",
    "tag": "" }, 
  { "name": "default_SR",
    "description": "Default SR for VDIs",
    "type": "SR ref",
    "tag": "" }, 
  { "name": "master",
    "description": "The host that is pool master",
    "type": "host ref",
    "tag": "" }, 
  { "name": "name_description",
    "description": "Description",
    "type": "string",
    "tag": "" }, 
  { "name": "name_label",
    "description": "Short name",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given pool.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the pool instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new pool instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified pool instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given pool.",
    "tag": "" }, 
  { "name": "get_name_label",
    "description": "Get the name_label field of the given pool.",
    "tag": "" }, 
  { "name": "get_name_description",
    "description": "Get the name_description field of the given pool.",
    "tag": "" }, 
  { "name": "get_master",
    "description": "Get the master field of the given pool.",
    "tag": "" }, 
  { "name": "get_default_SR",
    "description": "Get the default_SR field of the given pool.",
    "tag": "" }, 
  { "name": "get_suspend_image_SR",
    "description": "Get the suspend_image_SR field of the given pool.",
    "tag": "" }, 
  { "name": "get_crash_dump_SR",
    "description": "Get the crash_dump_SR field of the given pool.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given pool.",
    "tag": "" }, 
  { "name": "get_ha_enabled",
    "description": "Get the ha_enabled field of the given pool.",
    "tag": "" }, 
  { "name": "get_ha_configuration",
    "description": "Get the ha_configuration field of the given pool.",
    "tag": "" }, 
  { "name": "get_ha_statefiles",
    "description": "Get the ha_statefiles field of the given pool.",
    "tag": "" }, 
  { "name": "get_ha_host_failures_to_tolerate",
    "description": "Get the ha_host_failures_to_tolerate field of the given pool.",
    "tag": "" }, 
  { "name": "get_ha_plan_exists_for",
    "description": "Get the ha_plan_exists_for field of the given pool.",
    "tag": "" }, 
  { "name": "get_ha_allow_overcommit",
    "description": "Get the ha_allow_overcommit field of the given pool.",
    "tag": "" }, 
  { "name": "get_ha_overcommitted",
    "description": "Get the ha_overcommitted field of the given pool.",
    "tag": "" }, 
  { "name": "get_blobs",
    "description": "Get the blobs field of the given pool.",
    "tag": "" }, 
  { "name": "get_tags",
    "description": "Get the tags field of the given pool.",
    "tag": "" }, 
  { "name": "get_gui_config",
    "description": "Get the gui_config field of the given pool.",
    "tag": "" }, 
  { "name": "get_wlb_url",
    "description": "Get the wlb_url field of the given pool.",
    "tag": "" }, 
  { "name": "get_wlb_username",
    "description": "Get the wlb_username field of the given pool.",
    "tag": "" }, 
  { "name": "get_wlb_password",
    "description": "Get the wlb_password field of the given pool.",
    "tag": "" }, 
  { "name": "get_wlb_enabled",
    "description": "Get the wlb_enabled field of the given pool.",
    "tag": "" }, 
  { "name": "get_wlb_verify_cert",
    "description": "Get the wlb_verify_cert field of the given pool.",
    "tag": "" }, 
  { "name": "get_redo_log_enabled",
    "description": "Get the redo_log_enabled field of the given pool.",
    "tag": "" }, 
  { "name": "get_redo_log_vdi",
    "description": "Get the redo_log_vdi field of the given pool.",
    "tag": "" }, 
  { "name": "get_vswitch_controller",
    "description": "Get the vswitch_controller field of the given pool.",
    "tag": "" }, 
  { "name": "get_restrictions",
    "description": "Get the restrictions field of the given pool.",
    "tag": "" }, 
  { "name": "get_metadata_VDIs",
    "description": "Get the metadata_VDIs field of the given pool.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given pool.",
    "tag": "" }, 
  { "name": "set_name_label",
    "description": "Set the name_label field of the given pool.",
    "tag": "" }, 
  { "name": "set_name_description",
    "description": "Set the name_description field of the given pool.",
    "tag": "" }, 
  { "name": "set_master",
    "description": "Set the master field of the given pool.",
    "tag": "" }, 
  { "name": "set_default_SR",
    "description": "Set the default_SR field of the given pool.",
    "tag": "" }, 
  { "name": "set_suspend_image_SR",
    "description": "Set the suspend_image_SR field of the given pool.",
    "tag": "" }, 
  { "name": "set_crash_dump_SR",
    "description": "Set the crash_dump_SR field of the given pool.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given pool.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given pool.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given pool.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_ha_enabled",
    "description": "Set the ha_enabled field of the given pool.",
    "tag": "" }, 
  { "name": "set_ha_configuration",
    "description": "Set the ha_configuration field of the given pool.",
    "tag": "" }, 
  { "name": "add_to_ha_configuration",
    "description": "Add the given key-value pair to the ha_configuration field of the given pool.",
    "tag": "" }, 
  { "name": "remove_from_ha_configuration",
    "description": "Remove the given key and its corresponding value from the ha_configuration field of the given pool.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_ha_statefiles",
    "description": "Set the ha_statefiles field of the given pool.",
    "tag": "" }, 
  { "name": "add_ha_statefiles",
    "description": "Add the given value to the ha_statefiles field of the given pool.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_ha_statefiles",
    "description": "Remove the given value from the ha_statefiles field of the given pool.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_ha_host_failures_to_tolerate",
    "description": "Set the ha_host_failures_to_tolerate field of the given pool.",
    "tag": "" }, 
  { "name": "set_ha_plan_exists_for",
    "description": "Set the ha_plan_exists_for field of the given pool.",
    "tag": "" }, 
  { "name": "set_ha_allow_overcommit",
    "description": "Set the ha_allow_overcommit field of the given pool.",
    "tag": "" }, 
  { "name": "set_ha_overcommitted",
    "description": "Set the ha_overcommitted field of the given pool.",
    "tag": "" }, 
  { "name": "set_blobs",
    "description": "Set the blobs field of the given pool.",
    "tag": "" }, 
  { "name": "add_to_blobs",
    "description": "Add the given key-value pair to the blobs field of the given pool.",
    "tag": "" }, 
  { "name": "remove_from_blobs",
    "description": "Remove the given key and its corresponding value from the blobs field of the given pool.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_tags",
    "description": "Set the tags field of the given pool.",
    "tag": "" }, 
  { "name": "add_tags",
    "description": "Add the given value to the tags field of the given pool.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_tags",
    "description": "Remove the given value from the tags field of the given pool.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_gui_config",
    "description": "Set the gui_config field of the given pool.",
    "tag": "" }, 
  { "name": "add_to_gui_config",
    "description": "Add the given key-value pair to the gui_config field of the given pool.",
    "tag": "" }, 
  { "name": "remove_from_gui_config",
    "description": "Remove the given key and its corresponding value from the gui_config field of the given pool.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_wlb_url",
    "description": "Set the wlb_url field of the given pool.",
    "tag": "" }, 
  { "name": "set_wlb_username",
    "description": "Set the wlb_username field of the given pool.",
    "tag": "" }, 
  { "name": "set_wlb_password",
    "description": "Set the wlb_password field of the given pool.",
    "tag": "" }, 
  { "name": "set_wlb_enabled",
    "description": "Set the wlb_enabled field of the given pool.",
    "tag": "" }, 
  { "name": "set_wlb_verify_cert",
    "description": "Set the wlb_verify_cert field of the given pool.",
    "tag": "" }, 
  { "name": "set_redo_log_enabled",
    "description": "Set the redo_log_enabled field of the given pool.",
    "tag": "" }, 
  { "name": "set_redo_log_vdi",
    "description": "Set the redo_log_vdi field of the given pool.",
    "tag": "" }, 
  { "name": "set_vswitch_controller",
    "description": "Set the vswitch_controller field of the given pool.",
    "tag": "" }, 
  { "name": "set_restrictions",
    "description": "Set the restrictions field of the given pool.",
    "tag": "" }, 
  { "name": "add_to_restrictions",
    "description": "Add the given key-value pair to the restrictions field of the given pool.",
    "tag": "" }, 
  { "name": "remove_from_restrictions",
    "description": "Remove the given key and its corresponding value from the restrictions field of the given pool.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "join",
    "description": "Instruct host to join a new pool",
    "tag": "" }, 
  { "name": "join_force",
    "description": "Instruct host to join a new pool",
    "tag": "" }, 
  { "name": "eject",
    "description": "Instruct a pool master to eject a host from the pool",
    "tag": "" }, 
  { "name": "emergency_transition_to_master",
    "description": "Instruct host that's currently a slave to transition to being master",
    "tag": "" }, 
  { "name": "emergency_reset_master",
    "description": "Instruct a slave already in a pool that the master has changed",
    "tag": "" }, 
  { "name": "recover_slaves",
    "description": "Instruct a pool master, M, to try and contact its slaves and, if slaves are in emergency mode, reset their master address to M.",
    "tag": "" }, 
  { "name": "create_VLAN",
    "description": "Create PIFs, mapping a network to the same physical interface/VLAN on each host. This call is deprecated: use Pool.create_VLAN_from_PIF instead.",
    "tag": "" }, 
  { "name": "create_VLAN_from_PIF",
    "description": "Create a pool-wide VLAN by taking the PIF.",
    "tag": "" }, 
  { "name": "enable_ha",
    "description": "Turn on High Availability mode",
    "tag": "" }, 
  { "name": "disable_ha",
    "description": "Turn off High Availability mode",
    "tag": "" }, 
  { "name": "sync_database",
    "description": "Forcibly synchronise the database now",
    "tag": "" }, 
  { "name": "designate_new_master",
    "description": "Perform an orderly handover of the role of master to the referenced host.",
    "tag": "" }, 
  { "name": "ha_prevent_restarts_for",
    "description": "When this call returns the VM restart logic will not run for the requested number of seconds. If the argument is zero then the restart thread is immediately unblocked",
    "tag": "" }, 
  { "name": "ha_failover_plan_exists",
    "description": "Returns true if a VM failover plan exists for up to 'n' host failures",
    "tag": "" }, 
  { "name": "ha_compute_max_host_failures_to_tolerate",
    "description": "Returns the maximum number of host failures we could tolerate before we would be unable to restart configured VMs",
    "tag": "" }, 
  { "name": "ha_compute_hypothetical_max_host_failures_to_tolerate",
    "description": "Returns the maximum number of host failures we could tolerate before we would be unable to restart the provided VMs",
    "tag": "" }, 
  { "name": "ha_compute_vm_failover_plan",
    "description": "Return a VM failover plan assuming a given subset of hosts fail",
    "tag": "" }, 
  { "name": "set_ha_host_failures_to_tolerate",
    "description": "Set the maximum number of host failures to consider in the HA VM restart planner",
    "tag": "" }, 
  { "name": "create_new_blob",
    "description": "Create a placeholder for a named binary blob of data that is associated with this pool",
    "tag": "" }, 
  { "name": "enable_external_auth",
    "description": "This call enables external authentication on all the hosts of the pool",
    "tag": "" }, 
  { "name": "disable_external_auth",
    "description": "This call disables external authentication on all the hosts of the pool",
    "tag": "" }, 
  { "name": "detect_nonhomogeneous_external_auth",
    "description": "This call asynchronously detects if the external authentication configuration in any slave is different from that in the master and raises appropriate alerts",
    "tag": "" }, 
  { "name": "initialize_wlb",
    "description": "Initializes workload balancing monitoring on this pool with the specified wlb server",
    "tag": "" }, 
  { "name": "deconfigure_wlb",
    "description": "Permanently deconfigures workload balancing monitoring on this pool",
    "tag": "" }, 
  { "name": "send_wlb_configuration",
    "description": "Sets the pool optimization criteria for the workload balancing server",
    "tag": "" }, 
  { "name": "retrieve_wlb_configuration",
    "description": "Retrieves the pool optimization criteria from the workload balancing server",
    "tag": "" }, 
  { "name": "retrieve_wlb_recommendations",
    "description": "Retrieves vm migrate recommendations for the pool from the workload balancing server",
    "tag": "" }, 
  { "name": "send_test_post",
    "description": "Send the given body to the given host and port, using HTTPS, and print the response.  This is used for debugging the SSL layer.",
    "tag": "" }, 
  { "name": "certificate_install",
    "description": "Install an SSL certificate pool-wide.",
    "tag": "" }, 
  { "name": "certificate_uninstall",
    "description": "Remove an SSL certificate.",
    "tag": "" }, 
  { "name": "certificate_list",
    "description": "List all installed SSL certificates.",
    "tag": "" }, 
  { "name": "crl_install",
    "description": "Install an SSL certificate revocation list, pool-wide.",
    "tag": "" }, 
  { "name": "crl_uninstall",
    "description": "Remove an SSL certificate revocation list.",
    "tag": "" }, 
  { "name": "crl_list",
    "description": "List all installed SSL certificate revocation lists.",
    "tag": "" }, 
  { "name": "certificate_sync",
    "description": "Sync SSL certificates from master to slaves.",
    "tag": "" }, 
  { "name": "enable_redo_log",
    "description": "Enable the redo log on the given SR and start using it, unless HA is enabled.",
    "tag": "" }, 
  { "name": "disable_redo_log",
    "description": "Disable the redo log if in use, unless HA is enabled.",
    "tag": "" }, 
  { "name": "set_vswitch_controller",
    "description": "Set the IP address of the vswitch controller.",
    "tag": "" }, 
  { "name": "test_archive_target",
    "description": "This call tests if a location is valid",
    "tag": "" }, 
  { "name": "enable_local_storage_caching",
    "description": "This call attempts to enable pool-wide local storage caching",
    "tag": "" }, 
  { "name": "disable_local_storage_caching",
    "description": "This call disables pool-wide local storage caching",
    "tag": "" }, 
  { "name": "get_license_state",
    "description": "This call returns the license state for the pool",
    "tag": "" }, 
  { "name": "apply_edition",
    "description": "Apply an edition to all hosts in the pool",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the pools known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of pool references to pool records for all pools known to the system.",
    "tag": "" } ] }, { "name": "pool_patch",
"fields": [ 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "after_apply_guidance",
    "description": "What the client should do after this patch has been applied.",
    "type": "enum after_apply_guidance set",
    "tag": "" }, 
  { "name": "host_patches",
    "description": "This hosts this patch is applied to.",
    "type": "host_patch ref set",
    "tag": "" }, 
  { "name": "pool_applied",
    "description": "This patch should be applied across the entire pool",
    "type": "bool",
    "tag": "" }, 
  { "name": "size",
    "description": "Size of the patch",
    "type": "int",
    "tag": "" }, 
  { "name": "version",
    "description": "Patch version number",
    "type": "string",
    "tag": "" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "tag": "" }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given pool_patch.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the pool_patch instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new pool_patch instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified pool_patch instance.",
    "tag": "" }, 
  { "name": "get_by_name_label",
    "description": "Get all the pool_patch instances with the given label.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given pool_patch.",
    "tag": "" }, 
  { "name": "get_name_label",
    "description": "Get the name/label field of the given pool_patch.",
    "tag": "" }, 
  { "name": "get_name_description",
    "description": "Get the name/description field of the given pool_patch.",
    "tag": "" }, 
  { "name": "get_version",
    "description": "Get the version field of the given pool_patch.",
    "tag": "" }, 
  { "name": "get_filename",
    "description": "Get the filename field of the given pool_patch.",
    "tag": "" }, 
  { "name": "get_size",
    "description": "Get the size field of the given pool_patch.",
    "tag": "" }, 
  { "name": "get_pool_applied",
    "description": "Get the pool_applied field of the given pool_patch.",
    "tag": "" }, 
  { "name": "get_host_patches",
    "description": "Get the host_patches field of the given pool_patch.",
    "tag": "" }, 
  { "name": "get_after_apply_guidance",
    "description": "Get the after_apply_guidance field of the given pool_patch.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given pool_patch.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given pool_patch.",
    "tag": "" }, 
  { "name": "set_name_label",
    "description": "Set the name/label field of the given pool_patch.",
    "tag": "" }, 
  { "name": "set_name_description",
    "description": "Set the name/description field of the given pool_patch.",
    "tag": "" }, 
  { "name": "set_version",
    "description": "Set the version field of the given pool_patch.",
    "tag": "" }, 
  { "name": "set_filename",
    "description": "Set the filename field of the given pool_patch.",
    "tag": "" }, 
  { "name": "set_size",
    "description": "Set the size field of the given pool_patch.",
    "tag": "" }, 
  { "name": "set_pool_applied",
    "description": "Set the pool_applied field of the given pool_patch.",
    "tag": "" }, 
  { "name": "set_after_apply_guidance",
    "description": "Set the after_apply_guidance field of the given pool_patch.",
    "tag": "" }, 
  { "name": "add_after_apply_guidance",
    "description": "Add the given value to the after_apply_guidance field of the given pool_patch.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_after_apply_guidance",
    "description": "Remove the given value from the after_apply_guidance field of the given pool_patch.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given pool_patch.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given pool_patch.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given pool_patch.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "apply",
    "description": "Apply the selected patch to a host and return its output",
    "tag": "" }, 
  { "name": "pool_apply",
    "description": "Apply the selected patch to all hosts in the pool and return a map of host_ref -> patch output",
    "tag": "" }, 
  { "name": "precheck",
    "description": "Execute the precheck stage of the selected patch on a host and return its output",
    "tag": "" }, 
  { "name": "clean",
    "description": "Removes the patch's files from the server",
    "tag": "" }, 
  { "name": "pool_clean",
    "description": "Removes the patch's files from all hosts in the pool, but does not remove the database entries",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Removes the patch's files from all hosts in the pool, and removes the database entries.  Only works on unapplied patches.",
    "tag": "" }, 
  { "name": "clean_on_host",
    "description": "Removes the patch's files from the specified host",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the pool_patchs known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of pool_patch references to pool_patch records for all pool_patchs known to the system.",
    "tag": "" } ] }, { "name": "VM",
"fields": [ 
  { "name": "generation_id",
    "description": "Generation ID of the VM",
    "type": "string",
    "tag": "" }, 
  { "name": "version",
    "description": "The number of times this VM has been recovered",
    "type": "int",
    "tag": "" }, 
  { "name": "suspend_SR",
    "description": "The SR on which a suspend image is stored",
    "type": "SR ref",
    "tag": "" }, 
  { "name": "attached_PCIs",
    "description": "Currently passed-through PCI devices",
    "type": "PCI ref set",
    "tag": "" }, 
  { "name": "VGPUs",
    "description": "Virtual GPUs",
    "type": "VGPU ref set",
    "tag": "" }, 
  { "name": "order",
    "description": "The point in the startup or shutdown sequence at which this VM will be started",
    "type": "int",
    "tag": "" }, 
  { "name": "shutdown_delay",
    "description": "The delay to wait before proceeding to the next order in the shutdown sequence (seconds)",
    "type": "int",
    "tag": "" }, 
  { "name": "start_delay",
    "description": "The delay to wait before proceeding to the next order in the startup sequence (seconds)",
    "type": "int",
    "tag": "" }, 
  { "name": "appliance",
    "description": "the appliance to which this VM belongs",
    "type": "VM_appliance ref",
    "tag": "" }, 
  { "name": "is_snapshot_from_vmpp",
    "description": "true if this snapshot was created by the protection policy",
    "type": "bool",
    "tag": "" }, 
  { "name": "protection_policy",
    "description": "Ref pointing to a protection policy for this VM",
    "type": "VMPP ref",
    "tag": "" }, 
  { "name": "bios_strings",
    "description": "BIOS strings",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "children",
    "description": "List pointing to all the children of this VM",
    "type": "VM ref set",
    "tag": "" }, 
  { "name": "parent",
    "description": "Ref pointing to the parent of this VM",
    "type": "VM ref",
    "tag": "" }, 
  { "name": "snapshot_metadata",
    "description": "Encoded information about the VM's metadata this is a snapshot of",
    "type": "string",
    "tag": "" }, 
  { "name": "snapshot_info",
    "description": "Human-readable information concerning this snapshot",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "blocked_operations",
    "description": "List of operations which have been explicitly blocked and an error code",
    "type": "(enum vm_operations -> string) map",
    "tag": "" }, 
  { "name": "tags",
    "description": "user-specified tags for categorization purposes",
    "type": "string set",
    "tag": "" }, 
  { "name": "blobs",
    "description": "Binary blobs associated with this VM",
    "type": "(string -> blob ref) map",
    "tag": "" }, 
  { "name": "transportable_snapshot_id",
    "description": "Transportable ID of the snapshot VM",
    "type": "string",
    "tag": "" }, 
  { "name": "snapshot_time",
    "description": "Date/time when this snapshot was created.",
    "type": "datetime",
    "tag": "" }, 
  { "name": "snapshots",
    "description": "List pointing to all the VM snapshots.",
    "type": "VM ref set",
    "tag": "" }, 
  { "name": "snapshot_of",
    "description": "Ref pointing to the VM this snapshot is of.",
    "type": "VM ref",
    "tag": "" }, 
  { "name": "is_a_snapshot",
    "description": "true if this is a snapshot. Snapshotted VMs can never be started, they are used only for cloning other VMs",
    "type": "bool",
    "tag": "" }, 
  { "name": "ha_restart_priority",
    "description": "has possible values: \"best-effort\" meaning \"try to restart this VM if possible but don't consider the Pool to be overcommitted if this is not possible\"; \"restart\" meaning \"this VM should be restarted\"; \"\" meaning \"do not try to restart this VM\"",
    "type": "string",
    "tag": "" }, 
  { "name": "ha_always_run",
    "description": "if true then the system will attempt to keep the VM running as much as possible.",
    "type": "bool",
    "tag": "" }, 
  { "name": "xenstore_data",
    "description": "data to be inserted into the xenstore tree (/local/domain/<domid>/vm-data) after the VM is created.",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "recommendations",
    "description": "An XML specification of recommended values and ranges for properties of this VM",
    "type": "string",
    "tag": "" }, 
  { "name": "last_booted_record",
    "description": "marshalled value containing VM record at time of last boot, updated dynamically to reflect the runtime state of the domain",
    "type": "string",
    "tag": "" }, 
  { "name": "guest_metrics",
    "description": "metrics associated with the running guest",
    "type": "VM_guest_metrics ref",
    "tag": "" }, 
  { "name": "metrics",
    "description": "metrics associated with this VM",
    "type": "VM_metrics ref",
    "tag": "" }, 
  { "name": "is_control_domain",
    "description": "true if this is a control domain (domain 0 or a driver domain)",
    "type": "bool",
    "tag": "" }, 
  { "name": "last_boot_CPU_flags",
    "description": "describes the CPU flags on which the VM was last booted",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "domarch",
    "description": "Domain architecture (if available, null string otherwise)",
    "type": "string",
    "tag": "" }, 
  { "name": "domid",
    "description": "domain ID (if available, -1 otherwise)",
    "type": "int",
    "tag": "" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "PCI_bus",
    "description": "PCI bus path for pass-through devices",
    "type": "string",
    "tag": "" }, 
  { "name": "platform",
    "description": "platform-specific configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "shadow_multiplier",
    "description": "multiplier applied to the amount of shadow that will be made available to the guest",
    "type": "float",
    "tag": "" }, 
  { "name": "boot_params",
    "description": "HVM boot params",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "boot_policy",
    "description": "HVM boot policy",
    "type": "string",
    "tag": "" }, 
  { "name": "legacy_args",
    "description": "to make Zurich guests boot",
    "type": "string",
    "tag": "" }, 
  { "name": "bootloader_args",
    "description": "miscellaneous arguments for the bootloader",
    "type": "string",
    "tag": "" }, 
  { "name": "args",
    "description": "kernel command-line arguments",
    "type": "string",
    "tag": "" }, 
  { "name": "ramdisk",
    "description": "path to the initrd",
    "type": "string",
    "tag": "" }, 
  { "name": "kernel",
    "description": "path to the kernel",
    "type": "string",
    "tag": "" }, 
  { "name": "bootloader",
    "description": "name of or path to bootloader",
    "type": "string",
    "tag": "" }, 
  { "name": "VTPMs",
    "description": "virtual TPMs",
    "type": "VTPM ref set",
    "tag": "" }, 
  { "name": "crash_dumps",
    "description": "crash dumps associated with this VM",
    "type": "crashdump ref set",
    "tag": "" }, 
  { "name": "VBDs",
    "description": "virtual block devices",
    "type": "VBD ref set",
    "tag": "" }, 
  { "name": "VIFs",
    "description": "virtual network interfaces",
    "type": "VIF ref set",
    "tag": "" }, 
  { "name": "consoles",
    "description": "virtual console devices",
    "type": "console ref set",
    "tag": "" }, 
  { "name": "after_crash",
    "description": "action to take if the guest crashes",
    "type": "enum on_crash_behaviour",
    "tag": "" }, 
  { "name": "after_reboot",
    "description": "action to take after the guest has rebooted itself",
    "type": "enum on_normal_exit",
    "tag": "" }, 
  { "name": "after_shutdown",
    "description": "action to take after the guest has shutdown itself",
    "type": "enum on_normal_exit",
    "tag": "" }, 
  { "name": "at_startup",
    "description": "Boot number of VCPUs",
    "type": "int",
    "tag": "" }, 
  { "name": "max",
    "description": "Max number of VCPUs",
    "type": "int",
    "tag": "" }, 
  { "name": "params",
    "description": "configuration parameters for the selected VCPU policy",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "static_min",
    "description": "Statically-set (i.e. absolute) mininum (bytes). The value of this field indicates the least amount of memory this VM can boot with without crashing.",
    "type": "int",
    "tag": "" }, 
  { "name": "dynamic_min",
    "description": "Dynamic minimum (bytes)",
    "type": "int",
    "tag": "" }, 
  { "name": "dynamic_max",
    "description": "Dynamic maximum (bytes)",
    "type": "int",
    "tag": "" }, 
  { "name": "static_max",
    "description": "Statically-set (i.e. absolute) maximum (bytes). The value of this field at VM start time acts as a hard limit of the amount of memory a guest can use. New values only take effect on reboot.",
    "type": "int",
    "tag": "" }, 
  { "name": "target",
    "description": "Dynamically-set memory target (bytes). The value of this field indicates the current target for memory available to this VM.",
    "type": "int",
    "tag": "" }, 
  { "name": "overhead",
    "description": "Virtualization memory overhead (bytes).",
    "type": "int",
    "tag": "" }, 
  { "name": "affinity",
    "description": "a host which the VM has some affinity for (or NULL). This is used as a hint to the start call when it decides where to run the VM. Implementations are free to ignore this field.",
    "type": "host ref",
    "tag": "" }, 
  { "name": "resident_on",
    "description": "the host the VM is currently resident on",
    "type": "host ref",
    "tag": "" }, 
  { "name": "suspend_VDI",
    "description": "The VDI that a suspend image is stored on. (Only has meaning if VM is currently suspended)",
    "type": "VDI ref",
    "tag": "" }, 
  { "name": "is_a_template",
    "description": "true if this is a template. Template VMs can never be started, they are used only for cloning other VMs",
    "type": "bool",
    "tag": "" }, 
  { "name": "user_version",
    "description": "a user version number for this machine",
    "type": "int",
    "tag": "" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "tag": "" }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "tag": "" }, 
  { "name": "power_state",
    "description": "Current power state of the machine",
    "type": "enum vm_power_state",
    "tag": "" }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum vm_operations) map",
    "tag": "" }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum vm_operations set",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given VM.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the VM instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new VM instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified VM.  The VM is completely removed from the system.  This function can only be called when the VM is in the Halted State.",
    "tag": "" }, 
  { "name": "get_by_name_label",
    "description": "Get all the VM instances with the given label.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given VM.",
    "tag": "" }, 
  { "name": "get_allowed_operations",
    "description": "Get the allowed_operations field of the given VM.",
    "tag": "" }, 
  { "name": "get_current_operations",
    "description": "Get the current_operations field of the given VM.",
    "tag": "" }, 
  { "name": "get_power_state",
    "description": "Get the power_state field of the given VM.",
    "tag": "" }, 
  { "name": "get_name_label",
    "description": "Get the name/label field of the given VM.",
    "tag": "" }, 
  { "name": "get_name_description",
    "description": "Get the name/description field of the given VM.",
    "tag": "" }, 
  { "name": "get_user_version",
    "description": "Get the user_version field of the given VM.",
    "tag": "" }, 
  { "name": "get_is_a_template",
    "description": "Get the is_a_template field of the given VM.",
    "tag": "" }, 
  { "name": "get_suspend_VDI",
    "description": "Get the suspend_VDI field of the given VM.",
    "tag": "" }, 
  { "name": "get_resident_on",
    "description": "Get the resident_on field of the given VM.",
    "tag": "" }, 
  { "name": "get_scheduled_to_be_resident_on",
    "description": "Get the scheduled_to_be_resident_on field of the given VM.",
    "tag": "" }, 
  { "name": "get_affinity",
    "description": "Get the affinity field of the given VM.",
    "tag": "" }, 
  { "name": "get_memory_overhead",
    "description": "Get the memory/overhead field of the given VM.",
    "tag": "" }, 
  { "name": "get_memory_target",
    "description": "Get the memory/target field of the given VM.",
    "tag": "" }, 
  { "name": "get_memory_static_max",
    "description": "Get the memory/static_max field of the given VM.",
    "tag": "" }, 
  { "name": "get_memory_dynamic_max",
    "description": "Get the memory/dynamic_max field of the given VM.",
    "tag": "" }, 
  { "name": "get_memory_dynamic_min",
    "description": "Get the memory/dynamic_min field of the given VM.",
    "tag": "" }, 
  { "name": "get_memory_static_min",
    "description": "Get the memory/static_min field of the given VM.",
    "tag": "" }, 
  { "name": "get_VCPUs_params",
    "description": "Get the VCPUs/params field of the given VM.",
    "tag": "" }, 
  { "name": "get_VCPUs_max",
    "description": "Get the VCPUs/max field of the given VM.",
    "tag": "" }, 
  { "name": "get_VCPUs_at_startup",
    "description": "Get the VCPUs/at_startup field of the given VM.",
    "tag": "" }, 
  { "name": "get_actions_after_shutdown",
    "description": "Get the actions/after_shutdown field of the given VM.",
    "tag": "" }, 
  { "name": "get_actions_after_reboot",
    "description": "Get the actions/after_reboot field of the given VM.",
    "tag": "" }, 
  { "name": "get_actions_after_crash",
    "description": "Get the actions/after_crash field of the given VM.",
    "tag": "" }, 
  { "name": "get_consoles",
    "description": "Get the consoles field of the given VM.",
    "tag": "" }, 
  { "name": "get_VIFs",
    "description": "Get the VIFs field of the given VM.",
    "tag": "" }, 
  { "name": "get_VBDs",
    "description": "Get the VBDs field of the given VM.",
    "tag": "" }, 
  { "name": "get_crash_dumps",
    "description": "Get the crash_dumps field of the given VM.",
    "tag": "" }, 
  { "name": "get_VTPMs",
    "description": "Get the VTPMs field of the given VM.",
    "tag": "" }, 
  { "name": "get_PV_bootloader",
    "description": "Get the PV/bootloader field of the given VM.",
    "tag": "" }, 
  { "name": "get_PV_kernel",
    "description": "Get the PV/kernel field of the given VM.",
    "tag": "" }, 
  { "name": "get_PV_ramdisk",
    "description": "Get the PV/ramdisk field of the given VM.",
    "tag": "" }, 
  { "name": "get_PV_args",
    "description": "Get the PV/args field of the given VM.",
    "tag": "" }, 
  { "name": "get_PV_bootloader_args",
    "description": "Get the PV/bootloader_args field of the given VM.",
    "tag": "" }, 
  { "name": "get_PV_legacy_args",
    "description": "Get the PV/legacy_args field of the given VM.",
    "tag": "" }, 
  { "name": "get_HVM_boot_policy",
    "description": "Get the HVM/boot_policy field of the given VM.",
    "tag": "" }, 
  { "name": "get_HVM_boot_params",
    "description": "Get the HVM/boot_params field of the given VM.",
    "tag": "" }, 
  { "name": "get_HVM_shadow_multiplier",
    "description": "Get the HVM/shadow_multiplier field of the given VM.",
    "tag": "" }, 
  { "name": "get_platform",
    "description": "Get the platform field of the given VM.",
    "tag": "" }, 
  { "name": "get_PCI_bus",
    "description": "Get the PCI_bus field of the given VM.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given VM.",
    "tag": "" }, 
  { "name": "get_domid",
    "description": "Get the domid field of the given VM.",
    "tag": "" }, 
  { "name": "get_domarch",
    "description": "Get the domarch field of the given VM.",
    "tag": "" }, 
  { "name": "get_last_boot_CPU_flags",
    "description": "Get the last_boot_CPU_flags field of the given VM.",
    "tag": "" }, 
  { "name": "get_is_control_domain",
    "description": "Get the is_control_domain field of the given VM.",
    "tag": "" }, 
  { "name": "get_metrics",
    "description": "Get the metrics field of the given VM.",
    "tag": "" }, 
  { "name": "get_guest_metrics",
    "description": "Get the guest_metrics field of the given VM.",
    "tag": "" }, 
  { "name": "get_last_booted_record",
    "description": "Get the last_booted_record field of the given VM.",
    "tag": "" }, 
  { "name": "get_recommendations",
    "description": "Get the recommendations field of the given VM.",
    "tag": "" }, 
  { "name": "get_xenstore_data",
    "description": "Get the xenstore_data field of the given VM.",
    "tag": "" }, 
  { "name": "get_ha_always_run",
    "description": "Get the ha_always_run field of the given VM.",
    "tag": "" }, 
  { "name": "get_ha_restart_priority",
    "description": "Get the ha_restart_priority field of the given VM.",
    "tag": "" }, 
  { "name": "get_is_a_snapshot",
    "description": "Get the is_a_snapshot field of the given VM.",
    "tag": "" }, 
  { "name": "get_snapshot_of",
    "description": "Get the snapshot_of field of the given VM.",
    "tag": "" }, 
  { "name": "get_snapshots",
    "description": "Get the snapshots field of the given VM.",
    "tag": "" }, 
  { "name": "get_snapshot_time",
    "description": "Get the snapshot_time field of the given VM.",
    "tag": "" }, 
  { "name": "get_transportable_snapshot_id",
    "description": "Get the transportable_snapshot_id field of the given VM.",
    "tag": "" }, 
  { "name": "get_blobs",
    "description": "Get the blobs field of the given VM.",
    "tag": "" }, 
  { "name": "get_tags",
    "description": "Get the tags field of the given VM.",
    "tag": "" }, 
  { "name": "get_blocked_operations",
    "description": "Get the blocked_operations field of the given VM.",
    "tag": "" }, 
  { "name": "get_snapshot_info",
    "description": "Get the snapshot_info field of the given VM.",
    "tag": "" }, 
  { "name": "get_snapshot_metadata",
    "description": "Get the snapshot_metadata field of the given VM.",
    "tag": "" }, 
  { "name": "get_parent",
    "description": "Get the parent field of the given VM.",
    "tag": "" }, 
  { "name": "get_children",
    "description": "Get the children field of the given VM.",
    "tag": "" }, 
  { "name": "get_bios_strings",
    "description": "Get the bios_strings field of the given VM.",
    "tag": "" }, 
  { "name": "get_protection_policy",
    "description": "Get the protection_policy field of the given VM.",
    "tag": "" }, 
  { "name": "get_is_snapshot_from_vmpp",
    "description": "Get the is_snapshot_from_vmpp field of the given VM.",
    "tag": "" }, 
  { "name": "get_appliance",
    "description": "Get the appliance field of the given VM.",
    "tag": "" }, 
  { "name": "get_start_delay",
    "description": "Get the start_delay field of the given VM.",
    "tag": "" }, 
  { "name": "get_shutdown_delay",
    "description": "Get the shutdown_delay field of the given VM.",
    "tag": "" }, 
  { "name": "get_order",
    "description": "Get the order field of the given VM.",
    "tag": "" }, 
  { "name": "get_VGPUs",
    "description": "Get the VGPUs field of the given VM.",
    "tag": "" }, 
  { "name": "get_attached_PCIs",
    "description": "Get the attached_PCIs field of the given VM.",
    "tag": "" }, 
  { "name": "get_suspend_SR",
    "description": "Get the suspend_SR field of the given VM.",
    "tag": "" }, 
  { "name": "get_version",
    "description": "Get the version field of the given VM.",
    "tag": "" }, 
  { "name": "get_generation_id",
    "description": "Get the generation_id field of the given VM.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given VM.",
    "tag": "" }, 
  { "name": "set_allowed_operations",
    "description": "Set the allowed_operations field of the given VM.",
    "tag": "" }, 
  { "name": "add_allowed_operations",
    "description": "Add the given value to the allowed_operations field of the given VM.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_allowed_operations",
    "description": "Remove the given value from the allowed_operations field of the given VM.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_current_operations",
    "description": "Set the current_operations field of the given VM.",
    "tag": "" }, 
  { "name": "add_to_current_operations",
    "description": "Add the given key-value pair to the current_operations field of the given VM.",
    "tag": "" }, 
  { "name": "remove_from_current_operations",
    "description": "Remove the given key and its corresponding value from the current_operations field of the given VM.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_power_state",
    "description": "Set the power_state field of the given VM.",
    "tag": "" }, 
  { "name": "set_name_label",
    "description": "Set the name/label field of the given VM.",
    "tag": "" }, 
  { "name": "set_name_description",
    "description": "Set the name/description field of the given VM.",
    "tag": "" }, 
  { "name": "set_user_version",
    "description": "Set the user_version field of the given VM.",
    "tag": "" }, 
  { "name": "set_is_a_template",
    "description": "Set the is_a_template field of the given VM.",
    "tag": "" }, 
  { "name": "set_suspend_VDI",
    "description": "Set the suspend_VDI field of the given VM.",
    "tag": "" }, 
  { "name": "set_resident_on",
    "description": "Set the resident_on field of the given VM.",
    "tag": "" }, 
  { "name": "set_scheduled_to_be_resident_on",
    "description": "Set the scheduled_to_be_resident_on field of the given VM.",
    "tag": "" }, 
  { "name": "set_affinity",
    "description": "Set the affinity field of the given VM.",
    "tag": "" }, 
  { "name": "set_memory_overhead",
    "description": "Set the memory/overhead field of the given VM.",
    "tag": "" }, 
  { "name": "set_memory_target",
    "description": "Set the memory/target field of the given VM.",
    "tag": "" }, 
  { "name": "set_memory_static_max",
    "description": "Set the memory/static_max field of the given VM.",
    "tag": "" }, 
  { "name": "set_memory_dynamic_max",
    "description": "Set the memory/dynamic_max field of the given VM.",
    "tag": "" }, 
  { "name": "set_memory_dynamic_min",
    "description": "Set the memory/dynamic_min field of the given VM.",
    "tag": "" }, 
  { "name": "set_memory_static_min",
    "description": "Set the memory/static_min field of the given VM.",
    "tag": "" }, 
  { "name": "set_VCPUs_params",
    "description": "Set the VCPUs/params field of the given VM.",
    "tag": "" }, 
  { "name": "add_to_VCPUs_params",
    "description": "Add the given key-value pair to the VCPUs/params field of the given VM.",
    "tag": "" }, 
  { "name": "remove_from_VCPUs_params",
    "description": "Remove the given key and its corresponding value from the VCPUs/params field of the given VM.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_VCPUs_max",
    "description": "Set the VCPUs/max field of the given VM.",
    "tag": "" }, 
  { "name": "set_VCPUs_at_startup",
    "description": "Set the VCPUs/at_startup field of the given VM.",
    "tag": "" }, 
  { "name": "set_actions_after_shutdown",
    "description": "Set the actions/after_shutdown field of the given VM.",
    "tag": "" }, 
  { "name": "set_actions_after_reboot",
    "description": "Set the actions/after_reboot field of the given VM.",
    "tag": "" }, 
  { "name": "set_actions_after_crash",
    "description": "Set the actions/after_crash field of the given VM.",
    "tag": "" }, 
  { "name": "set_PV_bootloader",
    "description": "Set the PV/bootloader field of the given VM.",
    "tag": "" }, 
  { "name": "set_PV_kernel",
    "description": "Set the PV/kernel field of the given VM.",
    "tag": "" }, 
  { "name": "set_PV_ramdisk",
    "description": "Set the PV/ramdisk field of the given VM.",
    "tag": "" }, 
  { "name": "set_PV_args",
    "description": "Set the PV/args field of the given VM.",
    "tag": "" }, 
  { "name": "set_PV_bootloader_args",
    "description": "Set the PV/bootloader_args field of the given VM.",
    "tag": "" }, 
  { "name": "set_PV_legacy_args",
    "description": "Set the PV/legacy_args field of the given VM.",
    "tag": "" }, 
  { "name": "set_HVM_boot_policy",
    "description": "Set the HVM/boot_policy field of the given VM.",
    "tag": "" }, 
  { "name": "set_HVM_boot_params",
    "description": "Set the HVM/boot_params field of the given VM.",
    "tag": "" }, 
  { "name": "add_to_HVM_boot_params",
    "description": "Add the given key-value pair to the HVM/boot_params field of the given VM.",
    "tag": "" }, 
  { "name": "remove_from_HVM_boot_params",
    "description": "Remove the given key and its corresponding value from the HVM/boot_params field of the given VM.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_HVM_shadow_multiplier",
    "description": "Set the HVM/shadow_multiplier field of the given VM.",
    "tag": "" }, 
  { "name": "set_platform",
    "description": "Set the platform field of the given VM.",
    "tag": "" }, 
  { "name": "add_to_platform",
    "description": "Add the given key-value pair to the platform field of the given VM.",
    "tag": "" }, 
  { "name": "remove_from_platform",
    "description": "Remove the given key and its corresponding value from the platform field of the given VM.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_PCI_bus",
    "description": "Set the PCI_bus field of the given VM.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given VM.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given VM.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given VM.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_domid",
    "description": "Set the domid field of the given VM.",
    "tag": "" }, 
  { "name": "set_domarch",
    "description": "Set the domarch field of the given VM.",
    "tag": "" }, 
  { "name": "set_last_boot_CPU_flags",
    "description": "Set the last_boot_CPU_flags field of the given VM.",
    "tag": "" }, 
  { "name": "add_to_last_boot_CPU_flags",
    "description": "Add the given key-value pair to the last_boot_CPU_flags field of the given VM.",
    "tag": "" }, 
  { "name": "remove_from_last_boot_CPU_flags",
    "description": "Remove the given key and its corresponding value from the last_boot_CPU_flags field of the given VM.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_is_control_domain",
    "description": "Set the is_control_domain field of the given VM.",
    "tag": "" }, 
  { "name": "set_metrics",
    "description": "Set the metrics field of the given VM.",
    "tag": "" }, 
  { "name": "set_guest_metrics",
    "description": "Set the guest_metrics field of the given VM.",
    "tag": "" }, 
  { "name": "set_last_booted_record",
    "description": "Set the last_booted_record field of the given VM.",
    "tag": "" }, 
  { "name": "set_recommendations",
    "description": "Set the recommendations field of the given VM.",
    "tag": "" }, 
  { "name": "set_xenstore_data",
    "description": "Set the xenstore_data field of the given VM.",
    "tag": "" }, 
  { "name": "add_to_xenstore_data",
    "description": "Add the given key-value pair to the xenstore_data field of the given VM.",
    "tag": "" }, 
  { "name": "remove_from_xenstore_data",
    "description": "Remove the given key and its corresponding value from the xenstore_data field of the given VM.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_ha_always_run",
    "description": "Set the ha_always_run field of the given VM.",
    "tag": "" }, 
  { "name": "set_ha_restart_priority",
    "description": "Set the ha_restart_priority field of the given VM.",
    "tag": "" }, 
  { "name": "set_is_a_snapshot",
    "description": "Set the is_a_snapshot field of the given VM.",
    "tag": "" }, 
  { "name": "set_snapshot_of",
    "description": "Set the snapshot_of field of the given VM.",
    "tag": "" }, 
  { "name": "set_snapshot_time",
    "description": "Set the snapshot_time field of the given VM.",
    "tag": "" }, 
  { "name": "set_transportable_snapshot_id",
    "description": "Set the transportable_snapshot_id field of the given VM.",
    "tag": "" }, 
  { "name": "set_blobs",
    "description": "Set the blobs field of the given VM.",
    "tag": "" }, 
  { "name": "add_to_blobs",
    "description": "Add the given key-value pair to the blobs field of the given VM.",
    "tag": "" }, 
  { "name": "remove_from_blobs",
    "description": "Remove the given key and its corresponding value from the blobs field of the given VM.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_tags",
    "description": "Set the tags field of the given VM.",
    "tag": "" }, 
  { "name": "add_tags",
    "description": "Add the given value to the tags field of the given VM.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_tags",
    "description": "Remove the given value from the tags field of the given VM.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_blocked_operations",
    "description": "Set the blocked_operations field of the given VM.",
    "tag": "" }, 
  { "name": "add_to_blocked_operations",
    "description": "Add the given key-value pair to the blocked_operations field of the given VM.",
    "tag": "" }, 
  { "name": "remove_from_blocked_operations",
    "description": "Remove the given key and its corresponding value from the blocked_operations field of the given VM.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_snapshot_info",
    "description": "Set the snapshot_info field of the given VM.",
    "tag": "" }, 
  { "name": "add_to_snapshot_info",
    "description": "Add the given key-value pair to the snapshot_info field of the given VM.",
    "tag": "" }, 
  { "name": "remove_from_snapshot_info",
    "description": "Remove the given key and its corresponding value from the snapshot_info field of the given VM.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_snapshot_metadata",
    "description": "Set the snapshot_metadata field of the given VM.",
    "tag": "" }, 
  { "name": "set_parent",
    "description": "Set the parent field of the given VM.",
    "tag": "" }, 
  { "name": "set_bios_strings",
    "description": "Set the bios_strings field of the given VM.",
    "tag": "" }, 
  { "name": "add_to_bios_strings",
    "description": "Add the given key-value pair to the bios_strings field of the given VM.",
    "tag": "" }, 
  { "name": "remove_from_bios_strings",
    "description": "Remove the given key and its corresponding value from the bios_strings field of the given VM.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_protection_policy",
    "description": "Set the protection_policy field of the given VM.",
    "tag": "" }, 
  { "name": "set_is_snapshot_from_vmpp",
    "description": "Set the is_snapshot_from_vmpp field of the given VM.",
    "tag": "" }, 
  { "name": "set_appliance",
    "description": "Set the appliance field of the given VM.",
    "tag": "" }, 
  { "name": "set_start_delay",
    "description": "Set the start_delay field of the given VM.",
    "tag": "" }, 
  { "name": "set_shutdown_delay",
    "description": "Set the shutdown_delay field of the given VM.",
    "tag": "" }, 
  { "name": "set_order",
    "description": "Set the order field of the given VM.",
    "tag": "" }, 
  { "name": "set_attached_PCIs",
    "description": "Set the attached_PCIs field of the given VM.",
    "tag": "" }, 
  { "name": "add_attached_PCIs",
    "description": "Add the given value to the attached_PCIs field of the given VM.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_attached_PCIs",
    "description": "Remove the given value from the attached_PCIs field of the given VM.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_suspend_SR",
    "description": "Set the suspend_SR field of the given VM.",
    "tag": "" }, 
  { "name": "set_version",
    "description": "Set the version field of the given VM.",
    "tag": "" }, 
  { "name": "set_generation_id",
    "description": "Set the generation_id field of the given VM.",
    "tag": "" }, 
  { "name": "snapshot",
    "description": "Snapshots the specified VM, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write).",
    "tag": "snapshots" }, 
  { "name": "snapshot_with_quiesce",
    "description": "Snapshots the specified VM with quiesce, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write).",
    "tag": "" }, 
  { "name": "clone",
    "description": "Clones the specified VM, making a new VM. Clone automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write).   This function can only be called when the VM is in the Halted State.",
    "tag": "" }, 
  { "name": "copy",
    "description": "Copied the specified VM, making a new VM. Unlike clone, copy does not exploits the capabilities of the underlying storage repository in which the VM's disk images are stored. Instead, copy guarantees that the disk images of the newly created VM will be 'full disks' - i.e. not part of a CoW chain.  This function can only be called when the VM is in the Halted State.",
    "tag": "" }, 
  { "name": "revert",
    "description": "Reverts the specified VM to a previous state.",
    "tag": "snapshots" }, 
  { "name": "checkpoint",
    "description": "Checkpoints the specified VM, making a new VM. Checkpoint automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write) and saves the memory image as well.",
    "tag": "" }, 
  { "name": "provision",
    "description": "Inspects the disk configuration contained within the VM's other_config, creates VDIs and VBDs and then executes any applicable post-install script.",
    "tag": "" }, 
  { "name": "start",
    "description": "Start the specified VM.  This function can only be called with the VM is in the Halted State.",
    "tag": "" }, 
  { "name": "start_on",
    "description": "Start the specified VM on a particular host.  This function can only be called with the VM is in the Halted State.",
    "tag": "" }, 
  { "name": "pause",
    "description": "Pause the specified VM. This can only be called when the specified VM is in the Running state.",
    "tag": "" }, 
  { "name": "unpause",
    "description": "Resume the specified VM. This can only be called when the specified VM is in the Paused state.",
    "tag": "" }, 
  { "name": "clean_shutdown",
    "description": "Attempt to cleanly shutdown the specified VM. (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state.",
    "tag": "" }, 
  { "name": "shutdown",
    "description": "Attempts to first clean shutdown a VM and if it should fail then perform a hard shutdown on it.",
    "tag": "" }, 
  { "name": "clean_reboot",
    "description": "Attempt to cleanly shutdown the specified VM (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state.",
    "tag": "" }, 
  { "name": "hard_shutdown",
    "description": "Stop executing the specified VM without attempting a clean shutdown.",
    "tag": "" }, 
  { "name": "power_state_reset",
    "description": "Reset the power-state of the VM to halted in the database only. (Used to recover from slave failures in pooling scenarios by resetting the power-states of VMs running on dead slaves to halted.) This is a potentially dangerous operation; use with care.",
    "tag": "" }, 
  { "name": "hard_reboot",
    "description": "Stop executing the specified VM without attempting a clean shutdown and immediately restart the VM.",
    "tag": "" }, 
  { "name": "suspend",
    "description": "Suspend the specified VM to disk.  This can only be called when the specified VM is in the Running state.",
    "tag": "" }, 
  { "name": "resume",
    "description": "Awaken the specified VM and resume it.  This can only be called when the specified VM is in the Suspended state.",
    "tag": "" }, 
  { "name": "resume_on",
    "description": "Awaken the specified VM and resume it on a particular Host.  This can only be called when the specified VM is in the Suspended state.",
    "tag": "" }, 
  { "name": "pool_migrate",
    "description": "Migrate a VM to another Host. This can only be called when the specified VM is in the Running state.",
    "tag": "" }, 
  { "name": "set_VCPUs_number_live",
    "description": "Set the number of VCPUs for a running VM",
    "tag": "" }, 
  { "name": "add_to_VCPUs_params_live",
    "description": "Add the given key-value pair to VM.VCPUs_params, and apply that value on the running VM",
    "tag": "" }, 
  { "name": "set_ha_restart_priority",
    "description": "Set the value of the ha_restart_priority field",
    "tag": "" }, 
  { "name": "set_ha_always_run",
    "description": "Set the value of the ha_always_run",
    "tag": "" }, 
  { "name": "compute_memory_overhead",
    "description": "Computes the virtualization memory overhead of a VM.",
    "tag": "" }, 
  { "name": "set_memory_dynamic_max",
    "description": "Set the value of the memory_dynamic_max field",
    "tag": "" }, 
  { "name": "set_memory_dynamic_min",
    "description": "Set the value of the memory_dynamic_min field",
    "tag": "" }, 
  { "name": "set_memory_dynamic_range",
    "description": "Set the minimum and maximum amounts of physical memory the VM is allowed to use.",
    "tag": "" }, 
  { "name": "set_memory_static_max",
    "description": "Set the value of the memory_static_max field",
    "tag": "" }, 
  { "name": "set_memory_static_min",
    "description": "Set the value of the memory_static_min field",
    "tag": "" }, 
  { "name": "set_memory_static_range",
    "description": "Set the static (ie boot-time) range of virtual memory that the VM is allowed to use.",
    "tag": "" }, 
  { "name": "set_memory_limits",
    "description": "Set the memory limits of this VM.",
    "tag": "" }, 
  { "name": "set_memory_target_live",
    "description": "Set the memory target for a running VM",
    "tag": "" }, 
  { "name": "wait_memory_target_live",
    "description": "Wait for a running VM to reach its current memory target",
    "tag": "" }, 
  { "name": "get_cooperative",
    "description": "Return true if the VM is currently 'co-operative' i.e. is expected to reach a balloon target and actually has done",
    "tag": "" }, 
  { "name": "set_HVM_shadow_multiplier",
    "description": "Set the shadow memory multiplier on a halted VM",
    "tag": "" }, 
  { "name": "set_shadow_multiplier_live",
    "description": "Set the shadow memory multiplier on a running VM",
    "tag": "" }, 
  { "name": "set_VCPUs_max",
    "description": "Set the maximum number of VCPUs for a halted VM",
    "tag": "" }, 
  { "name": "set_VCPUs_at_startup",
    "description": "Set the number of startup VCPUs for a halted VM",
    "tag": "" }, 
  { "name": "send_sysrq",
    "description": "Send the given key as a sysrq to this VM.  The key is specified as a single character (a String of length 1).  This can only be called when the specified VM is in the Running state.",
    "tag": "" }, 
  { "name": "send_trigger",
    "description": "Send the named trigger to this VM.  This can only be called when the specified VM is in the Running state.",
    "tag": "" }, 
  { "name": "maximise_memory",
    "description": "Returns the maximum amount of guest memory which will fit, together with overheads, in the supplied amount of physical memory. If 'exact' is true then an exact calculation is performed using the VM's current settings. If 'exact' is false then a more conservative approximation is used",
    "tag": "" }, 
  { "name": "migrate_send",
    "description": "Migrate the VM to another host.  This can only be called when the specified VM is in the Running state.",
    "tag": "" }, 
  { "name": "assert_can_migrate",
    "description": "Assert whether a VM can be migrated to the specified destination.",
    "tag": "" }, 
  { "name": "get_boot_record",
    "description": "Returns a record describing the VM's dynamic state, initialised when the VM boots and updated to reflect runtime configuration changes e.g. CPU hotplug",
    "tag": "" }, 
  { "name": "get_data_sources",
    "description": "",
    "tag": "" }, 
  { "name": "record_data_source",
    "description": "Start recording the specified data source",
    "tag": "" }, 
  { "name": "query_data_source",
    "description": "Query the latest value of the specified data source",
    "tag": "" }, 
  { "name": "forget_data_source_archives",
    "description": "Forget the recorded statistics related to the specified data source",
    "tag": "" }, 
  { "name": "assert_operation_valid",
    "description": "Check to see whether this operation is acceptable in the current state of the system, raising an error if the operation is invalid for some reason",
    "tag": "" }, 
  { "name": "update_allowed_operations",
    "description": "Recomputes the list of acceptable operations",
    "tag": "" }, 
  { "name": "get_allowed_VBD_devices",
    "description": "Returns a list of the allowed values that a VBD device field can take",
    "tag": "" }, 
  { "name": "get_allowed_VIF_devices",
    "description": "Returns a list of the allowed values that a VIF device field can take",
    "tag": "" }, 
  { "name": "get_possible_hosts",
    "description": "Return the list of hosts on which this VM may run.",
    "tag": "" }, 
  { "name": "assert_can_boot_here",
    "description": "Returns an error if the VM could not boot on this host for some reason",
    "tag": "" }, 
  { "name": "create_new_blob",
    "description": "Create a placeholder for a named binary blob of data that is associated with this VM",
    "tag": "" }, 
  { "name": "assert_agile",
    "description": "Returns an error if the VM is not considered agile e.g. because it is tied to a resource local to a host",
    "tag": "" }, 
  { "name": "retrieve_wlb_recommendations",
    "description": "Returns mapping of hosts to ratings, indicating the suitability of starting the VM at that location according to wlb. Rating is replaced with an error if the VM cannot boot there.",
    "tag": "" }, 
  { "name": "copy_bios_strings",
    "description": "Copy the BIOS strings from the given host to this VM",
    "tag": "" }, 
  { "name": "set_protection_policy",
    "description": "Set the value of the protection_policy field",
    "tag": "" }, 
  { "name": "set_start_delay",
    "description": "Set this VM's start delay in seconds",
    "tag": "" }, 
  { "name": "set_shutdown_delay",
    "description": "Set this VM's shutdown delay in seconds",
    "tag": "" }, 
  { "name": "set_order",
    "description": "Set this VM's boot order",
    "tag": "" }, 
  { "name": "set_suspend_VDI",
    "description": "Set this VM's suspend VDI, which must be indentical to its current one",
    "tag": "" }, 
  { "name": "assert_can_be_recovered",
    "description": "Assert whether all SRs required to recover this VM are available.",
    "tag": "" }, 
  { "name": "get_SRs_required_for_recovery",
    "description": "List all the SR's that are required for the VM to be recovered",
    "tag": "" }, 
  { "name": "recover",
    "description": "Recover the VM",
    "tag": "" }, 
  { "name": "import_convert",
    "description": "Import using a conversion service.",
    "tag": "" }, 
  { "name": "set_appliance",
    "description": "Assign this VM to an appliance.",
    "tag": "" }, 
  { "name": "query_services",
    "description": "Query the system services advertised by this VM and register them. This can only be applied to a system domain.",
    "tag": "" }, 
  { "name": "call_plugin",
    "description": "Call a XenAPI plugin on this vm",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the VMs known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of VM references to VM records for all VMs known to the system.",
    "tag": "" } ] }, { "name": "VM_metrics",
"fields": [ 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "last_updated",
    "description": "Time at which this information was last updated",
    "type": "datetime",
    "tag": "" }, 
  { "name": "install_time",
    "description": "Time at which the VM was installed",
    "type": "datetime",
    "tag": "" }, 
  { "name": "start_time",
    "description": "Time at which this VM was last booted",
    "type": "datetime",
    "tag": "" }, 
  { "name": "state",
    "description": "The state of the guest, eg blocked, dying etc",
    "type": "string set",
    "tag": "" }, 
  { "name": "flags",
    "description": "CPU flags (blocked,online,running)",
    "type": "(int -> string set) map",
    "tag": "" }, 
  { "name": "params",
    "description": "The live equivalent to VM.VCPUs_params",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "CPU",
    "description": "VCPU to PCPU map",
    "type": "(int -> int) map",
    "tag": "" }, 
  { "name": "utilisation",
    "description": "Utilisation for all of guest's current VCPUs",
    "type": "(int -> float) map",
    "tag": "" }, 
  { "name": "number",
    "description": "Current number of VCPUs",
    "type": "int",
    "tag": "" }, 
  { "name": "actual",
    "description": "Guest's actual memory (bytes)",
    "type": "int",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given VM_metrics.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the VM_metrics instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new VM_metrics instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified VM_metrics instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "get_memory_actual",
    "description": "Get the memory/actual field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "get_VCPUs_number",
    "description": "Get the VCPUs/number field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "get_VCPUs_utilisation",
    "description": "Get the VCPUs/utilisation field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "get_VCPUs_CPU",
    "description": "Get the VCPUs/CPU field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "get_VCPUs_params",
    "description": "Get the VCPUs/params field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "get_VCPUs_flags",
    "description": "Get the VCPUs/flags field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "get_state",
    "description": "Get the state field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "get_start_time",
    "description": "Get the start_time field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "get_install_time",
    "description": "Get the install_time field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "get_last_updated",
    "description": "Get the last_updated field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "set_memory_actual",
    "description": "Set the memory/actual field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "set_VCPUs_number",
    "description": "Set the VCPUs/number field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "set_VCPUs_utilisation",
    "description": "Set the VCPUs/utilisation field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "add_to_VCPUs_utilisation",
    "description": "Add the given key-value pair to the VCPUs/utilisation field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "remove_from_VCPUs_utilisation",
    "description": "Remove the given key and its corresponding value from the VCPUs/utilisation field of the given VM_metrics.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_VCPUs_CPU",
    "description": "Set the VCPUs/CPU field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "add_to_VCPUs_CPU",
    "description": "Add the given key-value pair to the VCPUs/CPU field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "remove_from_VCPUs_CPU",
    "description": "Remove the given key and its corresponding value from the VCPUs/CPU field of the given VM_metrics.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_VCPUs_params",
    "description": "Set the VCPUs/params field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "add_to_VCPUs_params",
    "description": "Add the given key-value pair to the VCPUs/params field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "remove_from_VCPUs_params",
    "description": "Remove the given key and its corresponding value from the VCPUs/params field of the given VM_metrics.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_VCPUs_flags",
    "description": "Set the VCPUs/flags field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "add_to_VCPUs_flags",
    "description": "Add the given key-value pair to the VCPUs/flags field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "remove_from_VCPUs_flags",
    "description": "Remove the given key and its corresponding value from the VCPUs/flags field of the given VM_metrics.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_state",
    "description": "Set the state field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "add_state",
    "description": "Add the given value to the state field of the given VM_metrics.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_state",
    "description": "Remove the given value from the state field of the given VM_metrics.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_start_time",
    "description": "Set the start_time field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "set_install_time",
    "description": "Set the install_time field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "set_last_updated",
    "description": "Set the last_updated field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given VM_metrics.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given VM_metrics.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the VM_metrics instances known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of VM_metrics references to VM_metrics records for all VM_metrics instances known to the system.",
    "tag": "" } ] }, { "name": "VM_guest_metrics",
"fields": [ 
  { "name": "live",
    "description": "True if the guest is sending heartbeat messages via the guest agent",
    "type": "bool",
    "tag": "" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "last_updated",
    "description": "Time at which this information was last updated",
    "type": "datetime",
    "tag": "" }, 
  { "name": "other",
    "description": "anything else",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "networks",
    "description": "network configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "disks",
    "description": "This field exists but has no data.",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "memory",
    "description": "This field exists but has no data. Use the memory and memory_internal_free RRD data-sources instead.",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "PV_drivers_up_to_date",
    "description": "true if the PV drivers appear to be up to date",
    "type": "bool",
    "tag": "" }, 
  { "name": "PV_drivers_version",
    "description": "version of the PV drivers",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "os_version",
    "description": "version of the OS",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the VM_guest_metrics instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new VM_guest_metrics instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified VM_guest_metrics instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "get_os_version",
    "description": "Get the os_version field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "get_PV_drivers_version",
    "description": "Get the PV_drivers_version field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "get_PV_drivers_up_to_date",
    "description": "Get the PV_drivers_up_to_date field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "get_memory",
    "description": "Get the memory field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "get_disks",
    "description": "Get the disks field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "get_networks",
    "description": "Get the networks field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "get_other",
    "description": "Get the other field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "get_last_updated",
    "description": "Get the last_updated field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "get_live",
    "description": "Get the live field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "set_os_version",
    "description": "Set the os_version field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "add_to_os_version",
    "description": "Add the given key-value pair to the os_version field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "remove_from_os_version",
    "description": "Remove the given key and its corresponding value from the os_version field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_PV_drivers_version",
    "description": "Set the PV_drivers_version field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "add_to_PV_drivers_version",
    "description": "Add the given key-value pair to the PV_drivers_version field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "remove_from_PV_drivers_version",
    "description": "Remove the given key and its corresponding value from the PV_drivers_version field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_PV_drivers_up_to_date",
    "description": "Set the PV_drivers_up_to_date field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "set_memory",
    "description": "Set the memory field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "add_to_memory",
    "description": "Add the given key-value pair to the memory field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "remove_from_memory",
    "description": "Remove the given key and its corresponding value from the memory field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_disks",
    "description": "Set the disks field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "add_to_disks",
    "description": "Add the given key-value pair to the disks field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "remove_from_disks",
    "description": "Remove the given key and its corresponding value from the disks field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_networks",
    "description": "Set the networks field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "add_to_networks",
    "description": "Add the given key-value pair to the networks field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "remove_from_networks",
    "description": "Remove the given key and its corresponding value from the networks field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_other",
    "description": "Set the other field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "add_to_other",
    "description": "Add the given key-value pair to the other field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "remove_from_other",
    "description": "Remove the given key and its corresponding value from the other field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_last_updated",
    "description": "Set the last_updated field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_live",
    "description": "Set the live field of the given VM_guest_metrics.",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the VM_guest_metrics instances known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of VM_guest_metrics references to VM_guest_metrics records for all VM_guest_metrics instances known to the system.",
    "tag": "" } ] }, { "name": "VMPP",
"fields": [ 
  { "name": "recent_alerts",
    "description": "recent alerts",
    "type": "string set",
    "tag": "" }, 
  { "name": "alarm_config",
    "description": "configuration for the alarm",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "is_alarm_enabled",
    "description": "true if alarm is enabled for this policy",
    "type": "bool",
    "tag": "" }, 
  { "name": "VMs",
    "description": "all VMs attached to this protection policy",
    "type": "VM ref set",
    "tag": "" }, 
  { "name": "archive_last_run_time",
    "description": "time of the last archive",
    "type": "datetime",
    "tag": "" }, 
  { "name": "is_archive_running",
    "description": "true if this protection policy's archive is running",
    "type": "bool",
    "tag": "" }, 
  { "name": "archive_schedule",
    "description": "schedule of the archive containing 'hour', 'min', 'days'. Date/time-related information is in XenServer Local Timezone",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "archive_frequency",
    "description": "frequency of the archive schedule",
    "type": "enum vmpp_archive_frequency",
    "tag": "" }, 
  { "name": "archive_target_config",
    "description": "configuration for the archive, including its 'location', 'username', 'password'",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "archive_target_type",
    "description": "type of the archive target config",
    "type": "enum vmpp_archive_target_type",
    "tag": "" }, 
  { "name": "backup_last_run_time",
    "description": "time of the last backup",
    "type": "datetime",
    "tag": "" }, 
  { "name": "is_backup_running",
    "description": "true if this protection policy's backup is running",
    "type": "bool",
    "tag": "" }, 
  { "name": "backup_schedule",
    "description": "schedule of the backup containing 'hour', 'min', 'days'. Date/time-related information is in XenServer Local Timezone",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "backup_frequency",
    "description": "frequency of the backup schedule",
    "type": "enum vmpp_backup_frequency",
    "tag": "" }, 
  { "name": "backup_retention_value",
    "description": "maximum number of backups that should be stored at any time",
    "type": "int",
    "tag": "" }, 
  { "name": "backup_type",
    "description": "type of the backup sub-policy",
    "type": "enum vmpp_backup_type",
    "tag": "" }, 
  { "name": "is_policy_enabled",
    "description": "enable or disable this policy",
    "type": "bool",
    "tag": "" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "tag": "" }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given VMPP.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the VMPP instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new VMPP instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified VMPP instance.",
    "tag": "" }, 
  { "name": "get_by_name_label",
    "description": "Get all the VMPP instances with the given label.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_name_label",
    "description": "Get the name/label field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_name_description",
    "description": "Get the name/description field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_is_policy_enabled",
    "description": "Get the is_policy_enabled field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_backup_type",
    "description": "Get the backup_type field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_backup_retention_value",
    "description": "Get the backup_retention_value field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_backup_frequency",
    "description": "Get the backup_frequency field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_backup_schedule",
    "description": "Get the backup_schedule field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_is_backup_running",
    "description": "Get the is_backup_running field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_backup_last_run_time",
    "description": "Get the backup_last_run_time field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_archive_target_type",
    "description": "Get the archive_target_type field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_archive_target_config",
    "description": "Get the archive_target_config field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_archive_frequency",
    "description": "Get the archive_frequency field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_archive_schedule",
    "description": "Get the archive_schedule field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_is_archive_running",
    "description": "Get the is_archive_running field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_archive_last_run_time",
    "description": "Get the archive_last_run_time field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_VMs",
    "description": "Get the VMs field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_is_alarm_enabled",
    "description": "Get the is_alarm_enabled field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_alarm_config",
    "description": "Get the alarm_config field of the given VMPP.",
    "tag": "" }, 
  { "name": "get_recent_alerts",
    "description": "Get the recent_alerts field of the given VMPP.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given VMPP.",
    "tag": "" }, 
  { "name": "set_name_label",
    "description": "Set the name/label field of the given VMPP.",
    "tag": "" }, 
  { "name": "set_name_description",
    "description": "Set the name/description field of the given VMPP.",
    "tag": "" }, 
  { "name": "set_is_policy_enabled",
    "description": "Set the is_policy_enabled field of the given VMPP.",
    "tag": "" }, 
  { "name": "set_backup_type",
    "description": "Set the backup_type field of the given VMPP.",
    "tag": "" }, 
  { "name": "set_backup_retention_value",
    "description": "Set the backup_retention_value field of the given VMPP.",
    "tag": "" }, 
  { "name": "set_backup_frequency",
    "description": "Set the backup_frequency field of the given VMPP.",
    "tag": "" }, 
  { "name": "set_backup_schedule",
    "description": "Set the backup_schedule field of the given VMPP.",
    "tag": "" }, 
  { "name": "add_to_backup_schedule",
    "description": "Add the given key-value pair to the backup_schedule field of the given VMPP.",
    "tag": "" }, 
  { "name": "remove_from_backup_schedule",
    "description": "Remove the given key and its corresponding value from the backup_schedule field of the given VMPP.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_is_backup_running",
    "description": "Set the is_backup_running field of the given VMPP.",
    "tag": "" }, 
  { "name": "set_backup_last_run_time",
    "description": "Set the backup_last_run_time field of the given VMPP.",
    "tag": "" }, 
  { "name": "set_archive_target_type",
    "description": "Set the archive_target_type field of the given VMPP.",
    "tag": "" }, 
  { "name": "set_archive_target_config",
    "description": "Set the archive_target_config field of the given VMPP.",
    "tag": "" }, 
  { "name": "add_to_archive_target_config",
    "description": "Add the given key-value pair to the archive_target_config field of the given VMPP.",
    "tag": "" }, 
  { "name": "remove_from_archive_target_config",
    "description": "Remove the given key and its corresponding value from the archive_target_config field of the given VMPP.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_archive_frequency",
    "description": "Set the archive_frequency field of the given VMPP.",
    "tag": "" }, 
  { "name": "set_archive_schedule",
    "description": "Set the archive_schedule field of the given VMPP.",
    "tag": "" }, 
  { "name": "add_to_archive_schedule",
    "description": "Add the given key-value pair to the archive_schedule field of the given VMPP.",
    "tag": "" }, 
  { "name": "remove_from_archive_schedule",
    "description": "Remove the given key and its corresponding value from the archive_schedule field of the given VMPP.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_is_archive_running",
    "description": "Set the is_archive_running field of the given VMPP.",
    "tag": "" }, 
  { "name": "set_archive_last_run_time",
    "description": "Set the archive_last_run_time field of the given VMPP.",
    "tag": "" }, 
  { "name": "set_is_alarm_enabled",
    "description": "Set the is_alarm_enabled field of the given VMPP.",
    "tag": "" }, 
  { "name": "set_alarm_config",
    "description": "Set the alarm_config field of the given VMPP.",
    "tag": "" }, 
  { "name": "add_to_alarm_config",
    "description": "Add the given key-value pair to the alarm_config field of the given VMPP.",
    "tag": "" }, 
  { "name": "remove_from_alarm_config",
    "description": "Remove the given key and its corresponding value from the alarm_config field of the given VMPP.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_recent_alerts",
    "description": "Set the recent_alerts field of the given VMPP.",
    "tag": "" }, 
  { "name": "add_recent_alerts",
    "description": "Add the given value to the recent_alerts field of the given VMPP.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_recent_alerts",
    "description": "Remove the given value from the recent_alerts field of the given VMPP.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "protect_now",
    "description": "This call executes the protection policy immediately",
    "tag": "" }, 
  { "name": "archive_now",
    "description": "This call archives the snapshot provided as a parameter",
    "tag": "" }, 
  { "name": "get_alerts",
    "description": "This call fetches a history of alerts for a given protection policy",
    "tag": "" }, 
  { "name": "set_backup_retention_value",
    "description": "",
    "tag": "" }, 
  { "name": "set_backup_frequency",
    "description": "Set the value of the backup_frequency field",
    "tag": "" }, 
  { "name": "set_backup_schedule",
    "description": "",
    "tag": "" }, 
  { "name": "set_archive_frequency",
    "description": "Set the value of the archive_frequency field",
    "tag": "" }, 
  { "name": "set_archive_schedule",
    "description": "",
    "tag": "" }, 
  { "name": "set_archive_target_type",
    "description": "Set the value of the archive_target_config_type field",
    "tag": "" }, 
  { "name": "set_archive_target_config",
    "description": "",
    "tag": "" }, 
  { "name": "set_is_alarm_enabled",
    "description": "Set the value of the is_alarm_enabled field",
    "tag": "" }, 
  { "name": "set_alarm_config",
    "description": "",
    "tag": "" }, 
  { "name": "add_to_backup_schedule",
    "description": "",
    "tag": "" }, 
  { "name": "add_to_archive_target_config",
    "description": "",
    "tag": "" }, 
  { "name": "add_to_archive_schedule",
    "description": "",
    "tag": "" }, 
  { "name": "add_to_alarm_config",
    "description": "",
    "tag": "" }, 
  { "name": "remove_from_backup_schedule",
    "description": "",
    "tag": "" }, 
  { "name": "remove_from_archive_target_config",
    "description": "",
    "tag": "" }, 
  { "name": "remove_from_archive_schedule",
    "description": "",
    "tag": "" }, 
  { "name": "remove_from_alarm_config",
    "description": "",
    "tag": "" }, 
  { "name": "set_backup_last_run_time",
    "description": "",
    "tag": "" }, 
  { "name": "set_archive_last_run_time",
    "description": "",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the VMPPs known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of VMPP references to VMPP records for all VMPPs known to the system.",
    "tag": "" } ] }, { "name": "VM_appliance",
"fields": [ 
  { "name": "VMs",
    "description": "all VMs in this appliance",
    "type": "VM ref set",
    "tag": "" }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum vm_appliance_operation) map",
    "tag": "" }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum vm_appliance_operation set",
    "tag": "" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "tag": "" }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given VM_appliance.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the VM_appliance instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new VM_appliance instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified VM_appliance instance.",
    "tag": "" }, 
  { "name": "get_by_name_label",
    "description": "Get all the VM_appliance instances with the given label.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given VM_appliance.",
    "tag": "" }, 
  { "name": "get_name_label",
    "description": "Get the name/label field of the given VM_appliance.",
    "tag": "" }, 
  { "name": "get_name_description",
    "description": "Get the name/description field of the given VM_appliance.",
    "tag": "" }, 
  { "name": "get_allowed_operations",
    "description": "Get the allowed_operations field of the given VM_appliance.",
    "tag": "" }, 
  { "name": "get_current_operations",
    "description": "Get the current_operations field of the given VM_appliance.",
    "tag": "" }, 
  { "name": "get_VMs",
    "description": "Get the VMs field of the given VM_appliance.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given VM_appliance.",
    "tag": "" }, 
  { "name": "set_name_label",
    "description": "Set the name/label field of the given VM_appliance.",
    "tag": "" }, 
  { "name": "set_name_description",
    "description": "Set the name/description field of the given VM_appliance.",
    "tag": "" }, 
  { "name": "set_allowed_operations",
    "description": "Set the allowed_operations field of the given VM_appliance.",
    "tag": "" }, 
  { "name": "add_allowed_operations",
    "description": "Add the given value to the allowed_operations field of the given VM_appliance.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_allowed_operations",
    "description": "Remove the given value from the allowed_operations field of the given VM_appliance.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_current_operations",
    "description": "Set the current_operations field of the given VM_appliance.",
    "tag": "" }, 
  { "name": "add_to_current_operations",
    "description": "Add the given key-value pair to the current_operations field of the given VM_appliance.",
    "tag": "" }, 
  { "name": "remove_from_current_operations",
    "description": "Remove the given key and its corresponding value from the current_operations field of the given VM_appliance.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "start",
    "description": "Start all VMs in the appliance",
    "tag": "" }, 
  { "name": "clean_shutdown",
    "description": "Perform a clean shutdown of all the VMs in the appliance",
    "tag": "" }, 
  { "name": "hard_shutdown",
    "description": "Perform a hard shutdown of all the VMs in the appliance",
    "tag": "" }, 
  { "name": "shutdown",
    "description": "For each VM in the appliance, try to shut it down cleanly. If this fails, perform a hard shutdown of the VM.",
    "tag": "" }, 
  { "name": "assert_can_be_recovered",
    "description": "Assert whether all SRs required to recover this VM appliance are available.",
    "tag": "" }, 
  { "name": "get_SRs_required_for_recovery",
    "description": "Get the list of SRs required by the VM appliance to recover.",
    "tag": "" }, 
  { "name": "recover",
    "description": "Recover the VM appliance",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the VM_appliances known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of VM_appliance references to VM_appliance records for all VM_appliances known to the system.",
    "tag": "" } ] }, { "name": "DR_task",
"fields": [ 
  { "name": "introduced_SRs",
    "description": "All SRs introduced by this appliance",
    "type": "SR ref set",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given DR_task.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the DR_task instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new DR_task instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified DR_task instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given DR_task.",
    "tag": "" }, 
  { "name": "get_introduced_SRs",
    "description": "Get the introduced_SRs field of the given DR_task.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given DR_task.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a disaster recovery task which will query the supplied list of devices",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the disaster recovery task, detaching and forgetting any SRs introduced which are no longer required",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the DR_tasks known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of DR_task references to DR_task records for all DR_tasks known to the system.",
    "tag": "" } ] }, { "name": "host",
"fields": [ 
  { "name": "guest_VCPUs_params",
    "description": "VCPUs params to apply to all resident guests",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "PGPUs",
    "description": "List of physical GPUs in the host",
    "type": "PGPU ref set",
    "tag": "" }, 
  { "name": "PCIs",
    "description": "List of PCI devices in the host",
    "type": "PCI ref set",
    "tag": "" }, 
  { "name": "chipset_info",
    "description": "Information about chipset features",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "local_cache_sr",
    "description": "The SR that is used as a local cache",
    "type": "SR ref",
    "tag": "" }, 
  { "name": "power_on_config",
    "description": "The power on config",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "power_on_mode",
    "description": "The power on mode",
    "type": "string",
    "tag": "" }, 
  { "name": "bios_strings",
    "description": "BIOS strings",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "license_server",
    "description": "Contact information of the license server",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "edition",
    "description": "XenServer edition",
    "type": "string",
    "tag": "" }, 
  { "name": "external_auth_configuration",
    "description": "configuration specific to external authentication service",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "external_auth_service_name",
    "description": "name of external authentication service configured; empty if none configured.",
    "type": "string",
    "tag": "" }, 
  { "name": "external_auth_type",
    "description": "type of external authentication service configured; empty if none configured.",
    "type": "string",
    "tag": "" }, 
  { "name": "tags",
    "description": "user-specified tags for categorization purposes",
    "type": "string set",
    "tag": "" }, 
  { "name": "blobs",
    "description": "Binary blobs associated with this host",
    "type": "(string -> blob ref) map",
    "tag": "" }, 
  { "name": "ha_network_peers",
    "description": "The set of hosts visible via the network from this host",
    "type": "string set",
    "tag": "" }, 
  { "name": "ha_statefiles",
    "description": "The set of statefiles accessible from this host",
    "type": "string set",
    "tag": "" }, 
  { "name": "license_params",
    "description": "State of the current license",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "metrics",
    "description": "metrics associated with this host",
    "type": "host_metrics ref",
    "tag": "" }, 
  { "name": "address",
    "description": "The address by which this host can be contacted from any other host in the pool",
    "type": "string",
    "tag": "" }, 
  { "name": "hostname",
    "description": "The hostname of this host",
    "type": "string",
    "tag": "" }, 
  { "name": "cpu_info",
    "description": "Details about the physical CPUs on this host",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "host_CPUs",
    "description": "The physical CPUs on this host",
    "type": "host_cpu ref set",
    "tag": "" }, 
  { "name": "PBDs",
    "description": "physical blockdevices",
    "type": "PBD ref set",
    "tag": "" }, 
  { "name": "patches",
    "description": "Set of host patches",
    "type": "host_patch ref set",
    "tag": "" }, 
  { "name": "crashdumps",
    "description": "Set of host crash dumps",
    "type": "host_crashdump ref set",
    "tag": "" }, 
  { "name": "crash_dump_sr",
    "description": "The SR in which VDIs for crash dumps are created",
    "type": "SR ref",
    "tag": "" }, 
  { "name": "suspend_image_sr",
    "description": "The SR in which VDIs for suspend images are created",
    "type": "SR ref",
    "tag": "" }, 
  { "name": "PIFs",
    "description": "physical network interfaces",
    "type": "PIF ref set",
    "tag": "" }, 
  { "name": "logging",
    "description": "logging configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "resident_VMs",
    "description": "list of VMs currently resident on host",
    "type": "VM ref set",
    "tag": "" }, 
  { "name": "supported_bootloaders",
    "description": "a list of the bootloaders installed on the machine",
    "type": "string set",
    "tag": "" }, 
  { "name": "sched_policy",
    "description": "Scheduler policy currently in force on this host",
    "type": "string",
    "tag": "" }, 
  { "name": "cpu_configuration",
    "description": "The CPU configuration on this host.  May contain keys such as \"nr_nodes\", \"sockets_per_node\", \"cores_per_socket\", or \"threads_per_core\"",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "capabilities",
    "description": "Xen capabilities",
    "type": "string set",
    "tag": "" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "software_version",
    "description": "version strings",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "enabled",
    "description": "True if the host is currently enabled",
    "type": "bool",
    "tag": "" }, 
  { "name": "vendor_implementation",
    "description": "details of vendor implementation",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "vendor",
    "description": "identification of vendor",
    "type": "string",
    "tag": "" }, 
  { "name": "minor",
    "description": "minor version number",
    "type": "int",
    "tag": "" }, 
  { "name": "major",
    "description": "major version number",
    "type": "int",
    "tag": "" }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum host_allowed_operations) map",
    "tag": "" }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum host_allowed_operations set",
    "tag": "" }, 
  { "name": "overhead",
    "description": "Virtualization memory overhead (bytes).",
    "type": "int",
    "tag": "" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "tag": "" }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given host.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the host instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new host instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified host instance.",
    "tag": "" }, 
  { "name": "get_by_name_label",
    "description": "Get all the host instances with the given label.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given host.",
    "tag": "" }, 
  { "name": "get_name_label",
    "description": "Get the name/label field of the given host.",
    "tag": "" }, 
  { "name": "get_name_description",
    "description": "Get the name/description field of the given host.",
    "tag": "" }, 
  { "name": "get_memory_overhead",
    "description": "Get the memory/overhead field of the given host.",
    "tag": "" }, 
  { "name": "get_allowed_operations",
    "description": "Get the allowed_operations field of the given host.",
    "tag": "" }, 
  { "name": "get_current_operations",
    "description": "Get the current_operations field of the given host.",
    "tag": "" }, 
  { "name": "get_API_version_major",
    "description": "Get the API_version/major field of the given host.",
    "tag": "" }, 
  { "name": "get_API_version_minor",
    "description": "Get the API_version/minor field of the given host.",
    "tag": "" }, 
  { "name": "get_API_version_vendor",
    "description": "Get the API_version/vendor field of the given host.",
    "tag": "" }, 
  { "name": "get_API_version_vendor_implementation",
    "description": "Get the API_version/vendor_implementation field of the given host.",
    "tag": "" }, 
  { "name": "get_enabled",
    "description": "Get the enabled field of the given host.",
    "tag": "" }, 
  { "name": "get_software_version",
    "description": "Get the software_version field of the given host.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given host.",
    "tag": "" }, 
  { "name": "get_capabilities",
    "description": "Get the capabilities field of the given host.",
    "tag": "" }, 
  { "name": "get_cpu_configuration",
    "description": "Get the cpu_configuration field of the given host.",
    "tag": "" }, 
  { "name": "get_sched_policy",
    "description": "Get the sched_policy field of the given host.",
    "tag": "" }, 
  { "name": "get_supported_bootloaders",
    "description": "Get the supported_bootloaders field of the given host.",
    "tag": "" }, 
  { "name": "get_resident_VMs",
    "description": "Get the resident_VMs field of the given host.",
    "tag": "" }, 
  { "name": "get_logging",
    "description": "Get the logging field of the given host.",
    "tag": "" }, 
  { "name": "get_PIFs",
    "description": "Get the PIFs field of the given host.",
    "tag": "" }, 
  { "name": "get_suspend_image_sr",
    "description": "Get the suspend_image_sr field of the given host.",
    "tag": "" }, 
  { "name": "get_crash_dump_sr",
    "description": "Get the crash_dump_sr field of the given host.",
    "tag": "" }, 
  { "name": "get_crashdumps",
    "description": "Get the crashdumps field of the given host.",
    "tag": "" }, 
  { "name": "get_patches",
    "description": "Get the patches field of the given host.",
    "tag": "" }, 
  { "name": "get_PBDs",
    "description": "Get the PBDs field of the given host.",
    "tag": "" }, 
  { "name": "get_host_CPUs",
    "description": "Get the host_CPUs field of the given host.",
    "tag": "" }, 
  { "name": "get_cpu_info",
    "description": "Get the cpu_info field of the given host.",
    "tag": "" }, 
  { "name": "get_hostname",
    "description": "Get the hostname field of the given host.",
    "tag": "" }, 
  { "name": "get_address",
    "description": "Get the address field of the given host.",
    "tag": "" }, 
  { "name": "get_metrics",
    "description": "Get the metrics field of the given host.",
    "tag": "" }, 
  { "name": "get_license_params",
    "description": "Get the license_params field of the given host.",
    "tag": "" }, 
  { "name": "get_boot_free_mem",
    "description": "Get the boot_free_mem field of the given host.",
    "tag": "" }, 
  { "name": "get_ha_statefiles",
    "description": "Get the ha_statefiles field of the given host.",
    "tag": "" }, 
  { "name": "get_ha_network_peers",
    "description": "Get the ha_network_peers field of the given host.",
    "tag": "" }, 
  { "name": "get_blobs",
    "description": "Get the blobs field of the given host.",
    "tag": "" }, 
  { "name": "get_tags",
    "description": "Get the tags field of the given host.",
    "tag": "" }, 
  { "name": "get_external_auth_type",
    "description": "Get the external_auth_type field of the given host.",
    "tag": "" }, 
  { "name": "get_external_auth_service_name",
    "description": "Get the external_auth_service_name field of the given host.",
    "tag": "" }, 
  { "name": "get_external_auth_configuration",
    "description": "Get the external_auth_configuration field of the given host.",
    "tag": "" }, 
  { "name": "get_edition",
    "description": "Get the edition field of the given host.",
    "tag": "" }, 
  { "name": "get_license_server",
    "description": "Get the license_server field of the given host.",
    "tag": "" }, 
  { "name": "get_bios_strings",
    "description": "Get the bios_strings field of the given host.",
    "tag": "" }, 
  { "name": "get_power_on_mode",
    "description": "Get the power_on_mode field of the given host.",
    "tag": "" }, 
  { "name": "get_power_on_config",
    "description": "Get the power_on_config field of the given host.",
    "tag": "" }, 
  { "name": "get_local_cache_sr",
    "description": "Get the local_cache_sr field of the given host.",
    "tag": "" }, 
  { "name": "get_chipset_info",
    "description": "Get the chipset_info field of the given host.",
    "tag": "" }, 
  { "name": "get_PCIs",
    "description": "Get the PCIs field of the given host.",
    "tag": "" }, 
  { "name": "get_PGPUs",
    "description": "Get the PGPUs field of the given host.",
    "tag": "" }, 
  { "name": "get_guest_VCPUs_params",
    "description": "Get the guest_VCPUs_params field of the given host.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given host.",
    "tag": "" }, 
  { "name": "set_name_label",
    "description": "Set the name/label field of the given host.",
    "tag": "" }, 
  { "name": "set_name_description",
    "description": "Set the name/description field of the given host.",
    "tag": "" }, 
  { "name": "set_memory_overhead",
    "description": "Set the memory/overhead field of the given host.",
    "tag": "" }, 
  { "name": "set_allowed_operations",
    "description": "Set the allowed_operations field of the given host.",
    "tag": "" }, 
  { "name": "add_allowed_operations",
    "description": "Add the given value to the allowed_operations field of the given host.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_allowed_operations",
    "description": "Remove the given value from the allowed_operations field of the given host.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_current_operations",
    "description": "Set the current_operations field of the given host.",
    "tag": "" }, 
  { "name": "add_to_current_operations",
    "description": "Add the given key-value pair to the current_operations field of the given host.",
    "tag": "" }, 
  { "name": "remove_from_current_operations",
    "description": "Remove the given key and its corresponding value from the current_operations field of the given host.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_API_version_major",
    "description": "Set the API_version/major field of the given host.",
    "tag": "" }, 
  { "name": "set_API_version_minor",
    "description": "Set the API_version/minor field of the given host.",
    "tag": "" }, 
  { "name": "set_API_version_vendor",
    "description": "Set the API_version/vendor field of the given host.",
    "tag": "" }, 
  { "name": "set_API_version_vendor_implementation",
    "description": "Set the API_version/vendor_implementation field of the given host.",
    "tag": "" }, 
  { "name": "add_to_API_version_vendor_implementation",
    "description": "Add the given key-value pair to the API_version/vendor_implementation field of the given host.",
    "tag": "" }, 
  { "name": "remove_from_API_version_vendor_implementation",
    "description": "Remove the given key and its corresponding value from the API_version/vendor_implementation field of the given host.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_enabled",
    "description": "Set the enabled field of the given host.",
    "tag": "" }, 
  { "name": "set_software_version",
    "description": "Set the software_version field of the given host.",
    "tag": "" }, 
  { "name": "add_to_software_version",
    "description": "Add the given key-value pair to the software_version field of the given host.",
    "tag": "" }, 
  { "name": "remove_from_software_version",
    "description": "Remove the given key and its corresponding value from the software_version field of the given host.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given host.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given host.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given host.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_capabilities",
    "description": "Set the capabilities field of the given host.",
    "tag": "" }, 
  { "name": "add_capabilities",
    "description": "Add the given value to the capabilities field of the given host.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_capabilities",
    "description": "Remove the given value from the capabilities field of the given host.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_cpu_configuration",
    "description": "Set the cpu_configuration field of the given host.",
    "tag": "" }, 
  { "name": "add_to_cpu_configuration",
    "description": "Add the given key-value pair to the cpu_configuration field of the given host.",
    "tag": "" }, 
  { "name": "remove_from_cpu_configuration",
    "description": "Remove the given key and its corresponding value from the cpu_configuration field of the given host.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_sched_policy",
    "description": "Set the sched_policy field of the given host.",
    "tag": "" }, 
  { "name": "set_supported_bootloaders",
    "description": "Set the supported_bootloaders field of the given host.",
    "tag": "" }, 
  { "name": "add_supported_bootloaders",
    "description": "Add the given value to the supported_bootloaders field of the given host.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_supported_bootloaders",
    "description": "Remove the given value from the supported_bootloaders field of the given host.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_logging",
    "description": "Set the logging field of the given host.",
    "tag": "" }, 
  { "name": "add_to_logging",
    "description": "Add the given key-value pair to the logging field of the given host.",
    "tag": "" }, 
  { "name": "remove_from_logging",
    "description": "Remove the given key and its corresponding value from the logging field of the given host.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_suspend_image_sr",
    "description": "Set the suspend_image_sr field of the given host.",
    "tag": "" }, 
  { "name": "set_crash_dump_sr",
    "description": "Set the crash_dump_sr field of the given host.",
    "tag": "" }, 
  { "name": "set_cpu_info",
    "description": "Set the cpu_info field of the given host.",
    "tag": "" }, 
  { "name": "add_to_cpu_info",
    "description": "Add the given key-value pair to the cpu_info field of the given host.",
    "tag": "" }, 
  { "name": "remove_from_cpu_info",
    "description": "Remove the given key and its corresponding value from the cpu_info field of the given host.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_hostname",
    "description": "Set the hostname field of the given host.",
    "tag": "" }, 
  { "name": "set_address",
    "description": "Set the address field of the given host.",
    "tag": "" }, 
  { "name": "set_metrics",
    "description": "Set the metrics field of the given host.",
    "tag": "" }, 
  { "name": "set_license_params",
    "description": "Set the license_params field of the given host.",
    "tag": "" }, 
  { "name": "add_to_license_params",
    "description": "Add the given key-value pair to the license_params field of the given host.",
    "tag": "" }, 
  { "name": "remove_from_license_params",
    "description": "Remove the given key and its corresponding value from the license_params field of the given host.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_boot_free_mem",
    "description": "Set the boot_free_mem field of the given host.",
    "tag": "" }, 
  { "name": "set_ha_statefiles",
    "description": "Set the ha_statefiles field of the given host.",
    "tag": "" }, 
  { "name": "add_ha_statefiles",
    "description": "Add the given value to the ha_statefiles field of the given host.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_ha_statefiles",
    "description": "Remove the given value from the ha_statefiles field of the given host.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_ha_network_peers",
    "description": "Set the ha_network_peers field of the given host.",
    "tag": "" }, 
  { "name": "add_ha_network_peers",
    "description": "Add the given value to the ha_network_peers field of the given host.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_ha_network_peers",
    "description": "Remove the given value from the ha_network_peers field of the given host.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_blobs",
    "description": "Set the blobs field of the given host.",
    "tag": "" }, 
  { "name": "add_to_blobs",
    "description": "Add the given key-value pair to the blobs field of the given host.",
    "tag": "" }, 
  { "name": "remove_from_blobs",
    "description": "Remove the given key and its corresponding value from the blobs field of the given host.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_tags",
    "description": "Set the tags field of the given host.",
    "tag": "" }, 
  { "name": "add_tags",
    "description": "Add the given value to the tags field of the given host.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_tags",
    "description": "Remove the given value from the tags field of the given host.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_external_auth_type",
    "description": "Set the external_auth_type field of the given host.",
    "tag": "" }, 
  { "name": "set_external_auth_service_name",
    "description": "Set the external_auth_service_name field of the given host.",
    "tag": "" }, 
  { "name": "set_external_auth_configuration",
    "description": "Set the external_auth_configuration field of the given host.",
    "tag": "" }, 
  { "name": "add_to_external_auth_configuration",
    "description": "Add the given key-value pair to the external_auth_configuration field of the given host.",
    "tag": "" }, 
  { "name": "remove_from_external_auth_configuration",
    "description": "Remove the given key and its corresponding value from the external_auth_configuration field of the given host.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_edition",
    "description": "Set the edition field of the given host.",
    "tag": "" }, 
  { "name": "set_license_server",
    "description": "Set the license_server field of the given host.",
    "tag": "" }, 
  { "name": "add_to_license_server",
    "description": "Add the given key-value pair to the license_server field of the given host.",
    "tag": "" }, 
  { "name": "remove_from_license_server",
    "description": "Remove the given key and its corresponding value from the license_server field of the given host.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_bios_strings",
    "description": "Set the bios_strings field of the given host.",
    "tag": "" }, 
  { "name": "add_to_bios_strings",
    "description": "Add the given key-value pair to the bios_strings field of the given host.",
    "tag": "" }, 
  { "name": "remove_from_bios_strings",
    "description": "Remove the given key and its corresponding value from the bios_strings field of the given host.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_power_on_mode",
    "description": "Set the power_on_mode field of the given host.",
    "tag": "" }, 
  { "name": "set_power_on_config",
    "description": "Set the power_on_config field of the given host.",
    "tag": "" }, 
  { "name": "add_to_power_on_config",
    "description": "Add the given key-value pair to the power_on_config field of the given host.",
    "tag": "" }, 
  { "name": "remove_from_power_on_config",
    "description": "Remove the given key and its corresponding value from the power_on_config field of the given host.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_local_cache_sr",
    "description": "Set the local_cache_sr field of the given host.",
    "tag": "" }, 
  { "name": "set_chipset_info",
    "description": "Set the chipset_info field of the given host.",
    "tag": "" }, 
  { "name": "add_to_chipset_info",
    "description": "Add the given key-value pair to the chipset_info field of the given host.",
    "tag": "" }, 
  { "name": "remove_from_chipset_info",
    "description": "Remove the given key and its corresponding value from the chipset_info field of the given host.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_guest_VCPUs_params",
    "description": "Set the guest_VCPUs_params field of the given host.",
    "tag": "" }, 
  { "name": "add_to_guest_VCPUs_params",
    "description": "Add the given key-value pair to the guest_VCPUs_params field of the given host.",
    "tag": "" }, 
  { "name": "remove_from_guest_VCPUs_params",
    "description": "Remove the given key and its corresponding value from the guest_VCPUs_params field of the given host.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "disable",
    "description": "Puts the host into a state in which no new VMs can be started. Currently active VMs on the host continue to execute.",
    "tag": "" }, 
  { "name": "enable",
    "description": "Puts the host into a state in which new VMs can be started.",
    "tag": "" }, 
  { "name": "shutdown",
    "description": "Shutdown the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)",
    "tag": "" }, 
  { "name": "reboot",
    "description": "Reboot the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)",
    "tag": "" }, 
  { "name": "dmesg",
    "description": "Get the host xen dmesg.",
    "tag": "" }, 
  { "name": "dmesg_clear",
    "description": "Get the host xen dmesg, and clear the buffer.",
    "tag": "" }, 
  { "name": "get_log",
    "description": "Get the host's log file",
    "tag": "" }, 
  { "name": "send_debug_keys",
    "description": "Inject the given string as debugging keys into Xen",
    "tag": "" }, 
  { "name": "bugreport_upload",
    "description": "Run xen-bugtool --yestoall and upload the output to Citrix support",
    "tag": "" }, 
  { "name": "list_methods",
    "description": "List all supported methods",
    "tag": "" }, 
  { "name": "license_apply",
    "description": "Apply a new license to a host",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy specified host record in database",
    "tag": "" }, 
  { "name": "power_on",
    "description": "Attempt to power-on the host (if the capability exists).",
    "tag": "" }, 
  { "name": "emergency_ha_disable",
    "description": "This call disables HA on the local host. This should only be used with extreme care.",
    "tag": "" }, 
  { "name": "get_data_sources",
    "description": "",
    "tag": "" }, 
  { "name": "record_data_source",
    "description": "Start recording the specified data source",
    "tag": "" }, 
  { "name": "query_data_source",
    "description": "Query the latest value of the specified data source",
    "tag": "" }, 
  { "name": "forget_data_source_archives",
    "description": "Forget the recorded statistics related to the specified data source",
    "tag": "" }, 
  { "name": "assert_can_evacuate",
    "description": "Check this host can be evacuated.",
    "tag": "" }, 
  { "name": "get_vms_which_prevent_evacuation",
    "description": "Return a set of VMs which prevent the host being evacuated, with per-VM error codes",
    "tag": "" }, 
  { "name": "get_uncooperative_resident_VMs",
    "description": "Return a set of VMs which are not co-operating with the host's memory control system",
    "tag": "" }, 
  { "name": "evacuate",
    "description": "Migrate all VMs off of this host, where possible.",
    "tag": "" }, 
  { "name": "syslog_reconfigure",
    "description": "Re-configure syslog logging",
    "tag": "" }, 
  { "name": "management_reconfigure",
    "description": "Reconfigure the management network interface",
    "tag": "" }, 
  { "name": "local_management_reconfigure",
    "description": "Reconfigure the management network interface. Should only be used if Host.management_reconfigure is impossible because the network configuration is broken.",
    "tag": "" }, 
  { "name": "management_disable",
    "description": "Disable the management network interface",
    "tag": "" }, 
  { "name": "get_management_interface",
    "description": "Returns the management interface for the specified host",
    "tag": "" }, 
  { "name": "get_system_status_capabilities",
    "description": "",
    "tag": "" }, 
  { "name": "restart_agent",
    "description": "Restarts the agent after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called.",
    "tag": "" }, 
  { "name": "shutdown_agent",
    "description": "Shuts the agent down after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called.",
    "tag": "" }, 
  { "name": "set_hostname_live",
    "description": "Sets the host name to the specified string.  Both the API and lower-level system hostname are changed immediately.",
    "tag": "" }, 
  { "name": "compute_free_memory",
    "description": "Computes the amount of free memory on the host.",
    "tag": "" }, 
  { "name": "compute_memory_overhead",
    "description": "Computes the virtualization memory overhead of a host.",
    "tag": "" }, 
  { "name": "sync_data",
    "description": "This causes the synchronisation of the non-database data (messages, RRDs and so on) stored on the master to be synchronised with the host",
    "tag": "" }, 
  { "name": "backup_rrds",
    "description": "This causes the RRDs to be backed up to the master",
    "tag": "" }, 
  { "name": "create_new_blob",
    "description": "Create a placeholder for a named binary blob of data that is associated with this host",
    "tag": "" }, 
  { "name": "call_plugin",
    "description": "Call a XenAPI plugin on this host",
    "tag": "" }, 
  { "name": "get_servertime",
    "description": "This call queries the host's clock for the current time",
    "tag": "" }, 
  { "name": "get_server_localtime",
    "description": "This call queries the host's clock for the current time in the host's local timezone",
    "tag": "" }, 
  { "name": "enable_external_auth",
    "description": "This call enables external authentication on a host",
    "tag": "" }, 
  { "name": "disable_external_auth",
    "description": "This call disables external authentication on the local host",
    "tag": "" }, 
  { "name": "retrieve_wlb_evacuate_recommendations",
    "description": "Retrieves recommended host migrations to perform when evacuating the host from the wlb server. If a VM cannot be migrated from the host the reason is listed instead of a recommendation.",
    "tag": "" }, 
  { "name": "get_server_certificate",
    "description": "Get the installed server SSL certificate.",
    "tag": "" }, 
  { "name": "apply_edition",
    "description": "Change to another edition, or reactivate the current edition after a license has expired. This may be subject to the successful checkout of an appropriate license.",
    "tag": "" }, 
  { "name": "refresh_pack_info",
    "description": "Refresh the list of installed Supplemental Packs.",
    "tag": "" }, 
  { "name": "set_power_on_mode",
    "description": "Set the power-on-mode, host, user and password ",
    "tag": "" }, 
  { "name": "set_cpu_features",
    "description": "Set the CPU features to be used after a reboot, if the given features string is valid.",
    "tag": "" }, 
  { "name": "reset_cpu_features",
    "description": "Remove the feature mask, such that after a reboot all features of the CPU are enabled.",
    "tag": "" }, 
  { "name": "enable_local_storage_caching",
    "description": "Enable the use of a local SR for caching purposes",
    "tag": "" }, 
  { "name": "disable_local_storage_caching",
    "description": "Disable the use of a local SR for caching purposes",
    "tag": "" }, 
  { "name": "migrate_receive",
    "description": "Prepare to receive a VM, returning a token which can be passed to VM.migrate.",
    "tag": "" }, 
  { "name": "declare_dead",
    "description": "Declare that a host is dead. This is a dangerous operation, and should only be called if the administrator is absolutely sure the host is definitely dead",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the hosts known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of host references to host records for all hosts known to the system.",
    "tag": "" } ] }, { "name": "host_crashdump",
"fields": [ 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "size",
    "description": "Size of the crashdump",
    "type": "int",
    "tag": "" }, 
  { "name": "timestamp",
    "description": "Time the crash happened",
    "type": "datetime",
    "tag": "" }, 
  { "name": "host",
    "description": "Host the crashdump relates to",
    "type": "host ref",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given host_crashdump.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the host_crashdump instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new host_crashdump instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified host_crashdump instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given host_crashdump.",
    "tag": "" }, 
  { "name": "get_host",
    "description": "Get the host field of the given host_crashdump.",
    "tag": "" }, 
  { "name": "get_timestamp",
    "description": "Get the timestamp field of the given host_crashdump.",
    "tag": "" }, 
  { "name": "get_size",
    "description": "Get the size field of the given host_crashdump.",
    "tag": "" }, 
  { "name": "get_filename",
    "description": "Get the filename field of the given host_crashdump.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given host_crashdump.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given host_crashdump.",
    "tag": "" }, 
  { "name": "set_host",
    "description": "Set the host field of the given host_crashdump.",
    "tag": "" }, 
  { "name": "set_timestamp",
    "description": "Set the timestamp field of the given host_crashdump.",
    "tag": "" }, 
  { "name": "set_size",
    "description": "Set the size field of the given host_crashdump.",
    "tag": "" }, 
  { "name": "set_filename",
    "description": "Set the filename field of the given host_crashdump.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given host_crashdump.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given host_crashdump.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given host_crashdump.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy specified host crash dump, removing it from the disk.",
    "tag": "" }, 
  { "name": "upload",
    "description": "Upload the specified host crash dump to a specified URL",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the host_crashdumps known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of host_crashdump references to host_crashdump records for all host_crashdumps known to the system.",
    "tag": "" } ] }, { "name": "host_patch",
"fields": [ 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "pool_patch",
    "description": "The patch applied",
    "type": "pool_patch ref",
    "tag": "" }, 
  { "name": "size",
    "description": "Size of the patch",
    "type": "int",
    "tag": "" }, 
  { "name": "timestamp_applied",
    "description": "Time the patch was applied",
    "type": "datetime",
    "tag": "" }, 
  { "name": "applied",
    "description": "True if the patch has been applied",
    "type": "bool",
    "tag": "" }, 
  { "name": "host",
    "description": "Host the patch relates to",
    "type": "host ref",
    "tag": "" }, 
  { "name": "version",
    "description": "Patch version number",
    "type": "string",
    "tag": "" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "tag": "" }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given host_patch.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the host_patch instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new host_patch instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified host_patch instance.",
    "tag": "" }, 
  { "name": "get_by_name_label",
    "description": "Get all the host_patch instances with the given label.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given host_patch.",
    "tag": "" }, 
  { "name": "get_name_label",
    "description": "Get the name/label field of the given host_patch.",
    "tag": "" }, 
  { "name": "get_name_description",
    "description": "Get the name/description field of the given host_patch.",
    "tag": "" }, 
  { "name": "get_version",
    "description": "Get the version field of the given host_patch.",
    "tag": "" }, 
  { "name": "get_host",
    "description": "Get the host field of the given host_patch.",
    "tag": "" }, 
  { "name": "get_filename",
    "description": "Get the filename field of the given host_patch.",
    "tag": "" }, 
  { "name": "get_applied",
    "description": "Get the applied field of the given host_patch.",
    "tag": "" }, 
  { "name": "get_timestamp_applied",
    "description": "Get the timestamp_applied field of the given host_patch.",
    "tag": "" }, 
  { "name": "get_size",
    "description": "Get the size field of the given host_patch.",
    "tag": "" }, 
  { "name": "get_pool_patch",
    "description": "Get the pool_patch field of the given host_patch.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given host_patch.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given host_patch.",
    "tag": "" }, 
  { "name": "set_name_label",
    "description": "Set the name/label field of the given host_patch.",
    "tag": "" }, 
  { "name": "set_name_description",
    "description": "Set the name/description field of the given host_patch.",
    "tag": "" }, 
  { "name": "set_version",
    "description": "Set the version field of the given host_patch.",
    "tag": "" }, 
  { "name": "set_host",
    "description": "Set the host field of the given host_patch.",
    "tag": "" }, 
  { "name": "set_filename",
    "description": "Set the filename field of the given host_patch.",
    "tag": "" }, 
  { "name": "set_applied",
    "description": "Set the applied field of the given host_patch.",
    "tag": "" }, 
  { "name": "set_timestamp_applied",
    "description": "Set the timestamp_applied field of the given host_patch.",
    "tag": "" }, 
  { "name": "set_size",
    "description": "Set the size field of the given host_patch.",
    "tag": "" }, 
  { "name": "set_pool_patch",
    "description": "Set the pool_patch field of the given host_patch.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given host_patch.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given host_patch.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given host_patch.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified host patch, removing it from the disk. This does NOT reverse the patch",
    "tag": "" }, 
  { "name": "apply",
    "description": "Apply the selected patch and return its output",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the host_patchs known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of host_patch references to host_patch records for all host_patchs known to the system.",
    "tag": "" } ] }, { "name": "host_metrics",
"fields": [ 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "last_updated",
    "description": "Time at which this information was last updated",
    "type": "datetime",
    "tag": "" }, 
  { "name": "live",
    "description": "Pool master thinks this host is live",
    "type": "bool",
    "tag": "" }, 
  { "name": "free",
    "description": "Free host memory (bytes)",
    "type": "int",
    "tag": "" }, 
  { "name": "total",
    "description": "Total host memory (bytes)",
    "type": "int",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given host_metrics.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the host_metrics instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new host_metrics instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified host_metrics instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given host_metrics.",
    "tag": "" }, 
  { "name": "get_memory_total",
    "description": "Get the memory/total field of the given host_metrics.",
    "tag": "" }, 
  { "name": "get_memory_free",
    "description": "Get the memory/free field of the given host_metrics.",
    "tag": "" }, 
  { "name": "get_live",
    "description": "Get the live field of the given host_metrics.",
    "tag": "" }, 
  { "name": "get_last_updated",
    "description": "Get the last_updated field of the given host_metrics.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given host_metrics.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given host_metrics.",
    "tag": "" }, 
  { "name": "set_memory_total",
    "description": "Set the memory/total field of the given host_metrics.",
    "tag": "" }, 
  { "name": "set_memory_free",
    "description": "Set the memory/free field of the given host_metrics.",
    "tag": "" }, 
  { "name": "set_live",
    "description": "Set the live field of the given host_metrics.",
    "tag": "" }, 
  { "name": "set_last_updated",
    "description": "Set the last_updated field of the given host_metrics.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given host_metrics.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given host_metrics.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given host_metrics.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the host_metrics instances known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of host_metrics references to host_metrics records for all host_metrics instances known to the system.",
    "tag": "" } ] }, { "name": "host_cpu",
"fields": [ 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "utilisation",
    "description": "the current CPU utilisation",
    "type": "float",
    "tag": "" }, 
  { "name": "features",
    "description": "the physical CPU feature bitmap",
    "type": "string",
    "tag": "" }, 
  { "name": "flags",
    "description": "the flags of the physical CPU (a decoded version of the features field)",
    "type": "string",
    "tag": "" }, 
  { "name": "stepping",
    "description": "the stepping of the physical CPU",
    "type": "string",
    "tag": "" }, 
  { "name": "model",
    "description": "the model number of the physical CPU",
    "type": "int",
    "tag": "" }, 
  { "name": "family",
    "description": "the family (number) of the physical CPU",
    "type": "int",
    "tag": "" }, 
  { "name": "modelname",
    "description": "the model name of the physical CPU",
    "type": "string",
    "tag": "" }, 
  { "name": "speed",
    "description": "the speed of the physical CPU",
    "type": "int",
    "tag": "" }, 
  { "name": "vendor",
    "description": "the vendor of the physical CPU",
    "type": "string",
    "tag": "" }, 
  { "name": "number",
    "description": "the number of the physical CPU within the host",
    "type": "int",
    "tag": "" }, 
  { "name": "host",
    "description": "the host the CPU is in",
    "type": "host ref",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given host_cpu.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the host_cpu instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new host_cpu instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified host_cpu instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given host_cpu.",
    "tag": "" }, 
  { "name": "get_host",
    "description": "Get the host field of the given host_cpu.",
    "tag": "" }, 
  { "name": "get_number",
    "description": "Get the number field of the given host_cpu.",
    "tag": "" }, 
  { "name": "get_vendor",
    "description": "Get the vendor field of the given host_cpu.",
    "tag": "" }, 
  { "name": "get_speed",
    "description": "Get the speed field of the given host_cpu.",
    "tag": "" }, 
  { "name": "get_modelname",
    "description": "Get the modelname field of the given host_cpu.",
    "tag": "" }, 
  { "name": "get_family",
    "description": "Get the family field of the given host_cpu.",
    "tag": "" }, 
  { "name": "get_model",
    "description": "Get the model field of the given host_cpu.",
    "tag": "" }, 
  { "name": "get_stepping",
    "description": "Get the stepping field of the given host_cpu.",
    "tag": "" }, 
  { "name": "get_flags",
    "description": "Get the flags field of the given host_cpu.",
    "tag": "" }, 
  { "name": "get_features",
    "description": "Get the features field of the given host_cpu.",
    "tag": "" }, 
  { "name": "get_utilisation",
    "description": "Get the utilisation field of the given host_cpu.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given host_cpu.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given host_cpu.",
    "tag": "" }, 
  { "name": "set_host",
    "description": "Set the host field of the given host_cpu.",
    "tag": "" }, 
  { "name": "set_number",
    "description": "Set the number field of the given host_cpu.",
    "tag": "" }, 
  { "name": "set_vendor",
    "description": "Set the vendor field of the given host_cpu.",
    "tag": "" }, 
  { "name": "set_speed",
    "description": "Set the speed field of the given host_cpu.",
    "tag": "" }, 
  { "name": "set_modelname",
    "description": "Set the modelname field of the given host_cpu.",
    "tag": "" }, 
  { "name": "set_family",
    "description": "Set the family field of the given host_cpu.",
    "tag": "" }, 
  { "name": "set_model",
    "description": "Set the model field of the given host_cpu.",
    "tag": "" }, 
  { "name": "set_stepping",
    "description": "Set the stepping field of the given host_cpu.",
    "tag": "" }, 
  { "name": "set_flags",
    "description": "Set the flags field of the given host_cpu.",
    "tag": "" }, 
  { "name": "set_features",
    "description": "Set the features field of the given host_cpu.",
    "tag": "" }, 
  { "name": "set_utilisation",
    "description": "Set the utilisation field of the given host_cpu.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given host_cpu.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given host_cpu.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given host_cpu.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the host_cpus known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of host_cpu references to host_cpu records for all host_cpus known to the system.",
    "tag": "" } ] }, { "name": "network",
"fields": [ 
  { "name": "assigned_ips",
    "description": "The IP addresses assigned to VIFs on networks that have active xapi-managed DHCP",
    "type": "(VIF ref -> string) map",
    "tag": "" }, 
  { "name": "default_locking_mode",
    "description": "The network will use this value to determine the behaviour of all VIFs where locking_mode = default",
    "type": "enum network_default_locking_mode",
    "tag": "" }, 
  { "name": "tags",
    "description": "user-specified tags for categorization purposes",
    "type": "string set",
    "tag": "" }, 
  { "name": "blobs",
    "description": "Binary blobs associated with this network",
    "type": "(string -> blob ref) map",
    "tag": "" }, 
  { "name": "bridge",
    "description": "name of the bridge corresponding to this network on the local host",
    "type": "string",
    "tag": "" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "MTU",
    "description": "MTU in octets",
    "type": "int",
    "tag": "" }, 
  { "name": "PIFs",
    "description": "list of connected pifs",
    "type": "PIF ref set",
    "tag": "" }, 
  { "name": "VIFs",
    "description": "list of connected vifs",
    "type": "VIF ref set",
    "tag": "" }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum network_operations) map",
    "tag": "" }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum network_operations set",
    "tag": "" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "tag": "" }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given network.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the network instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new network instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified network instance.",
    "tag": "" }, 
  { "name": "get_by_name_label",
    "description": "Get all the network instances with the given label.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given network.",
    "tag": "" }, 
  { "name": "get_name_label",
    "description": "Get the name/label field of the given network.",
    "tag": "" }, 
  { "name": "get_name_description",
    "description": "Get the name/description field of the given network.",
    "tag": "" }, 
  { "name": "get_allowed_operations",
    "description": "Get the allowed_operations field of the given network.",
    "tag": "" }, 
  { "name": "get_current_operations",
    "description": "Get the current_operations field of the given network.",
    "tag": "" }, 
  { "name": "get_VIFs",
    "description": "Get the VIFs field of the given network.",
    "tag": "" }, 
  { "name": "get_PIFs",
    "description": "Get the PIFs field of the given network.",
    "tag": "" }, 
  { "name": "get_MTU",
    "description": "Get the MTU field of the given network.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given network.",
    "tag": "" }, 
  { "name": "get_bridge",
    "description": "Get the bridge field of the given network.",
    "tag": "" }, 
  { "name": "get_blobs",
    "description": "Get the blobs field of the given network.",
    "tag": "" }, 
  { "name": "get_tags",
    "description": "Get the tags field of the given network.",
    "tag": "" }, 
  { "name": "get_default_locking_mode",
    "description": "Get the default_locking_mode field of the given network.",
    "tag": "" }, 
  { "name": "get_assigned_ips",
    "description": "Get the assigned_ips field of the given network.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given network.",
    "tag": "" }, 
  { "name": "set_name_label",
    "description": "Set the name/label field of the given network.",
    "tag": "" }, 
  { "name": "set_name_description",
    "description": "Set the name/description field of the given network.",
    "tag": "" }, 
  { "name": "set_allowed_operations",
    "description": "Set the allowed_operations field of the given network.",
    "tag": "" }, 
  { "name": "add_allowed_operations",
    "description": "Add the given value to the allowed_operations field of the given network.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_allowed_operations",
    "description": "Remove the given value from the allowed_operations field of the given network.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_current_operations",
    "description": "Set the current_operations field of the given network.",
    "tag": "" }, 
  { "name": "add_to_current_operations",
    "description": "Add the given key-value pair to the current_operations field of the given network.",
    "tag": "" }, 
  { "name": "remove_from_current_operations",
    "description": "Remove the given key and its corresponding value from the current_operations field of the given network.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_MTU",
    "description": "Set the MTU field of the given network.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given network.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given network.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given network.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_bridge",
    "description": "Set the bridge field of the given network.",
    "tag": "" }, 
  { "name": "set_blobs",
    "description": "Set the blobs field of the given network.",
    "tag": "" }, 
  { "name": "add_to_blobs",
    "description": "Add the given key-value pair to the blobs field of the given network.",
    "tag": "" }, 
  { "name": "remove_from_blobs",
    "description": "Remove the given key and its corresponding value from the blobs field of the given network.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_tags",
    "description": "Set the tags field of the given network.",
    "tag": "" }, 
  { "name": "add_tags",
    "description": "Add the given value to the tags field of the given network.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_tags",
    "description": "Remove the given value from the tags field of the given network.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_default_locking_mode",
    "description": "Set the default_locking_mode field of the given network.",
    "tag": "" }, 
  { "name": "set_assigned_ips",
    "description": "Set the assigned_ips field of the given network.",
    "tag": "" }, 
  { "name": "add_to_assigned_ips",
    "description": "Add the given key-value pair to the assigned_ips field of the given network.",
    "tag": "" }, 
  { "name": "remove_from_assigned_ips",
    "description": "Remove the given key and its corresponding value from the assigned_ips field of the given network.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "create_new_blob",
    "description": "Create a placeholder for a named binary blob of data that is associated with this pool",
    "tag": "" }, 
  { "name": "set_default_locking_mode",
    "description": "Set the default locking mode for VIFs attached to this network",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the networks known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of network references to network records for all networks known to the system.",
    "tag": "" } ] }, { "name": "VIF",
"fields": [ 
  { "name": "ipv6_allowed",
    "description": "A list of IPv6 addresses which can be used to filter traffic passing through this VIF",
    "type": "string set",
    "tag": "" }, 
  { "name": "ipv4_allowed",
    "description": "A list of IPv4 addresses which can be used to filter traffic passing through this VIF",
    "type": "string set",
    "tag": "" }, 
  { "name": "locking_mode",
    "description": "current locking mode of the VIF",
    "type": "enum vif_locking_mode",
    "tag": "" }, 
  { "name": "MAC_autogenerated",
    "description": "true if the MAC was autogenerated; false indicates it was set manually",
    "type": "bool",
    "tag": "" }, 
  { "name": "metrics",
    "description": "metrics associated with this VIF",
    "type": "VIF_metrics ref",
    "tag": "" }, 
  { "name": "supported_algorithms",
    "description": "supported QoS algorithms for this VIF",
    "type": "string set",
    "tag": "" }, 
  { "name": "algorithm_params",
    "description": "parameters for chosen QoS algorithm",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "algorithm_type",
    "description": "QoS algorithm to use",
    "type": "string",
    "tag": "" }, 
  { "name": "runtime_properties",
    "description": "Device runtime properties",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "status_detail",
    "description": "error/success information associated with last attach-operation status (erased on reboot)",
    "type": "string",
    "tag": "" }, 
  { "name": "status_code",
    "description": "error/success code associated with last attach-operation (erased on reboot)",
    "type": "int",
    "tag": "" }, 
  { "name": "currently_attached",
    "description": "is the device currently attached (erased on reboot)",
    "type": "bool",
    "tag": "" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "MTU",
    "description": "MTU in octets",
    "type": "int",
    "tag": "" }, 
  { "name": "MAC",
    "description": "ethernet MAC address of virtual interface, as exposed to guest",
    "type": "string",
    "tag": "" }, 
  { "name": "VM",
    "description": "virtual machine to which this vif is connected",
    "type": "VM ref",
    "tag": "" }, 
  { "name": "network",
    "description": "virtual network to which this vif is connected",
    "type": "network ref",
    "tag": "" }, 
  { "name": "device",
    "description": "order in which VIF backends are created by xapi",
    "type": "string",
    "tag": "" }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum vif_operations) map",
    "tag": "" }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum vif_operations set",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given VIF.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the VIF instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new VIF instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified VIF instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given VIF.",
    "tag": "" }, 
  { "name": "get_allowed_operations",
    "description": "Get the allowed_operations field of the given VIF.",
    "tag": "" }, 
  { "name": "get_current_operations",
    "description": "Get the current_operations field of the given VIF.",
    "tag": "" }, 
  { "name": "get_device",
    "description": "Get the device field of the given VIF.",
    "tag": "" }, 
  { "name": "get_network",
    "description": "Get the network field of the given VIF.",
    "tag": "" }, 
  { "name": "get_VM",
    "description": "Get the VM field of the given VIF.",
    "tag": "" }, 
  { "name": "get_MAC",
    "description": "Get the MAC field of the given VIF.",
    "tag": "" }, 
  { "name": "get_MTU",
    "description": "Get the MTU field of the given VIF.",
    "tag": "" }, 
  { "name": "get_reserved",
    "description": "Get the reserved field of the given VIF.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given VIF.",
    "tag": "" }, 
  { "name": "get_currently_attached",
    "description": "Get the currently_attached field of the given VIF.",
    "tag": "" }, 
  { "name": "get_status_code",
    "description": "Get the status_code field of the given VIF.",
    "tag": "" }, 
  { "name": "get_status_detail",
    "description": "Get the status_detail field of the given VIF.",
    "tag": "" }, 
  { "name": "get_runtime_properties",
    "description": "Get the runtime_properties field of the given VIF.",
    "tag": "" }, 
  { "name": "get_qos_algorithm_type",
    "description": "Get the qos/algorithm_type field of the given VIF.",
    "tag": "" }, 
  { "name": "get_qos_algorithm_params",
    "description": "Get the qos/algorithm_params field of the given VIF.",
    "tag": "" }, 
  { "name": "get_qos_supported_algorithms",
    "description": "Get the qos/supported_algorithms field of the given VIF.",
    "tag": "" }, 
  { "name": "get_metrics",
    "description": "Get the metrics field of the given VIF.",
    "tag": "" }, 
  { "name": "get_MAC_autogenerated",
    "description": "Get the MAC_autogenerated field of the given VIF.",
    "tag": "" }, 
  { "name": "get_locking_mode",
    "description": "Get the locking_mode field of the given VIF.",
    "tag": "" }, 
  { "name": "get_ipv4_allowed",
    "description": "Get the ipv4_allowed field of the given VIF.",
    "tag": "" }, 
  { "name": "get_ipv6_allowed",
    "description": "Get the ipv6_allowed field of the given VIF.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given VIF.",
    "tag": "" }, 
  { "name": "set_allowed_operations",
    "description": "Set the allowed_operations field of the given VIF.",
    "tag": "" }, 
  { "name": "add_allowed_operations",
    "description": "Add the given value to the allowed_operations field of the given VIF.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_allowed_operations",
    "description": "Remove the given value from the allowed_operations field of the given VIF.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_current_operations",
    "description": "Set the current_operations field of the given VIF.",
    "tag": "" }, 
  { "name": "add_to_current_operations",
    "description": "Add the given key-value pair to the current_operations field of the given VIF.",
    "tag": "" }, 
  { "name": "remove_from_current_operations",
    "description": "Remove the given key and its corresponding value from the current_operations field of the given VIF.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_device",
    "description": "Set the device field of the given VIF.",
    "tag": "" }, 
  { "name": "set_network",
    "description": "Set the network field of the given VIF.",
    "tag": "" }, 
  { "name": "set_VM",
    "description": "Set the VM field of the given VIF.",
    "tag": "" }, 
  { "name": "set_MAC",
    "description": "Set the MAC field of the given VIF.",
    "tag": "" }, 
  { "name": "set_MTU",
    "description": "Set the MTU field of the given VIF.",
    "tag": "" }, 
  { "name": "set_reserved",
    "description": "Set the reserved field of the given VIF.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given VIF.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given VIF.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given VIF.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_currently_attached",
    "description": "Set the currently_attached field of the given VIF.",
    "tag": "" }, 
  { "name": "set_status_code",
    "description": "Set the status_code field of the given VIF.",
    "tag": "" }, 
  { "name": "set_status_detail",
    "description": "Set the status_detail field of the given VIF.",
    "tag": "" }, 
  { "name": "set_runtime_properties",
    "description": "Set the runtime_properties field of the given VIF.",
    "tag": "" }, 
  { "name": "add_to_runtime_properties",
    "description": "Add the given key-value pair to the runtime_properties field of the given VIF.",
    "tag": "" }, 
  { "name": "remove_from_runtime_properties",
    "description": "Remove the given key and its corresponding value from the runtime_properties field of the given VIF.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_qos_algorithm_type",
    "description": "Set the qos/algorithm_type field of the given VIF.",
    "tag": "" }, 
  { "name": "set_qos_algorithm_params",
    "description": "Set the qos/algorithm_params field of the given VIF.",
    "tag": "" }, 
  { "name": "add_to_qos_algorithm_params",
    "description": "Add the given key-value pair to the qos/algorithm_params field of the given VIF.",
    "tag": "" }, 
  { "name": "remove_from_qos_algorithm_params",
    "description": "Remove the given key and its corresponding value from the qos/algorithm_params field of the given VIF.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_qos_supported_algorithms",
    "description": "Set the qos/supported_algorithms field of the given VIF.",
    "tag": "" }, 
  { "name": "add_qos_supported_algorithms",
    "description": "Add the given value to the qos/supported_algorithms field of the given VIF.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_qos_supported_algorithms",
    "description": "Remove the given value from the qos/supported_algorithms field of the given VIF.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_metrics",
    "description": "Set the metrics field of the given VIF.",
    "tag": "" }, 
  { "name": "set_MAC_autogenerated",
    "description": "Set the MAC_autogenerated field of the given VIF.",
    "tag": "" }, 
  { "name": "set_locking_mode",
    "description": "Set the locking_mode field of the given VIF.",
    "tag": "" }, 
  { "name": "set_ipv4_allowed",
    "description": "Set the ipv4_allowed field of the given VIF.",
    "tag": "" }, 
  { "name": "add_ipv4_allowed",
    "description": "Add the given value to the ipv4_allowed field of the given VIF.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_ipv4_allowed",
    "description": "Remove the given value from the ipv4_allowed field of the given VIF.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_ipv6_allowed",
    "description": "Set the ipv6_allowed field of the given VIF.",
    "tag": "" }, 
  { "name": "add_ipv6_allowed",
    "description": "Add the given value to the ipv6_allowed field of the given VIF.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_ipv6_allowed",
    "description": "Remove the given value from the ipv6_allowed field of the given VIF.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "plug",
    "description": "Hotplug the specified VIF, dynamically attaching it to the running VM",
    "tag": "" }, 
  { "name": "unplug",
    "description": "Hot-unplug the specified VIF, dynamically unattaching it from the running VM",
    "tag": "" }, 
  { "name": "unplug_force",
    "description": "Forcibly unplug the specified VIF",
    "tag": "" }, 
  { "name": "set_locking_mode",
    "description": "Set the locking mode for this VIF",
    "tag": "" }, 
  { "name": "set_ipv4_allowed",
    "description": "Set the IPv4 addresses to which traffic on this VIF can be restricted",
    "tag": "" }, 
  { "name": "add_ipv4_allowed",
    "description": "Associates an IPv4 address with this VIF",
    "tag": "" }, 
  { "name": "remove_ipv4_allowed",
    "description": "Removes an IPv4 address from this VIF",
    "tag": "" }, 
  { "name": "set_ipv6_allowed",
    "description": "Set the IPv6 addresses to which traffic on this VIF can be restricted",
    "tag": "" }, 
  { "name": "add_ipv6_allowed",
    "description": "Associates an IPv6 address with this VIF",
    "tag": "" }, 
  { "name": "remove_ipv6_allowed",
    "description": "Removes an IPv6 address from this VIF",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the VIFs known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of VIF references to VIF records for all VIFs known to the system.",
    "tag": "" } ] }, { "name": "VIF_metrics",
"fields": [ 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "last_updated",
    "description": "Time at which this information was last updated",
    "type": "datetime",
    "tag": "" }, 
  { "name": "write_kbs",
    "description": "Write bandwidth (KiB/s)",
    "type": "float",
    "tag": "" }, 
  { "name": "read_kbs",
    "description": "Read bandwidth (KiB/s)",
    "type": "float",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given VIF_metrics.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the VIF_metrics instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new VIF_metrics instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified VIF_metrics instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given VIF_metrics.",
    "tag": "" }, 
  { "name": "get_io_read_kbs",
    "description": "Get the io/read_kbs field of the given VIF_metrics.",
    "tag": "" }, 
  { "name": "get_io_write_kbs",
    "description": "Get the io/write_kbs field of the given VIF_metrics.",
    "tag": "" }, 
  { "name": "get_last_updated",
    "description": "Get the last_updated field of the given VIF_metrics.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given VIF_metrics.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given VIF_metrics.",
    "tag": "" }, 
  { "name": "set_io_read_kbs",
    "description": "Set the io/read_kbs field of the given VIF_metrics.",
    "tag": "" }, 
  { "name": "set_io_write_kbs",
    "description": "Set the io/write_kbs field of the given VIF_metrics.",
    "tag": "" }, 
  { "name": "set_last_updated",
    "description": "Set the last_updated field of the given VIF_metrics.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given VIF_metrics.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given VIF_metrics.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given VIF_metrics.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the VIF_metrics instances known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of VIF_metrics references to VIF_metrics records for all VIF_metrics instances known to the system.",
    "tag": "" } ] }, { "name": "PIF",
"fields": [ 
  { "name": "properties",
    "description": "Additional configuration properties for the interface.",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "managed",
    "description": "Indicates whether the interface is managed by xapi. If it is not, then xapi will not configure the interface, the commands PIF.plug/unplug/reconfigure_ip(v6) can not be used, nor can the interface be bonded or have VLANs based on top through xapi.",
    "type": "bool",
    "tag": "" }, 
  { "name": "primary_address_type",
    "description": "Which protocol should define the primary address of this interface",
    "type": "enum primary_address_type",
    "tag": "" }, 
  { "name": "ipv6_gateway",
    "description": "IPv6 gateway",
    "type": "string",
    "tag": "" }, 
  { "name": "IPv6",
    "description": "IPv6 address",
    "type": "string set",
    "tag": "" }, 
  { "name": "ipv6_configuration_mode",
    "description": "Sets if and how this interface gets an IPv6 address",
    "type": "enum ipv6_configuration_mode",
    "tag": "" }, 
  { "name": "tunnel_transport_PIF_of",
    "description": "Indicates to which tunnel this PIF provides transport",
    "type": "tunnel ref set",
    "tag": "" }, 
  { "name": "tunnel_access_PIF_of",
    "description": "Indicates to which tunnel this PIF gives access",
    "type": "tunnel ref set",
    "tag": "" }, 
  { "name": "disallow_unplug",
    "description": "Prevent this PIF from being unplugged; set this to notify the management tool-stack that the PIF has a special use and should not be unplugged under any circumstances (e.g. because you're running storage traffic over it)",
    "type": "bool",
    "tag": "" }, 
  { "name": "other_config",
    "description": "Additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "management",
    "description": "Indicates whether the control software is listening for connections on this interface",
    "type": "bool",
    "tag": "" }, 
  { "name": "VLAN_slave_of",
    "description": "Indicates which VLANs this interface transmits tagged traffic to",
    "type": "VLAN ref set",
    "tag": "" }, 
  { "name": "VLAN_master_of",
    "description": "Indicates wich VLAN this interface receives untagged traffic from",
    "type": "VLAN ref",
    "tag": "" }, 
  { "name": "bond_master_of",
    "description": "Indicates this PIF represents the results of a bond",
    "type": "Bond ref set",
    "tag": "" }, 
  { "name": "bond_slave_of",
    "description": "Indicates which bond this interface is part of",
    "type": "Bond ref",
    "tag": "" }, 
  { "name": "DNS",
    "description": "IP address of DNS servers to use",
    "type": "string",
    "tag": "" }, 
  { "name": "gateway",
    "description": "IP gateway",
    "type": "string",
    "tag": "" }, 
  { "name": "netmask",
    "description": "IP netmask",
    "type": "string",
    "tag": "" }, 
  { "name": "IP",
    "description": "IP address",
    "type": "string",
    "tag": "" }, 
  { "name": "ip_configuration_mode",
    "description": "Sets if and how this interface gets an IP address",
    "type": "enum ip_configuration_mode",
    "tag": "" }, 
  { "name": "currently_attached",
    "description": "true if this interface is online",
    "type": "bool",
    "tag": "" }, 
  { "name": "physical",
    "description": "true if this represents a physical network interface",
    "type": "bool",
    "tag": "" }, 
  { "name": "metrics",
    "description": "metrics associated with this PIF",
    "type": "PIF_metrics ref",
    "tag": "" }, 
  { "name": "VLAN",
    "description": "VLAN tag for all traffic passing through this interface",
    "type": "int",
    "tag": "" }, 
  { "name": "MTU",
    "description": "MTU in octets",
    "type": "int",
    "tag": "" }, 
  { "name": "MAC",
    "description": "ethernet MAC address of physical interface",
    "type": "string",
    "tag": "" }, 
  { "name": "host",
    "description": "physical machine to which this pif is connected",
    "type": "host ref",
    "tag": "" }, 
  { "name": "network",
    "description": "virtual network to which this pif is connected",
    "type": "network ref",
    "tag": "" }, 
  { "name": "device",
    "description": "machine-readable name of the interface (e.g. eth0)",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given PIF.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the PIF instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new PIF instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified PIF instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given PIF.",
    "tag": "" }, 
  { "name": "get_device",
    "description": "Get the device field of the given PIF.",
    "tag": "" }, 
  { "name": "get_network",
    "description": "Get the network field of the given PIF.",
    "tag": "" }, 
  { "name": "get_host",
    "description": "Get the host field of the given PIF.",
    "tag": "" }, 
  { "name": "get_MAC",
    "description": "Get the MAC field of the given PIF.",
    "tag": "" }, 
  { "name": "get_MTU",
    "description": "Get the MTU field of the given PIF.",
    "tag": "" }, 
  { "name": "get_VLAN",
    "description": "Get the VLAN field of the given PIF.",
    "tag": "" }, 
  { "name": "get_device_name",
    "description": "Get the device_name field of the given PIF.",
    "tag": "" }, 
  { "name": "get_metrics",
    "description": "Get the metrics field of the given PIF.",
    "tag": "" }, 
  { "name": "get_physical",
    "description": "Get the physical field of the given PIF.",
    "tag": "" }, 
  { "name": "get_currently_attached",
    "description": "Get the currently_attached field of the given PIF.",
    "tag": "" }, 
  { "name": "get_ip_configuration_mode",
    "description": "Get the ip_configuration_mode field of the given PIF.",
    "tag": "" }, 
  { "name": "get_IP",
    "description": "Get the IP field of the given PIF.",
    "tag": "" }, 
  { "name": "get_netmask",
    "description": "Get the netmask field of the given PIF.",
    "tag": "" }, 
  { "name": "get_gateway",
    "description": "Get the gateway field of the given PIF.",
    "tag": "" }, 
  { "name": "get_DNS",
    "description": "Get the DNS field of the given PIF.",
    "tag": "" }, 
  { "name": "get_bond_slave_of",
    "description": "Get the bond_slave_of field of the given PIF.",
    "tag": "" }, 
  { "name": "get_bond_master_of",
    "description": "Get the bond_master_of field of the given PIF.",
    "tag": "" }, 
  { "name": "get_VLAN_master_of",
    "description": "Get the VLAN_master_of field of the given PIF.",
    "tag": "" }, 
  { "name": "get_VLAN_slave_of",
    "description": "Get the VLAN_slave_of field of the given PIF.",
    "tag": "" }, 
  { "name": "get_management",
    "description": "Get the management field of the given PIF.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given PIF.",
    "tag": "" }, 
  { "name": "get_disallow_unplug",
    "description": "Get the disallow_unplug field of the given PIF.",
    "tag": "" }, 
  { "name": "get_tunnel_access_PIF_of",
    "description": "Get the tunnel_access_PIF_of field of the given PIF.",
    "tag": "" }, 
  { "name": "get_tunnel_transport_PIF_of",
    "description": "Get the tunnel_transport_PIF_of field of the given PIF.",
    "tag": "" }, 
  { "name": "get_ipv6_configuration_mode",
    "description": "Get the ipv6_configuration_mode field of the given PIF.",
    "tag": "" }, 
  { "name": "get_IPv6",
    "description": "Get the IPv6 field of the given PIF.",
    "tag": "" }, 
  { "name": "get_ipv6_gateway",
    "description": "Get the ipv6_gateway field of the given PIF.",
    "tag": "" }, 
  { "name": "get_primary_address_type",
    "description": "Get the primary_address_type field of the given PIF.",
    "tag": "" }, 
  { "name": "get_managed",
    "description": "Get the managed field of the given PIF.",
    "tag": "" }, 
  { "name": "get_properties",
    "description": "Get the properties field of the given PIF.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given PIF.",
    "tag": "" }, 
  { "name": "set_device",
    "description": "Set the device field of the given PIF.",
    "tag": "" }, 
  { "name": "set_network",
    "description": "Set the network field of the given PIF.",
    "tag": "" }, 
  { "name": "set_host",
    "description": "Set the host field of the given PIF.",
    "tag": "" }, 
  { "name": "set_MAC",
    "description": "Set the MAC field of the given PIF.",
    "tag": "" }, 
  { "name": "set_MTU",
    "description": "Set the MTU field of the given PIF.",
    "tag": "" }, 
  { "name": "set_VLAN",
    "description": "Set the VLAN field of the given PIF.",
    "tag": "" }, 
  { "name": "set_device_name",
    "description": "Set the device_name field of the given PIF.",
    "tag": "" }, 
  { "name": "set_metrics",
    "description": "Set the metrics field of the given PIF.",
    "tag": "" }, 
  { "name": "set_physical",
    "description": "Set the physical field of the given PIF.",
    "tag": "" }, 
  { "name": "set_currently_attached",
    "description": "Set the currently_attached field of the given PIF.",
    "tag": "" }, 
  { "name": "set_ip_configuration_mode",
    "description": "Set the ip_configuration_mode field of the given PIF.",
    "tag": "" }, 
  { "name": "set_IP",
    "description": "Set the IP field of the given PIF.",
    "tag": "" }, 
  { "name": "set_netmask",
    "description": "Set the netmask field of the given PIF.",
    "tag": "" }, 
  { "name": "set_gateway",
    "description": "Set the gateway field of the given PIF.",
    "tag": "" }, 
  { "name": "set_DNS",
    "description": "Set the DNS field of the given PIF.",
    "tag": "" }, 
  { "name": "set_bond_slave_of",
    "description": "Set the bond_slave_of field of the given PIF.",
    "tag": "" }, 
  { "name": "set_VLAN_master_of",
    "description": "Set the VLAN_master_of field of the given PIF.",
    "tag": "" }, 
  { "name": "set_management",
    "description": "Set the management field of the given PIF.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given PIF.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given PIF.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given PIF.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_disallow_unplug",
    "description": "Set the disallow_unplug field of the given PIF.",
    "tag": "" }, 
  { "name": "set_ipv6_configuration_mode",
    "description": "Set the ipv6_configuration_mode field of the given PIF.",
    "tag": "" }, 
  { "name": "set_IPv6",
    "description": "Set the IPv6 field of the given PIF.",
    "tag": "" }, 
  { "name": "add_IPv6",
    "description": "Add the given value to the IPv6 field of the given PIF.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_IPv6",
    "description": "Remove the given value from the IPv6 field of the given PIF.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_ipv6_gateway",
    "description": "Set the ipv6_gateway field of the given PIF.",
    "tag": "" }, 
  { "name": "set_primary_address_type",
    "description": "Set the primary_address_type field of the given PIF.",
    "tag": "" }, 
  { "name": "set_managed",
    "description": "Set the managed field of the given PIF.",
    "tag": "" }, 
  { "name": "set_properties",
    "description": "Set the properties field of the given PIF.",
    "tag": "" }, 
  { "name": "add_to_properties",
    "description": "Add the given key-value pair to the properties field of the given PIF.",
    "tag": "" }, 
  { "name": "remove_from_properties",
    "description": "Remove the given key and its corresponding value from the properties field of the given PIF.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "create_VLAN",
    "description": "Create a VLAN interface from an existing physical interface. This call is deprecated: use VLAN.create instead",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the PIF object (provided it is a VLAN interface). This call is deprecated: use VLAN.destroy or Bond.destroy instead",
    "tag": "" }, 
  { "name": "reconfigure_ip",
    "description": "Reconfigure the IP address settings for this interface",
    "tag": "" }, 
  { "name": "reconfigure_ipv6",
    "description": "Reconfigure the IPv6 address settings for this interface",
    "tag": "" }, 
  { "name": "set_primary_address_type",
    "description": "Change the primary address type used by this PIF",
    "tag": "" }, 
  { "name": "scan",
    "description": "Scan for physical interfaces on a host and create PIF objects to represent them",
    "tag": "" }, 
  { "name": "introduce",
    "description": "Create a PIF object matching a particular network interface",
    "tag": "" }, 
  { "name": "forget",
    "description": "Destroy the PIF object matching a particular network interface",
    "tag": "" }, 
  { "name": "unplug",
    "description": "Attempt to bring down a physical interface",
    "tag": "" }, 
  { "name": "plug",
    "description": "Attempt to bring up a physical interface",
    "tag": "" }, 
  { "name": "db_introduce",
    "description": "Create a new PIF record in the database only",
    "tag": "" }, 
  { "name": "db_forget",
    "description": "Destroy a PIF database record.",
    "tag": "" }, 
  { "name": "set_property",
    "description": "Set the value of a property of the PIF",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the PIFs known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of PIF references to PIF records for all PIFs known to the system.",
    "tag": "" } ] }, { "name": "PIF_metrics",
"fields": [ 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "last_updated",
    "description": "Time at which this information was last updated",
    "type": "datetime",
    "tag": "" }, 
  { "name": "pci_bus_path",
    "description": "PCI bus path of the pif (if available)",
    "type": "string",
    "tag": "" }, 
  { "name": "duplex",
    "description": "Full duplex capability of the link (if available)",
    "type": "bool",
    "tag": "" }, 
  { "name": "speed",
    "description": "Speed of the link (if available)",
    "type": "int",
    "tag": "" }, 
  { "name": "device_name",
    "description": "Report device name",
    "type": "string",
    "tag": "" }, 
  { "name": "device_id",
    "description": "Report device ID",
    "type": "string",
    "tag": "" }, 
  { "name": "vendor_name",
    "description": "Report vendor name",
    "type": "string",
    "tag": "" }, 
  { "name": "vendor_id",
    "description": "Report vendor ID",
    "type": "string",
    "tag": "" }, 
  { "name": "carrier",
    "description": "Report if the PIF got a carrier or not",
    "type": "bool",
    "tag": "" }, 
  { "name": "write_kbs",
    "description": "Write bandwidth (KiB/s)",
    "type": "float",
    "tag": "" }, 
  { "name": "read_kbs",
    "description": "Read bandwidth (KiB/s)",
    "type": "float",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the PIF_metrics instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new PIF_metrics instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified PIF_metrics instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "get_io_read_kbs",
    "description": "Get the io/read_kbs field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "get_io_write_kbs",
    "description": "Get the io/write_kbs field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "get_carrier",
    "description": "Get the carrier field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "get_vendor_id",
    "description": "Get the vendor_id field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "get_vendor_name",
    "description": "Get the vendor_name field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "get_device_id",
    "description": "Get the device_id field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "get_device_name",
    "description": "Get the device_name field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "get_speed",
    "description": "Get the speed field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "get_duplex",
    "description": "Get the duplex field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "get_pci_bus_path",
    "description": "Get the pci_bus_path field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "get_last_updated",
    "description": "Get the last_updated field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "set_io_read_kbs",
    "description": "Set the io/read_kbs field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "set_io_write_kbs",
    "description": "Set the io/write_kbs field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "set_carrier",
    "description": "Set the carrier field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "set_vendor_id",
    "description": "Set the vendor_id field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "set_vendor_name",
    "description": "Set the vendor_name field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "set_device_id",
    "description": "Set the device_id field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "set_device_name",
    "description": "Set the device_name field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "set_speed",
    "description": "Set the speed field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "set_duplex",
    "description": "Set the duplex field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "set_pci_bus_path",
    "description": "Set the pci_bus_path field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "set_last_updated",
    "description": "Set the last_updated field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given PIF_metrics.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given PIF_metrics.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the PIF_metrics instances known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of PIF_metrics references to PIF_metrics records for all PIF_metrics instances known to the system.",
    "tag": "" } ] }, { "name": "Bond",
"fields": [ 
  { "name": "links_up",
    "description": "Number of links up in this bond",
    "type": "int",
    "tag": "" }, 
  { "name": "properties",
    "description": "Additional configuration properties specific to the bond mode.",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "mode",
    "description": "The algorithm used to distribute traffic among the bonded NICs",
    "type": "enum bond_mode",
    "tag": "" }, 
  { "name": "primary_slave",
    "description": "The PIF of which the IP configuration and MAC were copied to the bond, and which will receive all configuration/VLANs/VIFs on the bond if the bond is destroyed",
    "type": "PIF ref",
    "tag": "" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "slaves",
    "description": "The interfaces which are part of this bond",
    "type": "PIF ref set",
    "tag": "" }, 
  { "name": "master",
    "description": "The bonded interface",
    "type": "PIF ref",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given Bond.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the Bond instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new Bond instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified Bond instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given Bond.",
    "tag": "" }, 
  { "name": "get_master",
    "description": "Get the master field of the given Bond.",
    "tag": "" }, 
  { "name": "get_slaves",
    "description": "Get the slaves field of the given Bond.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given Bond.",
    "tag": "" }, 
  { "name": "get_primary_slave",
    "description": "Get the primary_slave field of the given Bond.",
    "tag": "" }, 
  { "name": "get_mode",
    "description": "Get the mode field of the given Bond.",
    "tag": "" }, 
  { "name": "get_properties",
    "description": "Get the properties field of the given Bond.",
    "tag": "" }, 
  { "name": "get_links_up",
    "description": "Get the links_up field of the given Bond.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given Bond.",
    "tag": "" }, 
  { "name": "set_master",
    "description": "Set the master field of the given Bond.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given Bond.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given Bond.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given Bond.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_primary_slave",
    "description": "Set the primary_slave field of the given Bond.",
    "tag": "" }, 
  { "name": "set_mode",
    "description": "Set the mode field of the given Bond.",
    "tag": "" }, 
  { "name": "set_properties",
    "description": "Set the properties field of the given Bond.",
    "tag": "" }, 
  { "name": "add_to_properties",
    "description": "Add the given key-value pair to the properties field of the given Bond.",
    "tag": "" }, 
  { "name": "remove_from_properties",
    "description": "Remove the given key and its corresponding value from the properties field of the given Bond.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_links_up",
    "description": "Set the links_up field of the given Bond.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create an interface bond",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy an interface bond",
    "tag": "" }, 
  { "name": "set_mode",
    "description": "Change the bond mode",
    "tag": "" }, 
  { "name": "set_property",
    "description": "Set the value of a property of the bond",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the Bonds known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of Bond references to Bond records for all Bonds known to the system.",
    "tag": "" } ] }, { "name": "VLAN",
"fields": [ 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "tag",
    "description": "VLAN tag in use",
    "type": "int",
    "tag": "" }, 
  { "name": "untagged_PIF",
    "description": "interface on which traffic is untagged",
    "type": "PIF ref",
    "tag": "" }, 
  { "name": "tagged_PIF",
    "description": "interface on which traffic is tagged",
    "type": "PIF ref",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given VLAN.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the VLAN instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new VLAN instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified VLAN instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given VLAN.",
    "tag": "" }, 
  { "name": "get_tagged_PIF",
    "description": "Get the tagged_PIF field of the given VLAN.",
    "tag": "" }, 
  { "name": "get_untagged_PIF",
    "description": "Get the untagged_PIF field of the given VLAN.",
    "tag": "" }, 
  { "name": "get_tag",
    "description": "Get the tag field of the given VLAN.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given VLAN.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given VLAN.",
    "tag": "" }, 
  { "name": "set_tagged_PIF",
    "description": "Set the tagged_PIF field of the given VLAN.",
    "tag": "" }, 
  { "name": "set_untagged_PIF",
    "description": "Set the untagged_PIF field of the given VLAN.",
    "tag": "" }, 
  { "name": "set_tag",
    "description": "Set the tag field of the given VLAN.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given VLAN.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given VLAN.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given VLAN.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a VLAN mux/demuxer",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy a VLAN mux/demuxer",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the VLANs known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of VLAN references to VLAN records for all VLANs known to the system.",
    "tag": "" } ] }, { "name": "SM",
"fields": [ 
  { "name": "driver_filename",
    "description": "filename of the storage driver",
    "type": "string",
    "tag": "" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "features",
    "description": "capabilities of the SM plugin, with capability version numbers",
    "type": "(string -> int) map",
    "tag": "" }, 
  { "name": "capabilities",
    "description": "capabilities of the SM plugin",
    "type": "string set",
    "tag": "" }, 
  { "name": "configuration",
    "description": "names and descriptions of device config keys",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "required_api_version",
    "description": "Minimum SM API version required on the server",
    "type": "string",
    "tag": "" }, 
  { "name": "version",
    "description": "Version of the plugin",
    "type": "string",
    "tag": "" }, 
  { "name": "copyright",
    "description": "Entity which owns the copyright of this plugin",
    "type": "string",
    "tag": "" }, 
  { "name": "vendor",
    "description": "Vendor who created this plugin",
    "type": "string",
    "tag": "" }, 
  { "name": "type",
    "description": "SR.type",
    "type": "string",
    "tag": "" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "tag": "" }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given SM.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the SM instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new SM instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified SM instance.",
    "tag": "" }, 
  { "name": "get_by_name_label",
    "description": "Get all the SM instances with the given label.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given SM.",
    "tag": "" }, 
  { "name": "get_name_label",
    "description": "Get the name/label field of the given SM.",
    "tag": "" }, 
  { "name": "get_name_description",
    "description": "Get the name/description field of the given SM.",
    "tag": "" }, 
  { "name": "get_type",
    "description": "Get the type field of the given SM.",
    "tag": "" }, 
  { "name": "get_vendor",
    "description": "Get the vendor field of the given SM.",
    "tag": "" }, 
  { "name": "get_copyright",
    "description": "Get the copyright field of the given SM.",
    "tag": "" }, 
  { "name": "get_version",
    "description": "Get the version field of the given SM.",
    "tag": "" }, 
  { "name": "get_required_api_version",
    "description": "Get the required_api_version field of the given SM.",
    "tag": "" }, 
  { "name": "get_configuration",
    "description": "Get the configuration field of the given SM.",
    "tag": "" }, 
  { "name": "get_capabilities",
    "description": "Get the capabilities field of the given SM.",
    "tag": "" }, 
  { "name": "get_features",
    "description": "Get the features field of the given SM.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given SM.",
    "tag": "" }, 
  { "name": "get_driver_filename",
    "description": "Get the driver_filename field of the given SM.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given SM.",
    "tag": "" }, 
  { "name": "set_name_label",
    "description": "Set the name/label field of the given SM.",
    "tag": "" }, 
  { "name": "set_name_description",
    "description": "Set the name/description field of the given SM.",
    "tag": "" }, 
  { "name": "set_type",
    "description": "Set the type field of the given SM.",
    "tag": "" }, 
  { "name": "set_vendor",
    "description": "Set the vendor field of the given SM.",
    "tag": "" }, 
  { "name": "set_copyright",
    "description": "Set the copyright field of the given SM.",
    "tag": "" }, 
  { "name": "set_version",
    "description": "Set the version field of the given SM.",
    "tag": "" }, 
  { "name": "set_required_api_version",
    "description": "Set the required_api_version field of the given SM.",
    "tag": "" }, 
  { "name": "set_configuration",
    "description": "Set the configuration field of the given SM.",
    "tag": "" }, 
  { "name": "add_to_configuration",
    "description": "Add the given key-value pair to the configuration field of the given SM.",
    "tag": "" }, 
  { "name": "remove_from_configuration",
    "description": "Remove the given key and its corresponding value from the configuration field of the given SM.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_capabilities",
    "description": "Set the capabilities field of the given SM.",
    "tag": "" }, 
  { "name": "add_capabilities",
    "description": "Add the given value to the capabilities field of the given SM.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_capabilities",
    "description": "Remove the given value from the capabilities field of the given SM.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_features",
    "description": "Set the features field of the given SM.",
    "tag": "" }, 
  { "name": "add_to_features",
    "description": "Add the given key-value pair to the features field of the given SM.",
    "tag": "" }, 
  { "name": "remove_from_features",
    "description": "Remove the given key and its corresponding value from the features field of the given SM.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given SM.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given SM.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given SM.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_driver_filename",
    "description": "Set the driver_filename field of the given SM.",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the SMs known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of SM references to SM records for all SMs known to the system.",
    "tag": "" } ] }, { "name": "SR",
"fields": [ 
  { "name": "introduced_by",
    "description": "The disaster recovery task which introduced this SR",
    "type": "DR_task ref",
    "tag": "" }, 
  { "name": "local_cache_enabled",
    "description": "True if this SR is assigned to be the local cache for its host",
    "type": "bool",
    "tag": "" }, 
  { "name": "blobs",
    "description": "Binary blobs associated with this SR",
    "type": "(string -> blob ref) map",
    "tag": "" }, 
  { "name": "sm_config",
    "description": "SM dependent data",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "tags",
    "description": "user-specified tags for categorization purposes",
    "type": "string set",
    "tag": "" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "shared",
    "description": "true if this SR is (capable of being) shared between multiple hosts",
    "type": "bool",
    "tag": "" }, 
  { "name": "content_type",
    "description": "the type of the SR's content, if required (e.g. ISOs)",
    "type": "string",
    "tag": "" }, 
  { "name": "type",
    "description": "type of the storage repository",
    "type": "string",
    "tag": "" }, 
  { "name": "physical_size",
    "description": "total physical size of the repository (in bytes)",
    "type": "int",
    "tag": "" }, 
  { "name": "physical_utilisation",
    "description": "physical space currently utilised on this storage repository (in bytes). Note that for sparse disk formats, physical_utilisation may be less than virtual_allocation",
    "type": "int",
    "tag": "" }, 
  { "name": "virtual_allocation",
    "description": "sum of virtual_sizes of all VDIs in this storage repository (in bytes)",
    "type": "int",
    "tag": "" }, 
  { "name": "PBDs",
    "description": "describes how particular hosts can see this storage repository",
    "type": "PBD ref set",
    "tag": "" }, 
  { "name": "VDIs",
    "description": "all virtual disks known to this storage repository",
    "type": "VDI ref set",
    "tag": "" }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum storage_operations) map",
    "tag": "" }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum storage_operations set",
    "tag": "" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "tag": "" }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given SR.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the SR instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new SR instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified SR instance.",
    "tag": "" }, 
  { "name": "get_by_name_label",
    "description": "Get all the SR instances with the given label.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given SR.",
    "tag": "" }, 
  { "name": "get_name_label",
    "description": "Get the name/label field of the given SR.",
    "tag": "" }, 
  { "name": "get_name_description",
    "description": "Get the name/description field of the given SR.",
    "tag": "" }, 
  { "name": "get_allowed_operations",
    "description": "Get the allowed_operations field of the given SR.",
    "tag": "" }, 
  { "name": "get_current_operations",
    "description": "Get the current_operations field of the given SR.",
    "tag": "" }, 
  { "name": "get_VDIs",
    "description": "Get the VDIs field of the given SR.",
    "tag": "" }, 
  { "name": "get_PBDs",
    "description": "Get the PBDs field of the given SR.",
    "tag": "" }, 
  { "name": "get_virtual_allocation",
    "description": "Get the virtual_allocation field of the given SR.",
    "tag": "" }, 
  { "name": "get_physical_utilisation",
    "description": "Get the physical_utilisation field of the given SR.",
    "tag": "" }, 
  { "name": "get_physical_size",
    "description": "Get the physical_size field of the given SR.",
    "tag": "" }, 
  { "name": "get_type",
    "description": "Get the type field of the given SR.",
    "tag": "" }, 
  { "name": "get_content_type",
    "description": "Get the content_type field of the given SR.",
    "tag": "" }, 
  { "name": "get_shared",
    "description": "Get the shared field of the given SR.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given SR.",
    "tag": "" }, 
  { "name": "get_tags",
    "description": "Get the tags field of the given SR.",
    "tag": "" }, 
  { "name": "get_default_vdi_visibility",
    "description": "Get the default_vdi_visibility field of the given SR.",
    "tag": "" }, 
  { "name": "get_sm_config",
    "description": "Get the sm_config field of the given SR.",
    "tag": "" }, 
  { "name": "get_blobs",
    "description": "Get the blobs field of the given SR.",
    "tag": "" }, 
  { "name": "get_local_cache_enabled",
    "description": "Get the local_cache_enabled field of the given SR.",
    "tag": "" }, 
  { "name": "get_introduced_by",
    "description": "Get the introduced_by field of the given SR.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given SR.",
    "tag": "" }, 
  { "name": "set_name_label",
    "description": "Set the name/label field of the given SR.",
    "tag": "" }, 
  { "name": "set_name_description",
    "description": "Set the name/description field of the given SR.",
    "tag": "" }, 
  { "name": "set_allowed_operations",
    "description": "Set the allowed_operations field of the given SR.",
    "tag": "" }, 
  { "name": "add_allowed_operations",
    "description": "Add the given value to the allowed_operations field of the given SR.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_allowed_operations",
    "description": "Remove the given value from the allowed_operations field of the given SR.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_current_operations",
    "description": "Set the current_operations field of the given SR.",
    "tag": "" }, 
  { "name": "add_to_current_operations",
    "description": "Add the given key-value pair to the current_operations field of the given SR.",
    "tag": "" }, 
  { "name": "remove_from_current_operations",
    "description": "Remove the given key and its corresponding value from the current_operations field of the given SR.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_virtual_allocation",
    "description": "Set the virtual_allocation field of the given SR.",
    "tag": "" }, 
  { "name": "set_physical_utilisation",
    "description": "Set the physical_utilisation field of the given SR.",
    "tag": "" }, 
  { "name": "set_physical_size",
    "description": "Set the physical_size field of the given SR.",
    "tag": "" }, 
  { "name": "set_type",
    "description": "Set the type field of the given SR.",
    "tag": "" }, 
  { "name": "set_content_type",
    "description": "Set the content_type field of the given SR.",
    "tag": "" }, 
  { "name": "set_shared",
    "description": "Set the shared field of the given SR.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given SR.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given SR.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given SR.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_tags",
    "description": "Set the tags field of the given SR.",
    "tag": "" }, 
  { "name": "add_tags",
    "description": "Add the given value to the tags field of the given SR.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_tags",
    "description": "Remove the given value from the tags field of the given SR.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_default_vdi_visibility",
    "description": "Set the default_vdi_visibility field of the given SR.",
    "tag": "" }, 
  { "name": "set_sm_config",
    "description": "Set the sm_config field of the given SR.",
    "tag": "" }, 
  { "name": "add_to_sm_config",
    "description": "Add the given key-value pair to the sm_config field of the given SR.",
    "tag": "" }, 
  { "name": "remove_from_sm_config",
    "description": "Remove the given key and its corresponding value from the sm_config field of the given SR.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_blobs",
    "description": "Set the blobs field of the given SR.",
    "tag": "" }, 
  { "name": "add_to_blobs",
    "description": "Add the given key-value pair to the blobs field of the given SR.",
    "tag": "" }, 
  { "name": "remove_from_blobs",
    "description": "Remove the given key and its corresponding value from the blobs field of the given SR.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_local_cache_enabled",
    "description": "Set the local_cache_enabled field of the given SR.",
    "tag": "" }, 
  { "name": "set_introduced_by",
    "description": "Set the introduced_by field of the given SR.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new Storage Repository and introduce it into the managed system, creating both SR record and PBD record to attach it to current host (with specified device_config parameters)",
    "tag": "" }, 
  { "name": "introduce",
    "description": "Introduce a new Storage Repository into the managed system",
    "tag": "" }, 
  { "name": "make",
    "description": "Create a new Storage Repository on disk. This call is deprecated: use SR.create instead.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy specified SR, removing SR-record from database and remove SR from disk. (In order to affect this operation the appropriate device_config is read from the specified SR's PBD on current host)",
    "tag": "" }, 
  { "name": "forget",
    "description": "Removing specified SR-record from database, without attempting to remove SR from disk",
    "tag": "" }, 
  { "name": "update",
    "description": "Refresh the fields on the SR object",
    "tag": "" }, 
  { "name": "get_supported_types",
    "description": "Return a set of all the SR types supported by the system",
    "tag": "" }, 
  { "name": "scan",
    "description": "Refreshes the list of VDIs associated with an SR",
    "tag": "" }, 
  { "name": "probe",
    "description": "Perform a backend-specific scan, using the given device_config.  If the device_config is complete, then this will return a list of the SRs present of this type on the device, if any.  If the device_config is partial, then a backend-specific scan will be performed, returning results that will guide the user in improving the device_config.",
    "tag": "" }, 
  { "name": "set_shared",
    "description": "Sets the shared flag on the SR",
    "tag": "" }, 
  { "name": "set_name_label",
    "description": "Set the name label of the SR",
    "tag": "" }, 
  { "name": "set_name_description",
    "description": "Set the name description of the SR",
    "tag": "" }, 
  { "name": "create_new_blob",
    "description": "Create a placeholder for a named binary blob of data that is associated with this SR",
    "tag": "" }, 
  { "name": "set_physical_size",
    "description": "Sets the SR's physical_size field",
    "tag": "" }, 
  { "name": "set_virtual_allocation",
    "description": "Sets the SR's virtual_allocation field",
    "tag": "" }, 
  { "name": "set_physical_utilisation",
    "description": "Sets the SR's physical_utilisation field",
    "tag": "" }, 
  { "name": "assert_can_host_ha_statefile",
    "description": "Returns successfully if the given SR can host an HA statefile. Otherwise returns an error to explain why not",
    "tag": "" }, 
  { "name": "assert_supports_database_replication",
    "description": "Returns successfully if the given SR supports database replication. Otherwise returns an error to explain why not.",
    "tag": "" }, 
  { "name": "enable_database_replication",
    "description": "",
    "tag": "" }, 
  { "name": "disable_database_replication",
    "description": "",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the SRs known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of SR references to SR records for all SRs known to the system.",
    "tag": "" } ] }, { "name": "VDI",
"fields": [ 
  { "name": "metadata_latest",
    "description": "Whether this VDI contains the latest known accessible metadata for the pool",
    "type": "bool",
    "tag": "" }, 
  { "name": "metadata_of_pool",
    "description": "The pool whose metadata is contained in this VDI",
    "type": "pool ref",
    "tag": "" }, 
  { "name": "on_boot",
    "description": "The behaviour of this VDI on a VM boot",
    "type": "enum on_boot",
    "tag": "" }, 
  { "name": "allow_caching",
    "description": "true if this VDI is to be cached in the local cache SR",
    "type": "bool",
    "tag": "" }, 
  { "name": "tags",
    "description": "user-specified tags for categorization purposes",
    "type": "string set",
    "tag": "" }, 
  { "name": "snapshot_time",
    "description": "Date/time when this snapshot was created.",
    "type": "datetime",
    "tag": "snapshots" }, 
  { "name": "snapshots",
    "description": "List pointing to all the VDIs snapshots.",
    "type": "VDI ref set",
    "tag": "snapshots" }, 
  { "name": "snapshot_of",
    "description": "Ref pointing to the VDI this snapshot is of.",
    "type": "VDI ref",
    "tag": "snapshots" }, 
  { "name": "is_a_snapshot",
    "description": "true if this is a snapshot.",
    "type": "bool",
    "tag": "snapshots" }, 
  { "name": "sm_config",
    "description": "SM dependent data",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "xenstore_data",
    "description": "data to be inserted into the xenstore tree (/local/domain/0/backend/vbd/<domid>/<device-id>/sm-data) after the VDI is attached. This is generally set by the SM backends on vdi_attach.",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "parent",
    "description": "References the parent disk, if this VDI is part of a chain",
    "type": "VDI ref",
    "tag": "" }, 
  { "name": "missing",
    "description": "true if SR scan operation reported this VDI as not present on disk",
    "type": "bool",
    "tag": "" }, 
  { "name": "managed",
    "description": "",
    "type": "bool",
    "tag": "" }, 
  { "name": "location",
    "description": "location information",
    "type": "string",
    "tag": "" }, 
  { "name": "storage_lock",
    "description": "true if this disk is locked at the storage level",
    "type": "bool",
    "tag": "" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "read_only",
    "description": "true if this disk may ONLY be mounted read-only",
    "type": "bool",
    "tag": "" }, 
  { "name": "sharable",
    "description": "true if this disk may be shared",
    "type": "bool",
    "tag": "" }, 
  { "name": "type",
    "description": "type of the VDI",
    "type": "enum vdi_type",
    "tag": "" }, 
  { "name": "physical_utilisation",
    "description": "amount of physical space that the disk image is currently taking up on the storage repository (in bytes)",
    "type": "int",
    "tag": "" }, 
  { "name": "virtual_size",
    "description": "size of disk as presented to the guest (in bytes). Note that, depending on storage backend type, requested size may not be respected exactly",
    "type": "int",
    "tag": "" }, 
  { "name": "crash_dumps",
    "description": "list of crash dumps that refer to this disk",
    "type": "crashdump ref set",
    "tag": "" }, 
  { "name": "VBDs",
    "description": "list of vbds that refer to this disk",
    "type": "VBD ref set",
    "tag": "" }, 
  { "name": "SR",
    "description": "storage repository in which the VDI resides",
    "type": "SR ref",
    "tag": "" }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum vdi_operations) map",
    "tag": "" }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum vdi_operations set",
    "tag": "" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "tag": "" }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given VDI.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the VDI instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new VDI instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified VDI instance.",
    "tag": "" }, 
  { "name": "get_by_name_label",
    "description": "Get all the VDI instances with the given label.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given VDI.",
    "tag": "" }, 
  { "name": "get_name_label",
    "description": "Get the name/label field of the given VDI.",
    "tag": "" }, 
  { "name": "get_name_description",
    "description": "Get the name/description field of the given VDI.",
    "tag": "" }, 
  { "name": "get_allowed_operations",
    "description": "Get the allowed_operations field of the given VDI.",
    "tag": "" }, 
  { "name": "get_current_operations",
    "description": "Get the current_operations field of the given VDI.",
    "tag": "" }, 
  { "name": "get_SR",
    "description": "Get the SR field of the given VDI.",
    "tag": "" }, 
  { "name": "get_VBDs",
    "description": "Get the VBDs field of the given VDI.",
    "tag": "" }, 
  { "name": "get_crash_dumps",
    "description": "Get the crash_dumps field of the given VDI.",
    "tag": "" }, 
  { "name": "get_virtual_size",
    "description": "Get the virtual_size field of the given VDI.",
    "tag": "" }, 
  { "name": "get_physical_utilisation",
    "description": "Get the physical_utilisation field of the given VDI.",
    "tag": "" }, 
  { "name": "get_type",
    "description": "Get the type field of the given VDI.",
    "tag": "" }, 
  { "name": "get_sharable",
    "description": "Get the sharable field of the given VDI.",
    "tag": "" }, 
  { "name": "get_read_only",
    "description": "Get the read_only field of the given VDI.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given VDI.",
    "tag": "" }, 
  { "name": "get_storage_lock",
    "description": "Get the storage_lock field of the given VDI.",
    "tag": "" }, 
  { "name": "get_location",
    "description": "Get the location field of the given VDI.",
    "tag": "" }, 
  { "name": "get_managed",
    "description": "Get the managed field of the given VDI.",
    "tag": "" }, 
  { "name": "get_missing",
    "description": "Get the missing field of the given VDI.",
    "tag": "" }, 
  { "name": "get_parent",
    "description": "Get the parent field of the given VDI.",
    "tag": "" }, 
  { "name": "get_xenstore_data",
    "description": "Get the xenstore_data field of the given VDI.",
    "tag": "" }, 
  { "name": "get_sm_config",
    "description": "Get the sm_config field of the given VDI.",
    "tag": "" }, 
  { "name": "get_is_a_snapshot",
    "description": "Get the is_a_snapshot field of the given VDI.",
    "tag": "" }, 
  { "name": "get_snapshot_of",
    "description": "Get the snapshot_of field of the given VDI.",
    "tag": "" }, 
  { "name": "get_snapshots",
    "description": "Get the snapshots field of the given VDI.",
    "tag": "" }, 
  { "name": "get_snapshot_time",
    "description": "Get the snapshot_time field of the given VDI.",
    "tag": "" }, 
  { "name": "get_tags",
    "description": "Get the tags field of the given VDI.",
    "tag": "" }, 
  { "name": "get_allow_caching",
    "description": "Get the allow_caching field of the given VDI.",
    "tag": "" }, 
  { "name": "get_on_boot",
    "description": "Get the on_boot field of the given VDI.",
    "tag": "" }, 
  { "name": "get_metadata_of_pool",
    "description": "Get the metadata_of_pool field of the given VDI.",
    "tag": "" }, 
  { "name": "get_metadata_latest",
    "description": "Get the metadata_latest field of the given VDI.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given VDI.",
    "tag": "" }, 
  { "name": "set_name_label",
    "description": "Set the name/label field of the given VDI.",
    "tag": "" }, 
  { "name": "set_name_description",
    "description": "Set the name/description field of the given VDI.",
    "tag": "" }, 
  { "name": "set_allowed_operations",
    "description": "Set the allowed_operations field of the given VDI.",
    "tag": "" }, 
  { "name": "add_allowed_operations",
    "description": "Add the given value to the allowed_operations field of the given VDI.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_allowed_operations",
    "description": "Remove the given value from the allowed_operations field of the given VDI.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_current_operations",
    "description": "Set the current_operations field of the given VDI.",
    "tag": "" }, 
  { "name": "add_to_current_operations",
    "description": "Add the given key-value pair to the current_operations field of the given VDI.",
    "tag": "" }, 
  { "name": "remove_from_current_operations",
    "description": "Remove the given key and its corresponding value from the current_operations field of the given VDI.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_SR",
    "description": "Set the SR field of the given VDI.",
    "tag": "" }, 
  { "name": "set_virtual_size",
    "description": "Set the virtual_size field of the given VDI.",
    "tag": "" }, 
  { "name": "set_physical_utilisation",
    "description": "Set the physical_utilisation field of the given VDI.",
    "tag": "" }, 
  { "name": "set_type",
    "description": "Set the type field of the given VDI.",
    "tag": "" }, 
  { "name": "set_sharable",
    "description": "Set the sharable field of the given VDI.",
    "tag": "" }, 
  { "name": "set_read_only",
    "description": "Set the read_only field of the given VDI.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given VDI.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given VDI.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given VDI.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_storage_lock",
    "description": "Set the storage_lock field of the given VDI.",
    "tag": "" }, 
  { "name": "set_location",
    "description": "Set the location field of the given VDI.",
    "tag": "" }, 
  { "name": "set_managed",
    "description": "Set the managed field of the given VDI.",
    "tag": "" }, 
  { "name": "set_missing",
    "description": "Set the missing field of the given VDI.",
    "tag": "" }, 
  { "name": "set_parent",
    "description": "Set the parent field of the given VDI.",
    "tag": "" }, 
  { "name": "set_xenstore_data",
    "description": "Set the xenstore_data field of the given VDI.",
    "tag": "" }, 
  { "name": "add_to_xenstore_data",
    "description": "Add the given key-value pair to the xenstore_data field of the given VDI.",
    "tag": "" }, 
  { "name": "remove_from_xenstore_data",
    "description": "Remove the given key and its corresponding value from the xenstore_data field of the given VDI.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_sm_config",
    "description": "Set the sm_config field of the given VDI.",
    "tag": "" }, 
  { "name": "add_to_sm_config",
    "description": "Add the given key-value pair to the sm_config field of the given VDI.",
    "tag": "" }, 
  { "name": "remove_from_sm_config",
    "description": "Remove the given key and its corresponding value from the sm_config field of the given VDI.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_is_a_snapshot",
    "description": "Set the is_a_snapshot field of the given VDI.",
    "tag": "" }, 
  { "name": "set_snapshot_of",
    "description": "Set the snapshot_of field of the given VDI.",
    "tag": "" }, 
  { "name": "set_snapshot_time",
    "description": "Set the snapshot_time field of the given VDI.",
    "tag": "" }, 
  { "name": "set_tags",
    "description": "Set the tags field of the given VDI.",
    "tag": "" }, 
  { "name": "add_tags",
    "description": "Add the given value to the tags field of the given VDI.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_tags",
    "description": "Remove the given value from the tags field of the given VDI.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_allow_caching",
    "description": "Set the allow_caching field of the given VDI.",
    "tag": "" }, 
  { "name": "set_on_boot",
    "description": "Set the on_boot field of the given VDI.",
    "tag": "" }, 
  { "name": "set_metadata_of_pool",
    "description": "Set the metadata_of_pool field of the given VDI.",
    "tag": "" }, 
  { "name": "set_metadata_latest",
    "description": "Set the metadata_latest field of the given VDI.",
    "tag": "" }, 
  { "name": "snapshot",
    "description": "Take a read-only snapshot of the VDI, returning a reference to the snapshot. If any driver_params are specified then these are passed through to the storage-specific substrate driver that takes the snapshot. NB the snapshot lives in the same Storage Repository as its parent.",
    "tag": "snapshots" }, 
  { "name": "clone",
    "description": "Take an exact copy of the VDI and return a reference to the new disk. If any driver_params are specified then these are passed through to the storage-specific substrate driver that implements the clone operation. NB the clone lives in the same Storage Repository as its parent.",
    "tag": "snapshots" }, 
  { "name": "resize",
    "description": "Resize the VDI.",
    "tag": "" }, 
  { "name": "resize_online",
    "description": "Resize the VDI which may or may not be attached to running guests.",
    "tag": "" }, 
  { "name": "introduce",
    "description": "Create a new VDI record in the database only",
    "tag": "" }, 
  { "name": "db_introduce",
    "description": "Create a new VDI record in the database only",
    "tag": "" }, 
  { "name": "db_forget",
    "description": "Removes a VDI record from the database",
    "tag": "" }, 
  { "name": "update",
    "description": "Ask the storage backend to refresh the fields in the VDI object",
    "tag": "" }, 
  { "name": "copy",
    "description": "Copy either a full VDI or the block differences between two VDIs into either a fresh VDI or an existing VDI.",
    "tag": "" }, 
  { "name": "set_managed",
    "description": "Sets the VDI's managed field",
    "tag": "" }, 
  { "name": "forget",
    "description": "Removes a VDI record from the database",
    "tag": "" }, 
  { "name": "set_sharable",
    "description": "Sets the VDI's sharable field",
    "tag": "" }, 
  { "name": "set_read_only",
    "description": "Sets the VDI's read_only field",
    "tag": "" }, 
  { "name": "set_missing",
    "description": "Sets the VDI's missing field",
    "tag": "" }, 
  { "name": "set_virtual_size",
    "description": "Sets the VDI's virtual_size field",
    "tag": "" }, 
  { "name": "set_physical_utilisation",
    "description": "Sets the VDI's physical_utilisation field",
    "tag": "" }, 
  { "name": "set_is_a_snapshot",
    "description": "Sets whether this VDI is a snapshot",
    "tag": "" }, 
  { "name": "set_snapshot_of",
    "description": "Sets the VDI of which this VDI is a snapshot",
    "tag": "" }, 
  { "name": "set_snapshot_time",
    "description": "Sets the snapshot time of this VDI.",
    "tag": "" }, 
  { "name": "set_metadata_of_pool",
    "description": "Records the pool whose metadata is contained by this VDI.",
    "tag": "" }, 
  { "name": "set_name_label",
    "description": "Set the name label of the VDI. This can only happen when then its SR is currently attached.",
    "tag": "" }, 
  { "name": "set_name_description",
    "description": "Set the name description of the VDI. This can only happen when its SR is currently attached.",
    "tag": "" }, 
  { "name": "set_on_boot",
    "description": "Set the value of the on_boot parameter. This value can only be changed when the VDI is not attached to a running VM.",
    "tag": "" }, 
  { "name": "set_allow_caching",
    "description": "Set the value of the allow_caching parameter. This value can only be changed when the VDI is not attached to a running VM. The caching behaviour is only affected by this flag for VHD-based VDIs that have one parent and no child VHDs. Moreover, caching only takes place when the host running the VM containing this VDI has a nominated SR for local caching.",
    "tag": "" }, 
  { "name": "open_database",
    "description": "Load the metadata found on the supplied VDI and return a session reference which can be used in XenAPI calls to query its contents.",
    "tag": "" }, 
  { "name": "read_database_pool_uuid",
    "description": "Check the VDI cache for the pool UUID of the database on this VDI.",
    "tag": "" }, 
  { "name": "pool_migrate",
    "description": "Migrate a VDI, which may be attached to a running guest, to a different SR. The destination SR must be visible to the guest.",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the VDIs known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of VDI references to VDI records for all VDIs known to the system.",
    "tag": "" } ] }, { "name": "VBD",
"fields": [ 
  { "name": "metrics",
    "description": "metrics associated with this VBD",
    "type": "VBD_metrics ref",
    "tag": "" }, 
  { "name": "supported_algorithms",
    "description": "supported QoS algorithms for this VBD",
    "type": "string set",
    "tag": "" }, 
  { "name": "algorithm_params",
    "description": "parameters for chosen QoS algorithm",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "algorithm_type",
    "description": "QoS algorithm to use",
    "type": "string",
    "tag": "" }, 
  { "name": "runtime_properties",
    "description": "Device runtime properties",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "status_detail",
    "description": "error/success information associated with last attach-operation status (erased on reboot)",
    "type": "string",
    "tag": "" }, 
  { "name": "status_code",
    "description": "error/success code associated with last attach-operation (erased on reboot)",
    "type": "int",
    "tag": "" }, 
  { "name": "currently_attached",
    "description": "is the device currently attached (erased on reboot)",
    "type": "bool",
    "tag": "" }, 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "empty",
    "description": "if true this represents an empty drive",
    "type": "bool",
    "tag": "" }, 
  { "name": "storage_lock",
    "description": "true if a storage level lock was acquired",
    "type": "bool",
    "tag": "" }, 
  { "name": "unpluggable",
    "description": "true if this VBD will support hot-unplug",
    "type": "bool",
    "tag": "" }, 
  { "name": "type",
    "description": "how the VBD will appear to the guest (e.g. disk or CD)",
    "type": "enum vbd_type",
    "tag": "" }, 
  { "name": "mode",
    "description": "the mode the VBD should be mounted with",
    "type": "enum vbd_mode",
    "tag": "" }, 
  { "name": "bootable",
    "description": "true if this VBD is bootable",
    "type": "bool",
    "tag": "" }, 
  { "name": "userdevice",
    "description": "user-friendly device name e.g. 0,1,2,etc.",
    "type": "string",
    "tag": "" }, 
  { "name": "device",
    "description": "device seen by the guest e.g. hda1",
    "type": "string",
    "tag": "" }, 
  { "name": "VDI",
    "description": "the virtual disk",
    "type": "VDI ref",
    "tag": "" }, 
  { "name": "VM",
    "description": "the virtual machine",
    "type": "VM ref",
    "tag": "" }, 
  { "name": "current_operations",
    "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
    "type": "(string -> enum vbd_operations) map",
    "tag": "" }, 
  { "name": "allowed_operations",
    "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
    "type": "enum vbd_operations set",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given VBD.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the VBD instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new VBD instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified VBD instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given VBD.",
    "tag": "" }, 
  { "name": "get_allowed_operations",
    "description": "Get the allowed_operations field of the given VBD.",
    "tag": "" }, 
  { "name": "get_current_operations",
    "description": "Get the current_operations field of the given VBD.",
    "tag": "" }, 
  { "name": "get_VM",
    "description": "Get the VM field of the given VBD.",
    "tag": "" }, 
  { "name": "get_VDI",
    "description": "Get the VDI field of the given VBD.",
    "tag": "" }, 
  { "name": "get_device",
    "description": "Get the device field of the given VBD.",
    "tag": "" }, 
  { "name": "get_userdevice",
    "description": "Get the userdevice field of the given VBD.",
    "tag": "" }, 
  { "name": "get_bootable",
    "description": "Get the bootable field of the given VBD.",
    "tag": "" }, 
  { "name": "get_mode",
    "description": "Get the mode field of the given VBD.",
    "tag": "" }, 
  { "name": "get_type",
    "description": "Get the type field of the given VBD.",
    "tag": "" }, 
  { "name": "get_unpluggable",
    "description": "Get the unpluggable field of the given VBD.",
    "tag": "" }, 
  { "name": "get_storage_lock",
    "description": "Get the storage_lock field of the given VBD.",
    "tag": "" }, 
  { "name": "get_empty",
    "description": "Get the empty field of the given VBD.",
    "tag": "" }, 
  { "name": "get_reserved",
    "description": "Get the reserved field of the given VBD.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given VBD.",
    "tag": "" }, 
  { "name": "get_currently_attached",
    "description": "Get the currently_attached field of the given VBD.",
    "tag": "" }, 
  { "name": "get_status_code",
    "description": "Get the status_code field of the given VBD.",
    "tag": "" }, 
  { "name": "get_status_detail",
    "description": "Get the status_detail field of the given VBD.",
    "tag": "" }, 
  { "name": "get_runtime_properties",
    "description": "Get the runtime_properties field of the given VBD.",
    "tag": "" }, 
  { "name": "get_qos_algorithm_type",
    "description": "Get the qos/algorithm_type field of the given VBD.",
    "tag": "" }, 
  { "name": "get_qos_algorithm_params",
    "description": "Get the qos/algorithm_params field of the given VBD.",
    "tag": "" }, 
  { "name": "get_qos_supported_algorithms",
    "description": "Get the qos/supported_algorithms field of the given VBD.",
    "tag": "" }, 
  { "name": "get_metrics",
    "description": "Get the metrics field of the given VBD.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given VBD.",
    "tag": "" }, 
  { "name": "set_allowed_operations",
    "description": "Set the allowed_operations field of the given VBD.",
    "tag": "" }, 
  { "name": "add_allowed_operations",
    "description": "Add the given value to the allowed_operations field of the given VBD.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_allowed_operations",
    "description": "Remove the given value from the allowed_operations field of the given VBD.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_current_operations",
    "description": "Set the current_operations field of the given VBD.",
    "tag": "" }, 
  { "name": "add_to_current_operations",
    "description": "Add the given key-value pair to the current_operations field of the given VBD.",
    "tag": "" }, 
  { "name": "remove_from_current_operations",
    "description": "Remove the given key and its corresponding value from the current_operations field of the given VBD.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_VM",
    "description": "Set the VM field of the given VBD.",
    "tag": "" }, 
  { "name": "set_VDI",
    "description": "Set the VDI field of the given VBD.",
    "tag": "" }, 
  { "name": "set_device",
    "description": "Set the device field of the given VBD.",
    "tag": "" }, 
  { "name": "set_userdevice",
    "description": "Set the userdevice field of the given VBD.",
    "tag": "" }, 
  { "name": "set_bootable",
    "description": "Set the bootable field of the given VBD.",
    "tag": "" }, 
  { "name": "set_mode",
    "description": "Set the mode field of the given VBD.",
    "tag": "" }, 
  { "name": "set_type",
    "description": "Set the type field of the given VBD.",
    "tag": "" }, 
  { "name": "set_unpluggable",
    "description": "Set the unpluggable field of the given VBD.",
    "tag": "" }, 
  { "name": "set_storage_lock",
    "description": "Set the storage_lock field of the given VBD.",
    "tag": "" }, 
  { "name": "set_empty",
    "description": "Set the empty field of the given VBD.",
    "tag": "" }, 
  { "name": "set_reserved",
    "description": "Set the reserved field of the given VBD.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given VBD.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given VBD.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given VBD.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_currently_attached",
    "description": "Set the currently_attached field of the given VBD.",
    "tag": "" }, 
  { "name": "set_status_code",
    "description": "Set the status_code field of the given VBD.",
    "tag": "" }, 
  { "name": "set_status_detail",
    "description": "Set the status_detail field of the given VBD.",
    "tag": "" }, 
  { "name": "set_runtime_properties",
    "description": "Set the runtime_properties field of the given VBD.",
    "tag": "" }, 
  { "name": "add_to_runtime_properties",
    "description": "Add the given key-value pair to the runtime_properties field of the given VBD.",
    "tag": "" }, 
  { "name": "remove_from_runtime_properties",
    "description": "Remove the given key and its corresponding value from the runtime_properties field of the given VBD.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_qos_algorithm_type",
    "description": "Set the qos/algorithm_type field of the given VBD.",
    "tag": "" }, 
  { "name": "set_qos_algorithm_params",
    "description": "Set the qos/algorithm_params field of the given VBD.",
    "tag": "" }, 
  { "name": "add_to_qos_algorithm_params",
    "description": "Add the given key-value pair to the qos/algorithm_params field of the given VBD.",
    "tag": "" }, 
  { "name": "remove_from_qos_algorithm_params",
    "description": "Remove the given key and its corresponding value from the qos/algorithm_params field of the given VBD.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_qos_supported_algorithms",
    "description": "Set the qos/supported_algorithms field of the given VBD.",
    "tag": "" }, 
  { "name": "add_qos_supported_algorithms",
    "description": "Add the given value to the qos/supported_algorithms field of the given VBD.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_qos_supported_algorithms",
    "description": "Remove the given value from the qos/supported_algorithms field of the given VBD.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_metrics",
    "description": "Set the metrics field of the given VBD.",
    "tag": "" }, 
  { "name": "eject",
    "description": "Remove the media from the device and leave it empty",
    "tag": "" }, 
  { "name": "insert",
    "description": "Insert new media into the device",
    "tag": "" }, 
  { "name": "plug",
    "description": "Hotplug the specified VBD, dynamically attaching it to the running VM",
    "tag": "" }, 
  { "name": "unplug",
    "description": "Hot-unplug the specified VBD, dynamically unattaching it from the running VM",
    "tag": "" }, 
  { "name": "unplug_force",
    "description": "Forcibly unplug the specified VBD",
    "tag": "" }, 
  { "name": "assert_attachable",
    "description": "Throws an error if this VBD could not be attached to this VM if the VM were running. Intended for debugging.",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the VBDs known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of VBD references to VBD records for all VBDs known to the system.",
    "tag": "" } ] }, { "name": "VBD_metrics",
"fields": [ 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "last_updated",
    "description": "Time at which this information was last updated",
    "type": "datetime",
    "tag": "" }, 
  { "name": "write_kbs",
    "description": "Write bandwidth (KiB/s)",
    "type": "float",
    "tag": "" }, 
  { "name": "read_kbs",
    "description": "Read bandwidth (KiB/s)",
    "type": "float",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given VBD_metrics.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the VBD_metrics instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new VBD_metrics instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified VBD_metrics instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given VBD_metrics.",
    "tag": "" }, 
  { "name": "get_io_read_kbs",
    "description": "Get the io/read_kbs field of the given VBD_metrics.",
    "tag": "" }, 
  { "name": "get_io_write_kbs",
    "description": "Get the io/write_kbs field of the given VBD_metrics.",
    "tag": "" }, 
  { "name": "get_last_updated",
    "description": "Get the last_updated field of the given VBD_metrics.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given VBD_metrics.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given VBD_metrics.",
    "tag": "" }, 
  { "name": "set_io_read_kbs",
    "description": "Set the io/read_kbs field of the given VBD_metrics.",
    "tag": "" }, 
  { "name": "set_io_write_kbs",
    "description": "Set the io/write_kbs field of the given VBD_metrics.",
    "tag": "" }, 
  { "name": "set_last_updated",
    "description": "Set the last_updated field of the given VBD_metrics.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given VBD_metrics.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given VBD_metrics.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given VBD_metrics.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the VBD_metrics instances known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of VBD_metrics references to VBD_metrics records for all VBD_metrics instances known to the system.",
    "tag": "" } ] }, { "name": "PBD",
"fields": [ 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "currently_attached",
    "description": "is the SR currently attached on this host?",
    "type": "bool",
    "tag": "" }, 
  { "name": "device_config",
    "description": "a config string to string map that is provided to the host's SR-backend-driver",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "SR",
    "description": "the storage repository that the pbd realises",
    "type": "SR ref",
    "tag": "" }, 
  { "name": "host",
    "description": "physical machine on which the pbd is available",
    "type": "host ref",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given PBD.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the PBD instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new PBD instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified PBD instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given PBD.",
    "tag": "" }, 
  { "name": "get_host",
    "description": "Get the host field of the given PBD.",
    "tag": "" }, 
  { "name": "get_SR",
    "description": "Get the SR field of the given PBD.",
    "tag": "" }, 
  { "name": "get_device_config",
    "description": "Get the device_config field of the given PBD.",
    "tag": "" }, 
  { "name": "get_currently_attached",
    "description": "Get the currently_attached field of the given PBD.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given PBD.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given PBD.",
    "tag": "" }, 
  { "name": "set_host",
    "description": "Set the host field of the given PBD.",
    "tag": "" }, 
  { "name": "set_SR",
    "description": "Set the SR field of the given PBD.",
    "tag": "" }, 
  { "name": "set_device_config",
    "description": "Set the device_config field of the given PBD.",
    "tag": "" }, 
  { "name": "add_to_device_config",
    "description": "Add the given key-value pair to the device_config field of the given PBD.",
    "tag": "" }, 
  { "name": "remove_from_device_config",
    "description": "Remove the given key and its corresponding value from the device_config field of the given PBD.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_currently_attached",
    "description": "Set the currently_attached field of the given PBD.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given PBD.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given PBD.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given PBD.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "plug",
    "description": "Activate the specified PBD, causing the referenced SR to be attached and scanned",
    "tag": "" }, 
  { "name": "unplug",
    "description": "Deactivate the specified PBD, causing the referenced SR to be detached and nolonger scanned",
    "tag": "" }, 
  { "name": "set_device_config",
    "description": "Sets the PBD's device_config field",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the PBDs known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of PBD references to PBD records for all PBDs known to the system.",
    "tag": "" } ] }, { "name": "crashdump",
"fields": [ 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "VDI",
    "description": "the virtual disk",
    "type": "VDI ref",
    "tag": "" }, 
  { "name": "VM",
    "description": "the virtual machine",
    "type": "VM ref",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given crashdump.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the crashdump instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new crashdump instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified crashdump instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given crashdump.",
    "tag": "" }, 
  { "name": "get_VM",
    "description": "Get the VM field of the given crashdump.",
    "tag": "" }, 
  { "name": "get_VDI",
    "description": "Get the VDI field of the given crashdump.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given crashdump.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given crashdump.",
    "tag": "" }, 
  { "name": "set_VM",
    "description": "Set the VM field of the given crashdump.",
    "tag": "" }, 
  { "name": "set_VDI",
    "description": "Set the VDI field of the given crashdump.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given crashdump.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given crashdump.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given crashdump.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified crashdump",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the crashdumps known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of crashdump references to crashdump records for all crashdumps known to the system.",
    "tag": "" } ] }, { "name": "VTPM",
"fields": [ 
  { "name": "backend",
    "description": "the domain where the backend is located",
    "type": "VM ref",
    "tag": "" }, 
  { "name": "VM",
    "description": "the virtual machine",
    "type": "VM ref",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given VTPM.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the VTPM instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new VTPM instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified VTPM instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given VTPM.",
    "tag": "" }, 
  { "name": "get_VM",
    "description": "Get the VM field of the given VTPM.",
    "tag": "" }, 
  { "name": "get_backend",
    "description": "Get the backend field of the given VTPM.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given VTPM.",
    "tag": "" }, 
  { "name": "set_VM",
    "description": "Set the VM field of the given VTPM.",
    "tag": "" }, 
  { "name": "set_backend",
    "description": "Set the backend field of the given VTPM.",
    "tag": "" } ] }, { "name": "console",
"fields": [ 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "VM",
    "description": "VM to which this console is attached",
    "type": "VM ref",
    "tag": "" }, 
  { "name": "location",
    "description": "URI for the console service",
    "type": "string",
    "tag": "" }, 
  { "name": "protocol",
    "description": "the protocol used by this console",
    "type": "enum console_protocol",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given console.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the console instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new console instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified console instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given console.",
    "tag": "" }, 
  { "name": "get_protocol",
    "description": "Get the protocol field of the given console.",
    "tag": "" }, 
  { "name": "get_location",
    "description": "Get the location field of the given console.",
    "tag": "" }, 
  { "name": "get_VM",
    "description": "Get the VM field of the given console.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given console.",
    "tag": "" }, 
  { "name": "get_port",
    "description": "Get the port field of the given console.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given console.",
    "tag": "" }, 
  { "name": "set_protocol",
    "description": "Set the protocol field of the given console.",
    "tag": "" }, 
  { "name": "set_location",
    "description": "Set the location field of the given console.",
    "tag": "" }, 
  { "name": "set_VM",
    "description": "Set the VM field of the given console.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given console.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given console.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given console.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_port",
    "description": "Set the port field of the given console.",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the consoles known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of console references to console records for all consoles known to the system.",
    "tag": "" } ] }, { "name": "user",
"fields": [ 
  { "name": "other_config",
    "description": "additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "fullname",
    "description": "full name",
    "type": "string",
    "tag": "" }, 
  { "name": "short_name",
    "description": "short name (e.g. userid)",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given user.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the user instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new user instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified user instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given user.",
    "tag": "" }, 
  { "name": "get_short_name",
    "description": "Get the short_name field of the given user.",
    "tag": "" }, 
  { "name": "get_fullname",
    "description": "Get the fullname field of the given user.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given user.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given user.",
    "tag": "" }, 
  { "name": "set_short_name",
    "description": "Set the short_name field of the given user.",
    "tag": "" }, 
  { "name": "set_fullname",
    "description": "Set the fullname field of the given user.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given user.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given user.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given user.  If the key is not in that Map, then do nothing.",
    "tag": "" } ] }, { "name": "data_source",
"fields": [ 
  { "name": "value",
    "description": "current value of the data source",
    "type": "float",
    "tag": "" }, 
  { "name": "max",
    "description": "the maximum value of the data source",
    "type": "float",
    "tag": "" }, 
  { "name": "min",
    "description": "the minimum value of the data source",
    "type": "float",
    "tag": "" }, 
  { "name": "units",
    "description": "the units of the value",
    "type": "string",
    "tag": "" }, 
  { "name": "standard",
    "description": "true if the data source is enabled by default. Non-default data sources cannot be disabled",
    "type": "bool",
    "tag": "" }, 
  { "name": "enabled",
    "description": "true if the data source is being logged",
    "type": "bool",
    "tag": "" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "tag": "" }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "tag": "" } ],
"messages": [  ] }, { "name": "blob",
"fields": [ 
  { "name": "mime_type",
    "description": "The mime type associated with this object. Defaults to 'application/octet-stream' if the empty string is supplied",
    "type": "string",
    "tag": "" }, 
  { "name": "last_updated",
    "description": "Time at which the data in the blob was last updated",
    "type": "datetime",
    "tag": "" }, 
  { "name": "public",
    "description": "True if the blob is publicly accessible",
    "type": "bool",
    "tag": "" }, 
  { "name": "size",
    "description": "Size of the binary data, in bytes",
    "type": "int",
    "tag": "" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "tag": "" }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given blob.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the blob instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new blob instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified blob instance.",
    "tag": "" }, 
  { "name": "get_by_name_label",
    "description": "Get all the blob instances with the given label.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given blob.",
    "tag": "" }, 
  { "name": "get_name_label",
    "description": "Get the name/label field of the given blob.",
    "tag": "" }, 
  { "name": "get_name_description",
    "description": "Get the name/description field of the given blob.",
    "tag": "" }, 
  { "name": "get_size",
    "description": "Get the size field of the given blob.",
    "tag": "" }, 
  { "name": "get_public",
    "description": "Get the public field of the given blob.",
    "tag": "" }, 
  { "name": "get_last_updated",
    "description": "Get the last_updated field of the given blob.",
    "tag": "" }, 
  { "name": "get_mime_type",
    "description": "Get the mime_type field of the given blob.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given blob.",
    "tag": "" }, 
  { "name": "set_name_label",
    "description": "Set the name/label field of the given blob.",
    "tag": "" }, 
  { "name": "set_name_description",
    "description": "Set the name/description field of the given blob.",
    "tag": "" }, 
  { "name": "set_size",
    "description": "Set the size field of the given blob.",
    "tag": "" }, 
  { "name": "set_public",
    "description": "Set the public field of the given blob.",
    "tag": "" }, 
  { "name": "set_last_updated",
    "description": "Set the last_updated field of the given blob.",
    "tag": "" }, 
  { "name": "set_mime_type",
    "description": "Set the mime_type field of the given blob.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a placeholder for a binary blob",
    "tag": "" }, 
  { "name": "destroy",
    "description": "",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the blobs known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of blob references to blob records for all blobs known to the system.",
    "tag": "" } ] }, { "name": "message",
"fields": [ 
  { "name": "body",
    "description": "The body of the message",
    "type": "string",
    "tag": "" }, 
  { "name": "timestamp",
    "description": "The time at which the message was created",
    "type": "datetime",
    "tag": "" }, 
  { "name": "obj_uuid",
    "description": "The uuid of the object this message is associated with",
    "type": "string",
    "tag": "" }, 
  { "name": "cls",
    "description": "The class of the object this message is associated with",
    "type": "enum cls",
    "tag": "" }, 
  { "name": "priority",
    "description": "The message priority, 0 being low priority",
    "type": "int",
    "tag": "" }, 
  { "name": "name",
    "description": "The name of the message",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "create",
    "description": "",
    "tag": "" }, 
  { "name": "destroy",
    "description": "",
    "tag": "" }, 
  { "name": "get",
    "description": "",
    "tag": "" }, 
  { "name": "get_all",
    "description": "",
    "tag": "" }, 
  { "name": "get_since",
    "description": "",
    "tag": "" }, 
  { "name": "get_record",
    "description": "",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "",
    "tag": "" }, 
  { "name": "get_all_records_where",
    "description": "",
    "tag": "" } ] }, { "name": "secret",
"fields": [ 
  { "name": "other_config",
    "description": "other_config",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "value",
    "description": "the secret",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given secret.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the secret instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new secret instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified secret instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given secret.",
    "tag": "" }, 
  { "name": "get_value",
    "description": "Get the value field of the given secret.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given secret.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given secret.",
    "tag": "" }, 
  { "name": "set_value",
    "description": "Set the value field of the given secret.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given secret.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given secret.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given secret.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the secrets known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of secret references to secret records for all secrets known to the system.",
    "tag": "" } ] }, { "name": "tunnel",
"fields": [ 
  { "name": "other_config",
    "description": "Additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "status",
    "description": "Status information about the tunnel",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "transport_PIF",
    "description": "The interface used by the tunnel",
    "type": "PIF ref",
    "tag": "" }, 
  { "name": "access_PIF",
    "description": "The interface through which the tunnel is accessed",
    "type": "PIF ref",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given tunnel.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the tunnel instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new tunnel instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified tunnel instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given tunnel.",
    "tag": "" }, 
  { "name": "get_access_PIF",
    "description": "Get the access_PIF field of the given tunnel.",
    "tag": "" }, 
  { "name": "get_transport_PIF",
    "description": "Get the transport_PIF field of the given tunnel.",
    "tag": "" }, 
  { "name": "get_status",
    "description": "Get the status field of the given tunnel.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given tunnel.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given tunnel.",
    "tag": "" }, 
  { "name": "set_access_PIF",
    "description": "Set the access_PIF field of the given tunnel.",
    "tag": "" }, 
  { "name": "set_transport_PIF",
    "description": "Set the transport_PIF field of the given tunnel.",
    "tag": "" }, 
  { "name": "set_status",
    "description": "Set the status field of the given tunnel.",
    "tag": "" }, 
  { "name": "add_to_status",
    "description": "Add the given key-value pair to the status field of the given tunnel.",
    "tag": "" }, 
  { "name": "remove_from_status",
    "description": "Remove the given key and its corresponding value from the status field of the given tunnel.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given tunnel.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given tunnel.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given tunnel.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a tunnel",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy a tunnel",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the tunnels known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of tunnel references to tunnel records for all tunnels known to the system.",
    "tag": "" } ] }, { "name": "PCI",
"fields": [ 
  { "name": "subsystem_device_name",
    "description": "Subsystem device name",
    "type": "string",
    "tag": "" }, 
  { "name": "subsystem_vendor_name",
    "description": "Subsystem vendor name",
    "type": "string",
    "tag": "" }, 
  { "name": "other_config",
    "description": "Additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "dependencies",
    "description": "List of dependent PCI devices",
    "type": "PCI ref set",
    "tag": "" }, 
  { "name": "pci_id",
    "description": "PCI ID of the physical device",
    "type": "string",
    "tag": "" }, 
  { "name": "host",
    "description": "Physical machine that owns the PCI device",
    "type": "host ref",
    "tag": "" }, 
  { "name": "device_name",
    "description": "Device name",
    "type": "string",
    "tag": "" }, 
  { "name": "vendor_name",
    "description": "Vendor name",
    "type": "string",
    "tag": "" }, 
  { "name": "class_name",
    "description": "PCI class name",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given PCI.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the PCI instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new PCI instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified PCI instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given PCI.",
    "tag": "" }, 
  { "name": "get_class_id",
    "description": "Get the class_id field of the given PCI.",
    "tag": "" }, 
  { "name": "get_class_name",
    "description": "Get the class_name field of the given PCI.",
    "tag": "" }, 
  { "name": "get_vendor_id",
    "description": "Get the vendor_id field of the given PCI.",
    "tag": "" }, 
  { "name": "get_vendor_name",
    "description": "Get the vendor_name field of the given PCI.",
    "tag": "" }, 
  { "name": "get_device_id",
    "description": "Get the device_id field of the given PCI.",
    "tag": "" }, 
  { "name": "get_device_name",
    "description": "Get the device_name field of the given PCI.",
    "tag": "" }, 
  { "name": "get_host",
    "description": "Get the host field of the given PCI.",
    "tag": "" }, 
  { "name": "get_pci_id",
    "description": "Get the pci_id field of the given PCI.",
    "tag": "" }, 
  { "name": "get_functions",
    "description": "Get the functions field of the given PCI.",
    "tag": "" }, 
  { "name": "get_attached_VMs",
    "description": "Get the attached_VMs field of the given PCI.",
    "tag": "" }, 
  { "name": "get_dependencies",
    "description": "Get the dependencies field of the given PCI.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given PCI.",
    "tag": "" }, 
  { "name": "get_subsystem_vendor_id",
    "description": "Get the subsystem_vendor_id field of the given PCI.",
    "tag": "" }, 
  { "name": "get_subsystem_vendor_name",
    "description": "Get the subsystem_vendor_name field of the given PCI.",
    "tag": "" }, 
  { "name": "get_subsystem_device_id",
    "description": "Get the subsystem_device_id field of the given PCI.",
    "tag": "" }, 
  { "name": "get_subsystem_device_name",
    "description": "Get the subsystem_device_name field of the given PCI.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given PCI.",
    "tag": "" }, 
  { "name": "set_class_id",
    "description": "Set the class_id field of the given PCI.",
    "tag": "" }, 
  { "name": "set_class_name",
    "description": "Set the class_name field of the given PCI.",
    "tag": "" }, 
  { "name": "set_vendor_id",
    "description": "Set the vendor_id field of the given PCI.",
    "tag": "" }, 
  { "name": "set_vendor_name",
    "description": "Set the vendor_name field of the given PCI.",
    "tag": "" }, 
  { "name": "set_device_id",
    "description": "Set the device_id field of the given PCI.",
    "tag": "" }, 
  { "name": "set_device_name",
    "description": "Set the device_name field of the given PCI.",
    "tag": "" }, 
  { "name": "set_host",
    "description": "Set the host field of the given PCI.",
    "tag": "" }, 
  { "name": "set_pci_id",
    "description": "Set the pci_id field of the given PCI.",
    "tag": "" }, 
  { "name": "set_functions",
    "description": "Set the functions field of the given PCI.",
    "tag": "" }, 
  { "name": "set_attached_VMs",
    "description": "Set the attached_VMs field of the given PCI.",
    "tag": "" }, 
  { "name": "add_attached_VMs",
    "description": "Add the given value to the attached_VMs field of the given PCI.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_attached_VMs",
    "description": "Remove the given value from the attached_VMs field of the given PCI.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_dependencies",
    "description": "Set the dependencies field of the given PCI.",
    "tag": "" }, 
  { "name": "add_dependencies",
    "description": "Add the given value to the dependencies field of the given PCI.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_dependencies",
    "description": "Remove the given value from the dependencies field of the given PCI.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given PCI.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given PCI.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given PCI.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_subsystem_vendor_id",
    "description": "Set the subsystem_vendor_id field of the given PCI.",
    "tag": "" }, 
  { "name": "set_subsystem_vendor_name",
    "description": "Set the subsystem_vendor_name field of the given PCI.",
    "tag": "" }, 
  { "name": "set_subsystem_device_id",
    "description": "Set the subsystem_device_id field of the given PCI.",
    "tag": "" }, 
  { "name": "set_subsystem_device_name",
    "description": "Set the subsystem_device_name field of the given PCI.",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the PCIs known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of PCI references to PCI records for all PCIs known to the system.",
    "tag": "" } ] }, { "name": "PGPU",
"fields": [ 
  { "name": "is_system_display_device",
    "description": "Is this device the system display device",
    "type": "bool",
    "tag": "" }, 
  { "name": "dom0_access",
    "description": "The accessibility of this device from dom0",
    "type": "enum pgpu_dom0_access",
    "tag": "" }, 
  { "name": "supported_VGPU_max_capacities",
    "description": "A map relating each VGPU type supported on this GPU to the maximum number of VGPUs of that type which can run simultaneously on this GPU",
    "type": "(VGPU_type ref -> int) map",
    "tag": "" }, 
  { "name": "resident_VGPUs",
    "description": "List of VGPUs running on this PGPU",
    "type": "VGPU ref set",
    "tag": "" }, 
  { "name": "enabled_VGPU_types",
    "description": "List of VGPU types which have been enabled for this PGPU",
    "type": "VGPU_type ref set",
    "tag": "" }, 
  { "name": "supported_VGPU_types",
    "description": "List of VGPU types supported by the underlying hardware",
    "type": "VGPU_type ref set",
    "tag": "" }, 
  { "name": "other_config",
    "description": "Additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "host",
    "description": "Host that own the GPU",
    "type": "host ref",
    "tag": "" }, 
  { "name": "GPU_group",
    "description": "GPU group the pGPU is contained in",
    "type": "GPU_group ref",
    "tag": "" }, 
  { "name": "PCI",
    "description": "Link to underlying PCI device",
    "type": "PCI ref",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given PGPU.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the PGPU instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new PGPU instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified PGPU instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given PGPU.",
    "tag": "" }, 
  { "name": "get_PCI",
    "description": "Get the PCI field of the given PGPU.",
    "tag": "" }, 
  { "name": "get_GPU_group",
    "description": "Get the GPU_group field of the given PGPU.",
    "tag": "" }, 
  { "name": "get_host",
    "description": "Get the host field of the given PGPU.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given PGPU.",
    "tag": "" }, 
  { "name": "get_supported_VGPU_types",
    "description": "Get the supported_VGPU_types field of the given PGPU.",
    "tag": "" }, 
  { "name": "get_enabled_VGPU_types",
    "description": "Get the enabled_VGPU_types field of the given PGPU.",
    "tag": "" }, 
  { "name": "get_resident_VGPUs",
    "description": "Get the resident_VGPUs field of the given PGPU.",
    "tag": "" }, 
  { "name": "get_size",
    "description": "Get the size field of the given PGPU.",
    "tag": "" }, 
  { "name": "get_supported_VGPU_max_capacities",
    "description": "Get the supported_VGPU_max_capacities field of the given PGPU.",
    "tag": "" }, 
  { "name": "get_dom0_access",
    "description": "Get the dom0_access field of the given PGPU.",
    "tag": "" }, 
  { "name": "get_is_system_display_device",
    "description": "Get the is_system_display_device field of the given PGPU.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given PGPU.",
    "tag": "" }, 
  { "name": "set_PCI",
    "description": "Set the PCI field of the given PGPU.",
    "tag": "" }, 
  { "name": "set_GPU_group",
    "description": "Set the GPU_group field of the given PGPU.",
    "tag": "" }, 
  { "name": "set_host",
    "description": "Set the host field of the given PGPU.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given PGPU.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given PGPU.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given PGPU.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_supported_VGPU_types",
    "description": "Set the supported_VGPU_types field of the given PGPU.",
    "tag": "" }, 
  { "name": "add_supported_VGPU_types",
    "description": "Add the given value to the supported_VGPU_types field of the given PGPU.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_supported_VGPU_types",
    "description": "Remove the given value from the supported_VGPU_types field of the given PGPU.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_enabled_VGPU_types",
    "description": "Set the enabled_VGPU_types field of the given PGPU.",
    "tag": "" }, 
  { "name": "add_enabled_VGPU_types",
    "description": "Add the given value to the enabled_VGPU_types field of the given PGPU.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_enabled_VGPU_types",
    "description": "Remove the given value from the enabled_VGPU_types field of the given PGPU.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_size",
    "description": "Set the size field of the given PGPU.",
    "tag": "" }, 
  { "name": "set_supported_VGPU_max_capacities",
    "description": "Set the supported_VGPU_max_capacities field of the given PGPU.",
    "tag": "" }, 
  { "name": "add_to_supported_VGPU_max_capacities",
    "description": "Add the given key-value pair to the supported_VGPU_max_capacities field of the given PGPU.",
    "tag": "" }, 
  { "name": "remove_from_supported_VGPU_max_capacities",
    "description": "Remove the given key and its corresponding value from the supported_VGPU_max_capacities field of the given PGPU.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_dom0_access",
    "description": "Set the dom0_access field of the given PGPU.",
    "tag": "" }, 
  { "name": "set_is_system_display_device",
    "description": "Set the is_system_display_device field of the given PGPU.",
    "tag": "" }, 
  { "name": "add_enabled_VGPU_types",
    "description": "",
    "tag": "" }, 
  { "name": "remove_enabled_VGPU_types",
    "description": "",
    "tag": "" }, 
  { "name": "set_enabled_VGPU_types",
    "description": "",
    "tag": "" }, 
  { "name": "set_GPU_group",
    "description": "",
    "tag": "" }, 
  { "name": "get_remaining_capacity",
    "description": "",
    "tag": "" }, 
  { "name": "enable_dom0_access",
    "description": "",
    "tag": "" }, 
  { "name": "disable_dom0_access",
    "description": "",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the PGPUs known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of PGPU references to PGPU records for all PGPUs known to the system.",
    "tag": "" } ] }, { "name": "GPU_group",
"fields": [ 
  { "name": "enabled_VGPU_types",
    "description": "vGPU types supported on at least one of the pGPUs in this group",
    "type": "VGPU_type ref set",
    "tag": "" }, 
  { "name": "supported_VGPU_types",
    "description": "vGPU types supported on at least one of the pGPUs in this group",
    "type": "VGPU_type ref set",
    "tag": "" }, 
  { "name": "allocation_algorithm",
    "description": "Current allocation of vGPUs to pGPUs for this group",
    "type": "enum allocation_algorithm",
    "tag": "" }, 
  { "name": "other_config",
    "description": "Additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "GPU_types",
    "description": "List of GPU types (vendor+device ID) that can be in this group",
    "type": "string set",
    "tag": "" }, 
  { "name": "VGPUs",
    "description": "List of vGPUs using the group",
    "type": "VGPU ref set",
    "tag": "" }, 
  { "name": "PGPUs",
    "description": "List of pGPUs in the group",
    "type": "PGPU ref set",
    "tag": "" }, 
  { "name": "description",
    "description": "a notes field containing human-readable description",
    "type": "string",
    "tag": "" }, 
  { "name": "label",
    "description": "a human-readable name",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given GPU_group.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the GPU_group instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new GPU_group instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified GPU_group instance.",
    "tag": "" }, 
  { "name": "get_by_name_label",
    "description": "Get all the GPU_group instances with the given label.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given GPU_group.",
    "tag": "" }, 
  { "name": "get_name_label",
    "description": "Get the name/label field of the given GPU_group.",
    "tag": "" }, 
  { "name": "get_name_description",
    "description": "Get the name/description field of the given GPU_group.",
    "tag": "" }, 
  { "name": "get_PGPUs",
    "description": "Get the PGPUs field of the given GPU_group.",
    "tag": "" }, 
  { "name": "get_VGPUs",
    "description": "Get the VGPUs field of the given GPU_group.",
    "tag": "" }, 
  { "name": "get_GPU_types",
    "description": "Get the GPU_types field of the given GPU_group.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given GPU_group.",
    "tag": "" }, 
  { "name": "get_allocation_algorithm",
    "description": "Get the allocation_algorithm field of the given GPU_group.",
    "tag": "" }, 
  { "name": "get_supported_VGPU_types",
    "description": "Get the supported_VGPU_types field of the given GPU_group.",
    "tag": "" }, 
  { "name": "get_enabled_VGPU_types",
    "description": "Get the enabled_VGPU_types field of the given GPU_group.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given GPU_group.",
    "tag": "" }, 
  { "name": "set_name_label",
    "description": "Set the name/label field of the given GPU_group.",
    "tag": "" }, 
  { "name": "set_name_description",
    "description": "Set the name/description field of the given GPU_group.",
    "tag": "" }, 
  { "name": "set_GPU_types",
    "description": "Set the GPU_types field of the given GPU_group.",
    "tag": "" }, 
  { "name": "add_GPU_types",
    "description": "Add the given value to the GPU_types field of the given GPU_group.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_GPU_types",
    "description": "Remove the given value from the GPU_types field of the given GPU_group.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given GPU_group.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given GPU_group.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given GPU_group.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_allocation_algorithm",
    "description": "Set the allocation_algorithm field of the given GPU_group.",
    "tag": "" }, 
  { "name": "set_supported_VGPU_types",
    "description": "Set the supported_VGPU_types field of the given GPU_group.",
    "tag": "" }, 
  { "name": "add_supported_VGPU_types",
    "description": "Add the given value to the supported_VGPU_types field of the given GPU_group.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_supported_VGPU_types",
    "description": "Remove the given value from the supported_VGPU_types field of the given GPU_group.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_enabled_VGPU_types",
    "description": "Set the enabled_VGPU_types field of the given GPU_group.",
    "tag": "" }, 
  { "name": "add_enabled_VGPU_types",
    "description": "Add the given value to the enabled_VGPU_types field of the given GPU_group.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_enabled_VGPU_types",
    "description": "Remove the given value from the enabled_VGPU_types field of the given GPU_group.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "create",
    "description": "",
    "tag": "" }, 
  { "name": "destroy",
    "description": "",
    "tag": "" }, 
  { "name": "get_remaining_capacity",
    "description": "",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the GPU_groups known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of GPU_group references to GPU_group records for all GPU_groups known to the system.",
    "tag": "" } ] }, { "name": "VGPU",
"fields": [ 
  { "name": "resident_on",
    "description": "The PGPU on which this VGPU is running",
    "type": "PGPU ref",
    "tag": "" }, 
  { "name": "type",
    "description": "Preset type for this VGPU",
    "type": "VGPU_type ref",
    "tag": "" }, 
  { "name": "other_config",
    "description": "Additional configuration",
    "type": "(string -> string) map",
    "tag": "" }, 
  { "name": "currently_attached",
    "description": "Reflects whether the virtual device is currently connected to a physical device",
    "type": "bool",
    "tag": "" }, 
  { "name": "device",
    "description": "Order in which the devices are plugged into the VM",
    "type": "string",
    "tag": "" }, 
  { "name": "GPU_group",
    "description": "GPU group used by the vGPU",
    "type": "GPU_group ref",
    "tag": "" }, 
  { "name": "VM",
    "description": "VM that owns the vGPU",
    "type": "VM ref",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given VGPU.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the VGPU instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new VGPU instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified VGPU instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given VGPU.",
    "tag": "" }, 
  { "name": "get_VM",
    "description": "Get the VM field of the given VGPU.",
    "tag": "" }, 
  { "name": "get_GPU_group",
    "description": "Get the GPU_group field of the given VGPU.",
    "tag": "" }, 
  { "name": "get_device",
    "description": "Get the device field of the given VGPU.",
    "tag": "" }, 
  { "name": "get_currently_attached",
    "description": "Get the currently_attached field of the given VGPU.",
    "tag": "" }, 
  { "name": "get_other_config",
    "description": "Get the other_config field of the given VGPU.",
    "tag": "" }, 
  { "name": "get_type",
    "description": "Get the type field of the given VGPU.",
    "tag": "" }, 
  { "name": "get_resident_on",
    "description": "Get the resident_on field of the given VGPU.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given VGPU.",
    "tag": "" }, 
  { "name": "set_VM",
    "description": "Set the VM field of the given VGPU.",
    "tag": "" }, 
  { "name": "set_GPU_group",
    "description": "Set the GPU_group field of the given VGPU.",
    "tag": "" }, 
  { "name": "set_device",
    "description": "Set the device field of the given VGPU.",
    "tag": "" }, 
  { "name": "set_currently_attached",
    "description": "Set the currently_attached field of the given VGPU.",
    "tag": "" }, 
  { "name": "set_other_config",
    "description": "Set the other_config field of the given VGPU.",
    "tag": "" }, 
  { "name": "add_to_other_config",
    "description": "Add the given key-value pair to the other_config field of the given VGPU.",
    "tag": "" }, 
  { "name": "remove_from_other_config",
    "description": "Remove the given key and its corresponding value from the other_config field of the given VGPU.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_type",
    "description": "Set the type field of the given VGPU.",
    "tag": "" }, 
  { "name": "set_resident_on",
    "description": "Set the resident_on field of the given VGPU.",
    "tag": "" }, 
  { "name": "create",
    "description": "",
    "tag": "" }, 
  { "name": "destroy",
    "description": "",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the VGPUs known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of VGPU references to VGPU records for all VGPUs known to the system.",
    "tag": "" } ] }, { "name": "VGPU_type",
"fields": [ 
  { "name": "enabled_on_GPU_groups",
    "description": "List of GPU groups in which at least one have this VGPU type enabled",
    "type": "GPU_group ref set",
    "tag": "" }, 
  { "name": "supported_on_GPU_groups",
    "description": "List of GPU groups in which at least one PGPU supports this VGPU type",
    "type": "GPU_group ref set",
    "tag": "" }, 
  { "name": "VGPUs",
    "description": "List of VGPUs of this type",
    "type": "VGPU ref set",
    "tag": "" }, 
  { "name": "enabled_on_PGPUs",
    "description": "List of PGPUs that have this VGPU type enabled",
    "type": "PGPU ref set",
    "tag": "" }, 
  { "name": "supported_on_PGPUs",
    "description": "List of PGPUs that support this VGPU type",
    "type": "PGPU ref set",
    "tag": "" }, 
  { "name": "max_resolution_y",
    "description": "Maximum resoltion (height) supported by the VGPU type",
    "type": "int",
    "tag": "" }, 
  { "name": "max_resolution_x",
    "description": "Maximum resultion (width) supported by the VGPU type",
    "type": "int",
    "tag": "" }, 
  { "name": "max_heads",
    "description": "Maximum number of displays supported by the VGPU type",
    "type": "int",
    "tag": "" }, 
  { "name": "framebuffer_size",
    "description": "Framebuffer size of the VGPU type, in bytes",
    "type": "int",
    "tag": "" }, 
  { "name": "model_name",
    "description": "Model name associated with the VGPU type",
    "type": "string",
    "tag": "" }, 
  { "name": "vendor_name",
    "description": "Name of VGPU vendor",
    "type": "string",
    "tag": "" }, 
  { "name": "uuid",
    "description": "Unique identifier/object reference",
    "type": "string",
    "tag": "" } ],
"messages": [ 
  { "name": "get_record",
    "description": "Get a record containing the current state of the given VGPU_type.",
    "tag": "" }, 
  { "name": "get_by_uuid",
    "description": "Get a reference to the VGPU_type instance with the specified UUID.",
    "tag": "" }, 
  { "name": "create",
    "description": "Create a new VGPU_type instance, and return its handle.",
    "tag": "" }, 
  { "name": "destroy",
    "description": "Destroy the specified VGPU_type instance.",
    "tag": "" }, 
  { "name": "get_uuid",
    "description": "Get the uuid field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "get_vendor_name",
    "description": "Get the vendor_name field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "get_model_name",
    "description": "Get the model_name field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "get_framebuffer_size",
    "description": "Get the framebuffer_size field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "get_max_heads",
    "description": "Get the max_heads field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "get_max_resolution_x",
    "description": "Get the max_resolution_x field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "get_max_resolution_y",
    "description": "Get the max_resolution_y field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "get_size",
    "description": "Get the size field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "get_supported_on_PGPUs",
    "description": "Get the supported_on_PGPUs field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "get_enabled_on_PGPUs",
    "description": "Get the enabled_on_PGPUs field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "get_VGPUs",
    "description": "Get the VGPUs field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "get_internal_config",
    "description": "Get the internal_config field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "get_supported_on_GPU_groups",
    "description": "Get the supported_on_GPU_groups field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "get_enabled_on_GPU_groups",
    "description": "Get the enabled_on_GPU_groups field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "set_uuid",
    "description": "Set the uuid field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "set_vendor_name",
    "description": "Set the vendor_name field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "set_model_name",
    "description": "Set the model_name field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "set_framebuffer_size",
    "description": "Set the framebuffer_size field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "set_max_heads",
    "description": "Set the max_heads field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "set_max_resolution_x",
    "description": "Set the max_resolution_x field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "set_max_resolution_y",
    "description": "Set the max_resolution_y field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "set_size",
    "description": "Set the size field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "set_supported_on_PGPUs",
    "description": "Set the supported_on_PGPUs field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "add_supported_on_PGPUs",
    "description": "Add the given value to the supported_on_PGPUs field of the given VGPU_type.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_supported_on_PGPUs",
    "description": "Remove the given value from the supported_on_PGPUs field of the given VGPU_type.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_enabled_on_PGPUs",
    "description": "Set the enabled_on_PGPUs field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "add_enabled_on_PGPUs",
    "description": "Add the given value to the enabled_on_PGPUs field of the given VGPU_type.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_enabled_on_PGPUs",
    "description": "Remove the given value from the enabled_on_PGPUs field of the given VGPU_type.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_internal_config",
    "description": "Set the internal_config field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "add_to_internal_config",
    "description": "Add the given key-value pair to the internal_config field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "remove_from_internal_config",
    "description": "Remove the given key and its corresponding value from the internal_config field of the given VGPU_type.  If the key is not in that Map, then do nothing.",
    "tag": "" }, 
  { "name": "set_supported_on_GPU_groups",
    "description": "Set the supported_on_GPU_groups field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "add_supported_on_GPU_groups",
    "description": "Add the given value to the supported_on_GPU_groups field of the given VGPU_type.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_supported_on_GPU_groups",
    "description": "Remove the given value from the supported_on_GPU_groups field of the given VGPU_type.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "set_enabled_on_GPU_groups",
    "description": "Set the enabled_on_GPU_groups field of the given VGPU_type.",
    "tag": "" }, 
  { "name": "add_enabled_on_GPU_groups",
    "description": "Add the given value to the enabled_on_GPU_groups field of the given VGPU_type.  If the value is already in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "remove_enabled_on_GPU_groups",
    "description": "Remove the given value from the enabled_on_GPU_groups field of the given VGPU_type.  If the value is not in that Set, then do nothing.",
    "tag": "" }, 
  { "name": "get_all",
    "description": "Return a list of all the VGPU_types known to the system.",
    "tag": "" }, 
  { "name": "get_all_records",
    "description": "Return a map of VGPU_type references to VGPU_type records for all VGPU_types known to the system.",
    "tag": "" } ] } ]
